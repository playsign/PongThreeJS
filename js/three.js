var THREE={REVISION:"62"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(obj,source){if(Object.keys)for(var keys=Object.keys(source),i=0,il=keys.length;il>i;i++){var prop=keys[i];Object.defineProperty(obj,prop,Object.getOwnPropertyDescriptor(source,prop))}else{var safeHasOwnProperty={}.hasOwnProperty;for(var prop in source)safeHasOwnProperty.call(source,prop)&&(obj[prop]=source[prop])}return obj},function(){for(var lastTime=0,vendors=["ms","moz","webkit","o"],x=0;x<vendors.length&&!self.requestAnimationFrame;++x)self.requestAnimationFrame=self[vendors[x]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[vendors[x]+"CancelAnimationFrame"]||self[vendors[x]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(callback){var currTime=Date.now(),timeToCall=Math.max(0,16-(currTime-lastTime)),id=self.setTimeout(function(){callback(currTime+timeToCall)},timeToCall);return lastTime=currTime+timeToCall,id}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(id){self.clearTimeout(id)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(value){return void 0!==value&&this.set(value),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(value){return value instanceof THREE.Color?this.copy(value):"number"==typeof value?this.setHex(value):"string"==typeof value&&this.setStyle(value),this},setHex:function(hex){return hex=Math.floor(hex),this.r=(hex>>16&255)/255,this.g=(hex>>8&255)/255,this.b=(255&hex)/255,this},setRGB:function(r,g,b){return this.r=r,this.g=g,this.b=b,this},setHSL:function(h,s,l){if(0===s)this.r=this.g=this.b=l;else{var hue2rgb=function(p,q,t){return 0>t&&(t+=1),t>1&&(t-=1),1/6>t?p+6*(q-p)*t:.5>t?q:2/3>t?p+6*(q-p)*(2/3-t):p},p=.5>=l?l*(1+s):l+s-l*s,q=2*l-p;this.r=hue2rgb(q,p,h+1/3),this.g=hue2rgb(q,p,h),this.b=hue2rgb(q,p,h-1/3)}return this},setStyle:function(style){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(style)){var color=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(style);return this.r=Math.min(255,parseInt(color[1],10))/255,this.g=Math.min(255,parseInt(color[2],10))/255,this.b=Math.min(255,parseInt(color[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(style)){var color=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(style);return this.r=Math.min(100,parseInt(color[1],10))/100,this.g=Math.min(100,parseInt(color[2],10))/100,this.b=Math.min(100,parseInt(color[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(style)){var color=/^\#([0-9a-f]{6})$/i.exec(style);return this.setHex(parseInt(color[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(style)){var color=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(style);return this.setHex(parseInt(color[1]+color[1]+color[2]+color[2]+color[3]+color[3],16)),this}return/^(\w+)$/i.test(style)?(this.setHex(THREE.ColorKeywords[style]),this):void 0},copy:function(color){return this.r=color.r,this.g=color.g,this.b=color.b,this},copyGammaToLinear:function(color){return this.r=color.r*color.r,this.g=color.g*color.g,this.b=color.b*color.b,this},copyLinearToGamma:function(color){return this.r=Math.sqrt(color.r),this.g=Math.sqrt(color.g),this.b=Math.sqrt(color.b),this},convertGammaToLinear:function(){var r=this.r,g=this.g,b=this.b;return this.r=r*r,this.g=g*g,this.b=b*b,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var hsl={h:0,s:0,l:0};return function(){var hue,saturation,r=this.r,g=this.g,b=this.b,max=Math.max(r,g,b),min=Math.min(r,g,b),lightness=(min+max)/2;if(min===max)hue=0,saturation=0;else{var delta=max-min;switch(saturation=.5>=lightness?delta/(max+min):delta/(2-max-min),max){case r:hue=(g-b)/delta+(b>g?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4}hue/=6}return hsl.h=hue,hsl.s=saturation,hsl.l=lightness,hsl}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(h,s,l){var hsl=this.getHSL();return hsl.h+=h,hsl.s+=s,hsl.l+=l,this.setHSL(hsl.h,hsl.s,hsl.l),this},add:function(color){return this.r+=color.r,this.g+=color.g,this.b+=color.b,this},addColors:function(color1,color2){return this.r=color1.r+color2.r,this.g=color1.g+color2.g,this.b=color1.b+color2.b,this},addScalar:function(s){return this.r+=s,this.g+=s,this.b+=s,this},multiply:function(color){return this.r*=color.r,this.g*=color.g,this.b*=color.b,this},multiplyScalar:function(s){return this.r*=s,this.g*=s,this.b*=s,this},lerp:function(color,alpha){return this.r+=(color.r-this.r)*alpha,this.g+=(color.g-this.g)*alpha,this.b+=(color.b-this.b)*alpha,this},equals:function(c){return c.r===this.r&&c.g===this.g&&c.b===this.b},fromArray:function(array){return this.r=array[0],this.g=array[1],this.b=array[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(x,y,z,w){this._x=x||0,this._y=y||0,this._z=z||0,this._w=void 0!==w?w:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(value){this._x=value,this._updateEuler()},get y(){return this._y},set y(value){this._y=value,this._updateEuler()},get z(){return this._z},set z(value){this._z=value,this._updateEuler()},get w(){return this._w},set w(value){this._w=value,this._updateEuler()},set:function(x,y,z,w){return this._x=x,this._y=y,this._z=z,this._w=w,this._updateEuler(),this},copy:function(quaternion){return this._x=quaternion._x,this._y=quaternion._y,this._z=quaternion._z,this._w=quaternion._w,this._updateEuler(),this},setFromEuler:function(euler,update){if(euler instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c1=Math.cos(euler._x/2),c2=Math.cos(euler._y/2),c3=Math.cos(euler._z/2),s1=Math.sin(euler._x/2),s2=Math.sin(euler._y/2),s3=Math.sin(euler._z/2);return"XYZ"===euler.order?(this._x=s1*c2*c3+c1*s2*s3,this._y=c1*s2*c3-s1*c2*s3,this._z=c1*c2*s3+s1*s2*c3,this._w=c1*c2*c3-s1*s2*s3):"YXZ"===euler.order?(this._x=s1*c2*c3+c1*s2*s3,this._y=c1*s2*c3-s1*c2*s3,this._z=c1*c2*s3-s1*s2*c3,this._w=c1*c2*c3+s1*s2*s3):"ZXY"===euler.order?(this._x=s1*c2*c3-c1*s2*s3,this._y=c1*s2*c3+s1*c2*s3,this._z=c1*c2*s3+s1*s2*c3,this._w=c1*c2*c3-s1*s2*s3):"ZYX"===euler.order?(this._x=s1*c2*c3-c1*s2*s3,this._y=c1*s2*c3+s1*c2*s3,this._z=c1*c2*s3-s1*s2*c3,this._w=c1*c2*c3+s1*s2*s3):"YZX"===euler.order?(this._x=s1*c2*c3+c1*s2*s3,this._y=c1*s2*c3+s1*c2*s3,this._z=c1*c2*s3-s1*s2*c3,this._w=c1*c2*c3-s1*s2*s3):"XZY"===euler.order&&(this._x=s1*c2*c3-c1*s2*s3,this._y=c1*s2*c3-s1*c2*s3,this._z=c1*c2*s3+s1*s2*c3,this._w=c1*c2*c3+s1*s2*s3),update!==!1&&this._updateEuler(),this},setFromAxisAngle:function(axis,angle){var halfAngle=angle/2,s=Math.sin(halfAngle);return this._x=axis.x*s,this._y=axis.y*s,this._z=axis.z*s,this._w=Math.cos(halfAngle),this._updateEuler(),this},setFromRotationMatrix:function(m){var s,te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;return trace>0?(s=.5/Math.sqrt(trace+1),this._w=.25/s,this._x=(m32-m23)*s,this._y=(m13-m31)*s,this._z=(m21-m12)*s):m11>m22&&m11>m33?(s=2*Math.sqrt(1+m11-m22-m33),this._w=(m32-m23)/s,this._x=.25*s,this._y=(m12+m21)/s,this._z=(m13+m31)/s):m22>m33?(s=2*Math.sqrt(1+m22-m11-m33),this._w=(m13-m31)/s,this._x=(m12+m21)/s,this._y=.25*s,this._z=(m23+m32)/s):(s=2*Math.sqrt(1+m33-m11-m22),this._w=(m21-m12)/s,this._x=(m13+m31)/s,this._y=(m23+m32)/s,this._z=.25*s),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var l=this.length();return 0===l?(this._x=0,this._y=0,this._z=0,this._w=1):(l=1/l,this._x=this._x*l,this._y=this._y*l,this._z=this._z*l,this._w=this._w*l),this},multiply:function(q,p){return void 0!==p?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)},multiplyQuaternions:function(a,b){var qax=a._x,qay=a._y,qaz=a._z,qaw=a._w,qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;return this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby,this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz,this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx,this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz,this._updateEuler(),this},multiplyVector3:function(vector){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),vector.applyQuaternion(this)},slerp:function(qb,t){var x=this._x,y=this._y,z=this._z,w=this._w,cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(0>cosHalfTheta?(this._w=-qb._w,this._x=-qb._x,this._y=-qb._y,this._z=-qb._z,cosHalfTheta=-cosHalfTheta):this.copy(qb),cosHalfTheta>=1)return this._w=w,this._x=x,this._y=y,this._z=z,this;var halfTheta=Math.acos(cosHalfTheta),sinHalfTheta=Math.sqrt(1-cosHalfTheta*cosHalfTheta);if(Math.abs(sinHalfTheta)<.001)return this._w=.5*(w+this._w),this._x=.5*(x+this._x),this._y=.5*(y+this._y),this._z=.5*(z+this._z),this;var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;return this._w=w*ratioA+this._w*ratioB,this._x=x*ratioA+this._x*ratioB,this._y=y*ratioA+this._y*ratioB,this._z=z*ratioA+this._z*ratioB,this._updateEuler(),this},equals:function(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w},fromArray:function(array){return this._x=array[0],this._y=array[1],this._z=array[2],this._w=array[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t)},THREE.Vector2=function(x,y){this.x=x||0,this.y=y||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(x,y){return this.x=x,this.y=y,this},setX:function(x){return this.x=x,this},setY:function(y){return this.y=y,this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+index)}},copy:function(v){return this.x=v.x,this.y=v.y,this},add:function(v,w){return void 0!==w?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(v,w)):(this.x+=v.x,this.y+=v.y,this)},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScalar:function(s){return this.x+=s,this.y+=s,this},sub:function(v,w){return void 0!==w?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w)):(this.x-=v.x,this.y-=v.y,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiplyScalar:function(s){return this.x*=s,this.y*=s,this},divideScalar:function(scalar){if(0!==scalar){var invScalar=1/scalar;this.x*=invScalar,this.y*=invScalar}else this.x=0,this.y=0;return this},min:function(v){return this.x>v.x&&(this.x=v.x),this.y>v.y&&(this.y=v.y),this},max:function(v){return this.x<v.x&&(this.x=v.x),this.y<v.y&&(this.y=v.y),this},clamp:function(min,max){return this.x<min.x?this.x=min.x:this.x>max.x&&(this.x=max.x),this.y<min.y?this.y=min.y:this.y>max.y&&(this.y=max.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy},setLength:function(l){var oldLength=this.length();return 0!==oldLength&&l!==oldLength&&this.multiplyScalar(l/oldLength),this},lerp:function(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this},equals:function(v){return v.x===this.x&&v.y===this.y},fromArray:function(array){return this.x=array[0],this.y=array[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(x,y,z){this.x=x||0,this.y=y||0,this.z=z||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(x,y,z){return this.x=x,this.y=y,this.z=z,this},setX:function(x){return this.x=x,this},setY:function(y){return this.y=y,this},setZ:function(z){return this.z=z,this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+index)}},copy:function(v){return this.x=v.x,this.y=v.y,this.z=v.z,this},add:function(v,w){return void 0!==w?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(v,w)):(this.x+=v.x,this.y+=v.y,this.z+=v.z,this)},addScalar:function(s){return this.x+=s,this.y+=s,this.z+=s,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(v,w){return void 0!==w?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w)):(this.x-=v.x,this.y-=v.y,this.z-=v.z,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(v,w){return void 0!==w?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(v,w)):(this.x*=v.x,this.y*=v.y,this.z*=v.z,this)},multiplyScalar:function(scalar){return this.x*=scalar,this.y*=scalar,this.z*=scalar,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyMatrix3:function(m){var x=this.x,y=this.y,z=this.z,e=m.elements;return this.x=e[0]*x+e[3]*y+e[6]*z,this.y=e[1]*x+e[4]*y+e[7]*z,this.z=e[2]*x+e[5]*y+e[8]*z,this},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z,e=m.elements;return this.x=e[0]*x+e[4]*y+e[8]*z+e[12],this.y=e[1]*x+e[5]*y+e[9]*z+e[13],this.z=e[2]*x+e[6]*y+e[10]*z+e[14],this},applyProjection:function(m){var x=this.x,y=this.y,z=this.z,e=m.elements,d=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);return this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*d,this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*d,this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*d,this},applyQuaternion:function(q){var x=this.x,y=this.y,z=this.z,qx=q.x,qy=q.y,qz=q.z,qw=q.w,ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;return this.x=ix*qw+iw*-qx+iy*-qz-iz*-qy,this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz,this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx,this},transformDirection:function(m){var x=this.x,y=this.y,z=this.z,e=m.elements;return this.x=e[0]*x+e[4]*y+e[8]*z,this.y=e[1]*x+e[5]*y+e[9]*z,this.z=e[2]*x+e[6]*y+e[10]*z,this.normalize(),this},divide:function(v){return this.x/=v.x,this.y/=v.y,this.z/=v.z,this},divideScalar:function(scalar){if(0!==scalar){var invScalar=1/scalar;this.x*=invScalar,this.y*=invScalar,this.z*=invScalar}else this.x=0,this.y=0,this.z=0;return this},min:function(v){return this.x>v.x&&(this.x=v.x),this.y>v.y&&(this.y=v.y),this.z>v.z&&(this.z=v.z),this},max:function(v){return this.x<v.x&&(this.x=v.x),this.y<v.y&&(this.y=v.y),this.z<v.z&&(this.z=v.z),this},clamp:function(min,max){return this.x<min.x?this.x=min.x:this.x>max.x&&(this.x=max.x),this.y<min.y?this.y=min.y:this.y>max.y&&(this.y=max.y),this.z<min.z?this.z=min.z:this.z>max.z&&(this.z=max.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(l){var oldLength=this.length();return 0!==oldLength&&l!==oldLength&&this.multiplyScalar(l/oldLength),this},lerp:function(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this.z+=(v.z-this.z)*alpha,this},cross:function(v,w){if(void 0!==w)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(v,w);var x=this.x,y=this.y,z=this.z;return this.x=y*v.z-z*v.y,this.y=z*v.x-x*v.z,this.z=x*v.y-y*v.x,this},crossVectors:function(a,b){var ax=a.x,ay=a.y,az=a.z,bx=b.x,by=b.y,bz=b.z;return this.x=ay*bz-az*by,this.y=az*bx-ax*bz,this.z=ax*by-ay*bx,this},angleTo:function(v){var theta=this.dot(v)/(this.length()*v.length());return Math.acos(THREE.Math.clamp(theta,-1,1))},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(m){return this.x=m.elements[12],this.y=m.elements[13],this.z=m.elements[14],this},getScaleFromMatrix:function(m){var sx=this.set(m.elements[0],m.elements[1],m.elements[2]).length(),sy=this.set(m.elements[4],m.elements[5],m.elements[6]).length(),sz=this.set(m.elements[8],m.elements[9],m.elements[10]).length();return this.x=sx,this.y=sy,this.z=sz,this},getColumnFromMatrix:function(index,matrix){var offset=4*index,me=matrix.elements;return this.x=me[offset],this.y=me[offset+1],this.z=me[offset+2],this},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z},fromArray:function(array){return this.x=array[0],this.y=array[1],this.z=array[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var quaternion=new THREE.Quaternion;return function(euler){return euler instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),this.applyQuaternion(quaternion.setFromEuler(euler)),this}}(),applyAxisAngle:function(){var quaternion=new THREE.Quaternion;return function(axis,angle){return this.applyQuaternion(quaternion.setFromAxisAngle(axis,angle)),this}}(),projectOnVector:function(){var v1=new THREE.Vector3;return function(vector){v1.copy(vector).normalize();var d=this.dot(v1);return this.copy(v1).multiplyScalar(d)}}(),projectOnPlane:function(){var v1=new THREE.Vector3;return function(planeNormal){return v1.copy(this).projectOnVector(planeNormal),this.sub(v1)}}(),reflect:function(){var v1=new THREE.Vector3;return function(vector){return v1.copy(this).projectOnVector(vector).multiplyScalar(2),this.subVectors(v1,this)}}()}),THREE.Vector4=function(x,y,z,w){this.x=x||0,this.y=y||0,this.z=z||0,this.w=void 0!==w?w:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(x,y,z,w){return this.x=x,this.y=y,this.z=z,this.w=w,this},setX:function(x){return this.x=x,this},setY:function(y){return this.y=y,this},setZ:function(z){return this.z=z,this},setW:function(w){return this.w=w,this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+index)}},copy:function(v){return this.x=v.x,this.y=v.y,this.z=v.z,this.w=void 0!==v.w?v.w:1,this},add:function(v,w){return void 0!==w?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(v,w)):(this.x+=v.x,this.y+=v.y,this.z+=v.z,this.w+=v.w,this)},addScalar:function(s){return this.x+=s,this.y+=s,this.z+=s,this.w+=s,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},sub:function(v,w){return void 0!==w?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w)):(this.x-=v.x,this.y-=v.y,this.z-=v.z,this.w-=v.w,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(scalar){return this.x*=scalar,this.y*=scalar,this.z*=scalar,this.w*=scalar,this},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z,w=this.w,e=m.elements;return this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w,this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w,this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w,this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w,this},divideScalar:function(scalar){if(0!==scalar){var invScalar=1/scalar;this.x*=invScalar,this.y*=invScalar,this.z*=invScalar,this.w*=invScalar}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);return 1e-4>s?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this},setAxisAngleFromRotationMatrix:function(m){var angle,x,y,z,epsilon=.01,epsilon2=.1,te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){if(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2)return this.set(1,0,0,0),this;angle=Math.PI;var xx=(m11+1)/2,yy=(m22+1)/2,zz=(m33+1)/2,xy=(m12+m21)/4,xz=(m13+m31)/4,yz=(m23+m32)/4;return xx>yy&&xx>zz?epsilon>xx?(x=0,y=.707106781,z=.707106781):(x=Math.sqrt(xx),y=xy/x,z=xz/x):yy>zz?epsilon>yy?(x=.707106781,y=0,z=.707106781):(y=Math.sqrt(yy),x=xy/y,z=yz/y):epsilon>zz?(x=.707106781,y=.707106781,z=0):(z=Math.sqrt(zz),x=xz/z,y=yz/z),this.set(x,y,z,angle),this}var s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));return Math.abs(s)<.001&&(s=1),this.x=(m32-m23)/s,this.y=(m13-m31)/s,this.z=(m21-m12)/s,this.w=Math.acos((m11+m22+m33-1)/2),this},min:function(v){return this.x>v.x&&(this.x=v.x),this.y>v.y&&(this.y=v.y),this.z>v.z&&(this.z=v.z),this.w>v.w&&(this.w=v.w),this},max:function(v){return this.x<v.x&&(this.x=v.x),this.y<v.y&&(this.y=v.y),this.z<v.z&&(this.z=v.z),this.w<v.w&&(this.w=v.w),this},clamp:function(min,max){return this.x<min.x?this.x=min.x:this.x>max.x&&(this.x=max.x),this.y<min.y?this.y=min.y:this.y>max.y&&(this.y=max.y),this.z<min.z?this.z=min.z:this.z>max.z&&(this.z=max.z),this.w<min.w?this.w=min.w:this.w>max.w&&(this.w=max.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(l){var oldLength=this.length();return 0!==oldLength&&l!==oldLength&&this.multiplyScalar(l/oldLength),this},lerp:function(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this.z+=(v.z-this.z)*alpha,this.w+=(v.w-this.w)*alpha,this},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w},fromArray:function(array){return this.x=array[0],this.y=array[1],this.z=array[2],this.w=array[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(x,y,z,order){this._x=x||0,this._y=y||0,this._z=z||0,this._order=order||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(value){this._x=value,this._updateQuaternion()},get y(){return this._y},set y(value){this._y=value,this._updateQuaternion()},get z(){return this._z},set z(value){this._z=value,this._updateQuaternion()},get order(){return this._order},set order(value){this._order=value,this._updateQuaternion()},set:function(x,y,z,order){return this._x=x,this._y=y,this._z=z,this._order=order||this._order,this._updateQuaternion(),this},copy:function(euler){return this._x=euler._x,this._y=euler._y,this._z=euler._z,this._order=euler._order,this._updateQuaternion(),this},setFromRotationMatrix:function(m,order){function clamp(x){return Math.min(Math.max(x,-1),1)}var te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];return order=order||this._order,"XYZ"===order?(this._y=Math.asin(clamp(m13)),Math.abs(m13)<.99999?(this._x=Math.atan2(-m23,m33),this._z=Math.atan2(-m12,m11)):(this._x=Math.atan2(m32,m22),this._z=0)):"YXZ"===order?(this._x=Math.asin(-clamp(m23)),Math.abs(m23)<.99999?(this._y=Math.atan2(m13,m33),this._z=Math.atan2(m21,m22)):(this._y=Math.atan2(-m31,m11),this._z=0)):"ZXY"===order?(this._x=Math.asin(clamp(m32)),Math.abs(m32)<.99999?(this._y=Math.atan2(-m31,m33),this._z=Math.atan2(-m12,m22)):(this._y=0,this._z=Math.atan2(m21,m11))):"ZYX"===order?(this._y=Math.asin(-clamp(m31)),Math.abs(m31)<.99999?(this._x=Math.atan2(m32,m33),this._z=Math.atan2(m21,m11)):(this._x=0,this._z=Math.atan2(-m12,m22))):"YZX"===order?(this._z=Math.asin(clamp(m21)),Math.abs(m21)<.99999?(this._x=Math.atan2(-m23,m22),this._y=Math.atan2(-m31,m11)):(this._x=0,this._y=Math.atan2(m13,m33))):"XZY"===order?(this._z=Math.asin(-clamp(m12)),Math.abs(m12)<.99999?(this._x=Math.atan2(m32,m22),this._y=Math.atan2(m13,m11)):(this._x=Math.atan2(-m23,m33),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+order),this._order=order,this._updateQuaternion(),this
},setFromQuaternion:function(q,order,update){function clamp(x){return Math.min(Math.max(x,-1),1)}var sqx=q.x*q.x,sqy=q.y*q.y,sqz=q.z*q.z,sqw=q.w*q.w;return order=order||this._order,"XYZ"===order?(this._x=Math.atan2(2*(q.x*q.w-q.y*q.z),sqw-sqx-sqy+sqz),this._y=Math.asin(clamp(2*(q.x*q.z+q.y*q.w))),this._z=Math.atan2(2*(q.z*q.w-q.x*q.y),sqw+sqx-sqy-sqz)):"YXZ"===order?(this._x=Math.asin(clamp(2*(q.x*q.w-q.y*q.z))),this._y=Math.atan2(2*(q.x*q.z+q.y*q.w),sqw-sqx-sqy+sqz),this._z=Math.atan2(2*(q.x*q.y+q.z*q.w),sqw-sqx+sqy-sqz)):"ZXY"===order?(this._x=Math.asin(clamp(2*(q.x*q.w+q.y*q.z))),this._y=Math.atan2(2*(q.y*q.w-q.z*q.x),sqw-sqx-sqy+sqz),this._z=Math.atan2(2*(q.z*q.w-q.x*q.y),sqw-sqx+sqy-sqz)):"ZYX"===order?(this._x=Math.atan2(2*(q.x*q.w+q.z*q.y),sqw-sqx-sqy+sqz),this._y=Math.asin(clamp(2*(q.y*q.w-q.x*q.z))),this._z=Math.atan2(2*(q.x*q.y+q.z*q.w),sqw+sqx-sqy-sqz)):"YZX"===order?(this._x=Math.atan2(2*(q.x*q.w-q.z*q.y),sqw-sqx+sqy-sqz),this._y=Math.atan2(2*(q.y*q.w-q.x*q.z),sqw+sqx-sqy-sqz),this._z=Math.asin(clamp(2*(q.x*q.y+q.z*q.w)))):"XZY"===order?(this._x=Math.atan2(2*(q.x*q.w+q.y*q.z),sqw-sqx+sqy-sqz),this._y=Math.atan2(2*(q.x*q.z+q.y*q.w),sqw+sqx-sqy-sqz),this._z=Math.asin(clamp(2*(q.z*q.w-q.x*q.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+order),this._order=order,update!==!1&&this._updateQuaternion(),this},reorder:function(){var q=new THREE.Quaternion;return function(newOrder){q.setFromEuler(this),this.setFromQuaternion(q,newOrder)}}(),fromArray:function(array){return this._x=array[0],this._y=array[1],this._z=array[2],void 0!==array[3]&&(this._order=array[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(start,end){this.start=void 0!==start?start:new THREE.Vector3,this.end=void 0!==end?end:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(start,end){return this.start.copy(start),this.end.copy(end),this},copy:function(line){return this.start.copy(line.start),this.end.copy(line.end),this},center:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,optionalTarget){var result=optionalTarget||new THREE.Vector3;return this.delta(result).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var startP=new THREE.Vector3,startEnd=new THREE.Vector3;return function(point,clampToLine){startP.subVectors(point,this.start),startEnd.subVectors(this.end,this.start);var startEnd2=startEnd.dot(startEnd),startEnd_startP=startEnd.dot(startP),t=startEnd_startP/startEnd2;return clampToLine&&(t=THREE.Math.clamp(t,0,1)),t}}(),closestPointToPoint:function(point,clampToLine,optionalTarget){var t=this.closestPointToPointParameter(point,clampToLine),result=optionalTarget||new THREE.Vector3;return this.delta(result).multiplyScalar(t).add(this.start)},applyMatrix4:function(matrix){return this.start.applyMatrix4(matrix),this.end.applyMatrix4(matrix),this},equals:function(line){return line.start.equals(this.start)&&line.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(min,max){this.min=void 0!==min?min:new THREE.Vector2(1/0,1/0),this.max=void 0!==max?max:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(min,max){return this.min.copy(min),this.max.copy(max),this},setFromPoints:function(points){if(points.length>0){var point=points[0];this.min.copy(point),this.max.copy(point);for(var i=1,il=points.length;il>i;i++)point=points[i],point.x<this.min.x?this.min.x=point.x:point.x>this.max.x&&(this.max.x=point.x),point.y<this.min.y?this.min.y=point.y:point.y>this.max.y&&(this.max.y=point.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var v1=new THREE.Vector2;return function(center,size){var halfSize=v1.copy(size).multiplyScalar(.5);return this.min.copy(center).sub(halfSize),this.max.copy(center).add(halfSize),this}}(),copy:function(box){return this.min.copy(box.min),this.max.copy(box.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(optionalTarget){var result=optionalTarget||new THREE.Vector2;return result.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(optionalTarget){var result=optionalTarget||new THREE.Vector2;return result.subVectors(this.max,this.min)},expandByPoint:function(point){return this.min.min(point),this.max.max(point),this},expandByVector:function(vector){return this.min.sub(vector),this.max.add(vector),this},expandByScalar:function(scalar){return this.min.addScalar(-scalar),this.max.addScalar(scalar),this},containsPoint:function(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?!1:!0},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y?!0:!1},getParameter:function(point){return new THREE.Vector2((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(box){return box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?!1:!0},clampPoint:function(point,optionalTarget){var result=optionalTarget||new THREE.Vector2;return result.copy(point).clamp(this.min,this.max)},distanceToPoint:function(){var v1=new THREE.Vector2;return function(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length()}}(),intersect:function(box){return this.min.max(box.min),this.max.min(box.max),this},union:function(box){return this.min.min(box.min),this.max.max(box.max),this},translate:function(offset){return this.min.add(offset),this.max.add(offset),this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(min,max){this.min=void 0!==min?min:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==max?max:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(min,max){return this.min.copy(min),this.max.copy(max),this},addPoint:function(point){point.x<this.min.x?this.min.x=point.x:point.x>this.max.x&&(this.max.x=point.x),point.y<this.min.y?this.min.y=point.y:point.y>this.max.y&&(this.max.y=point.y),point.z<this.min.z?this.min.z=point.z:point.z>this.max.z&&(this.max.z=point.z)},setFromPoints:function(points){if(points.length>0){var point=points[0];this.min.copy(point),this.max.copy(point);for(var i=1,il=points.length;il>i;i++)this.addPoint(points[i])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var v1=new THREE.Vector3;return function(center,size){var halfSize=v1.copy(size).multiplyScalar(.5);return this.min.copy(center).sub(halfSize),this.max.copy(center).add(halfSize),this}}(),setFromObject:function(){var v1=new THREE.Vector3;return function(object){var scope=this;return object.updateMatrixWorld(!0),this.makeEmpty(),object.traverse(function(node){if(void 0!==node.geometry&&void 0!==node.geometry.vertices)for(var vertices=node.geometry.vertices,i=0,il=vertices.length;il>i;i++)v1.copy(vertices[i]),v1.applyMatrix4(node.matrixWorld),scope.expandByPoint(v1)}),this}}(),copy:function(box){return this.min.copy(box.min),this.max.copy(box.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.subVectors(this.max,this.min)},expandByPoint:function(point){return this.min.min(point),this.max.max(point),this},expandByVector:function(vector){return this.min.sub(vector),this.max.add(vector),this},expandByScalar:function(scalar){return this.min.addScalar(-scalar),this.max.addScalar(scalar),this},containsPoint:function(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?!1:!0},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z?!0:!1},getParameter:function(point){return new THREE.Vector3((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(box){return box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?!1:!0},clampPoint:function(point,optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.copy(point).clamp(this.min,this.max)},distanceToPoint:function(){var v1=new THREE.Vector3;return function(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length()}}(),getBoundingSphere:function(){var v1=new THREE.Vector3;return function(optionalTarget){var result=optionalTarget||new THREE.Sphere;return result.center=this.center(),result.radius=.5*this.size(v1).length(),result}}(),intersect:function(box){return this.min.max(box.min),this.max.min(box.max),this},union:function(box){return this.min.min(box.min),this.max.max(box.max),this},applyMatrix4:function(){var points=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(matrix){return points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix),points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix),points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix),points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix),points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix),points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix),points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix),points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix),this.makeEmpty(),this.setFromPoints(points),this}}(),translate:function(offset){return this.min.add(offset),this.max.add(offset),this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(n11,n12,n13,n21,n22,n23,n31,n32,n33){this.elements=new Float32Array(9),this.set(void 0!==n11?n11:1,n12||0,n13||0,n21||0,void 0!==n22?n22:1,n23||0,n31||0,n32||0,void 0!==n33?n33:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;return te[0]=n11,te[3]=n12,te[6]=n13,te[1]=n21,te[4]=n22,te[7]=n23,te[2]=n31,te[5]=n32,te[8]=n33,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(m){var me=m.elements;return this.set(me[0],me[3],me[6],me[1],me[4],me[7],me[2],me[5],me[8]),this},multiplyVector3:function(vector){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),vector.applyMatrix3(this)},multiplyVector3Array:function(){var v1=new THREE.Vector3;return function(a){for(var i=0,il=a.length;il>i;i+=3)v1.x=a[i],v1.y=a[i+1],v1.z=a[i+2],v1.applyMatrix3(this),a[i]=v1.x,a[i+1]=v1.y,a[i+2]=v1.z;return a}}(),multiplyScalar:function(s){var te=this.elements;return te[0]*=s,te[3]*=s,te[6]*=s,te[1]*=s,te[4]*=s,te[7]*=s,te[2]*=s,te[5]*=s,te[8]*=s,this},determinant:function(){var te=this.elements,a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g},getInverse:function(matrix,throwOnInvertible){var me=matrix.elements,te=this.elements;te[0]=me[10]*me[5]-me[6]*me[9],te[1]=-me[10]*me[1]+me[2]*me[9],te[2]=me[6]*me[1]-me[2]*me[5],te[3]=-me[10]*me[4]+me[6]*me[8],te[4]=me[10]*me[0]-me[2]*me[8],te[5]=-me[6]*me[0]+me[2]*me[4],te[6]=me[9]*me[4]-me[5]*me[8],te[7]=-me[9]*me[0]+me[1]*me[8],te[8]=me[5]*me[0]-me[1]*me[4];var det=me[0]*te[0]+me[1]*te[3]+me[2]*te[6];if(0===det){var msg="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(throwOnInvertible)throw new Error(msg);return console.warn(msg),this.identity(),this}return this.multiplyScalar(1/det),this},transpose:function(){var tmp,m=this.elements;return tmp=m[1],m[1]=m[3],m[3]=tmp,tmp=m[2],m[2]=m[6],m[6]=tmp,tmp=m[5],m[5]=m[7],m[7]=tmp,this},getNormalMatrix:function(m){return this.getInverse(m).transpose(),this},transposeIntoArray:function(r){var m=this.elements;return r[0]=m[0],r[1]=m[3],r[2]=m[6],r[3]=m[1],r[4]=m[4],r[5]=m[7],r[6]=m[2],r[7]=m[5],r[8]=m[8],this},clone:function(){var te=this.elements;return new THREE.Matrix3(te[0],te[3],te[6],te[1],te[4],te[7],te[2],te[5],te[8])}},THREE.Matrix4=function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){this.elements=new Float32Array(16);var te=this.elements;te[0]=void 0!==n11?n11:1,te[4]=n12||0,te[8]=n13||0,te[12]=n14||0,te[1]=n21||0,te[5]=void 0!==n22?n22:1,te[9]=n23||0,te[13]=n24||0,te[2]=n31||0,te[6]=n32||0,te[10]=void 0!==n33?n33:1,te[14]=n34||0,te[3]=n41||0,te[7]=n42||0,te[11]=n43||0,te[15]=void 0!==n44?n44:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;return te[0]=n11,te[4]=n12,te[8]=n13,te[12]=n14,te[1]=n21,te[5]=n22,te[9]=n23,te[13]=n24,te[2]=n31,te[6]=n32,te[10]=n33,te[14]=n34,te[3]=n41,te[7]=n42,te[11]=n43,te[15]=n44,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(m){return this.elements.set(m.elements),this},extractPosition:function(m){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(m)},copyPosition:function(m){var te=this.elements,me=m.elements;return te[12]=me[12],te[13]=me[13],te[14]=me[14],this},extractRotation:function(){var v1=new THREE.Vector3;return function(m){var te=this.elements,me=m.elements,scaleX=1/v1.set(me[0],me[1],me[2]).length(),scaleY=1/v1.set(me[4],me[5],me[6]).length(),scaleZ=1/v1.set(me[8],me[9],me[10]).length();return te[0]=me[0]*scaleX,te[1]=me[1]*scaleX,te[2]=me[2]*scaleX,te[4]=me[4]*scaleY,te[5]=me[5]*scaleY,te[6]=me[6]*scaleY,te[8]=me[8]*scaleZ,te[9]=me[9]*scaleZ,te[10]=me[10]*scaleZ,this}}(),makeRotationFromEuler:function(euler){euler instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var te=this.elements,x=euler.x,y=euler.y,z=euler.z,a=Math.cos(x),b=Math.sin(x),c=Math.cos(y),d=Math.sin(y),e=Math.cos(z),f=Math.sin(z);if("XYZ"===euler.order){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e,te[4]=-c*f,te[8]=d,te[1]=af+be*d,te[5]=ae-bf*d,te[9]=-b*c,te[2]=bf-ae*d,te[6]=be+af*d,te[10]=a*c}else if("YXZ"===euler.order){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b,te[4]=de*b-cf,te[8]=a*d,te[1]=a*f,te[5]=a*e,te[9]=-b,te[2]=cf*b-de,te[6]=df+ce*b,te[10]=a*c}else if("ZXY"===euler.order){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b,te[4]=-a*f,te[8]=de+cf*b,te[1]=cf+de*b,te[5]=a*e,te[9]=df-ce*b,te[2]=-a*d,te[6]=b,te[10]=a*c}else if("ZYX"===euler.order){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e,te[4]=be*d-af,te[8]=ae*d+bf,te[1]=c*f,te[5]=bf*d+ae,te[9]=af*d-be,te[2]=-d,te[6]=b*c,te[10]=a*c}else if("YZX"===euler.order){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e,te[4]=bd-ac*f,te[8]=bc*f+ad,te[1]=f,te[5]=a*e,te[9]=-b*e,te[2]=-d*e,te[6]=ad*f+bc,te[10]=ac-bd*f}else if("XZY"===euler.order){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e,te[4]=-f,te[8]=d*e,te[1]=ac*f+bd,te[5]=a*e,te[9]=ad*f-bc,te[2]=bc*f-ad,te[6]=b*e,te[10]=bd*f+ac}return te[3]=0,te[7]=0,te[11]=0,te[12]=0,te[13]=0,te[14]=0,te[15]=1,this},setRotationFromQuaternion:function(q){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(q)},makeRotationFromQuaternion:function(q){var te=this.elements,x=q.x,y=q.y,z=q.z,w=q.w,x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;return te[0]=1-(yy+zz),te[4]=xy-wz,te[8]=xz+wy,te[1]=xy+wz,te[5]=1-(xx+zz),te[9]=yz-wx,te[2]=xz-wy,te[6]=yz+wx,te[10]=1-(xx+yy),te[3]=0,te[7]=0,te[11]=0,te[12]=0,te[13]=0,te[14]=0,te[15]=1,this},lookAt:function(){var x=new THREE.Vector3,y=new THREE.Vector3,z=new THREE.Vector3;return function(eye,target,up){var te=this.elements;return z.subVectors(eye,target).normalize(),0===z.length()&&(z.z=1),x.crossVectors(up,z).normalize(),0===x.length()&&(z.x+=1e-4,x.crossVectors(up,z).normalize()),y.crossVectors(z,x),te[0]=x.x,te[4]=y.x,te[8]=z.x,te[1]=x.y,te[5]=y.y,te[9]=z.y,te[2]=x.z,te[6]=y.z,te[10]=z.z,this}}(),multiply:function(m,n){return void 0!==n?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(m,n)):this.multiplyMatrices(this,m)},multiplyMatrices:function(a,b){var ae=a.elements,be=b.elements,te=this.elements,a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12],a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13],a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14],a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15],b11=be[0],b12=be[4],b13=be[8],b14=be[12],b21=be[1],b22=be[5],b23=be[9],b24=be[13],b31=be[2],b32=be[6],b33=be[10],b34=be[14],b41=be[3],b42=be[7],b43=be[11],b44=be[15];return te[0]=a11*b11+a12*b21+a13*b31+a14*b41,te[4]=a11*b12+a12*b22+a13*b32+a14*b42,te[8]=a11*b13+a12*b23+a13*b33+a14*b43,te[12]=a11*b14+a12*b24+a13*b34+a14*b44,te[1]=a21*b11+a22*b21+a23*b31+a24*b41,te[5]=a21*b12+a22*b22+a23*b32+a24*b42,te[9]=a21*b13+a22*b23+a23*b33+a24*b43,te[13]=a21*b14+a22*b24+a23*b34+a24*b44,te[2]=a31*b11+a32*b21+a33*b31+a34*b41,te[6]=a31*b12+a32*b22+a33*b32+a34*b42,te[10]=a31*b13+a32*b23+a33*b33+a34*b43,te[14]=a31*b14+a32*b24+a33*b34+a34*b44,te[3]=a41*b11+a42*b21+a43*b31+a44*b41,te[7]=a41*b12+a42*b22+a43*b32+a44*b42,te[11]=a41*b13+a42*b23+a43*b33+a44*b43,te[15]=a41*b14+a42*b24+a43*b34+a44*b44,this},multiplyToArray:function(a,b,r){var te=this.elements;return this.multiplyMatrices(a,b),r[0]=te[0],r[1]=te[1],r[2]=te[2],r[3]=te[3],r[4]=te[4],r[5]=te[5],r[6]=te[6],r[7]=te[7],r[8]=te[8],r[9]=te[9],r[10]=te[10],r[11]=te[11],r[12]=te[12],r[13]=te[13],r[14]=te[14],r[15]=te[15],this},multiplyScalar:function(s){var te=this.elements;return te[0]*=s,te[4]*=s,te[8]*=s,te[12]*=s,te[1]*=s,te[5]*=s,te[9]*=s,te[13]*=s,te[2]*=s,te[6]*=s,te[10]*=s,te[14]*=s,te[3]*=s,te[7]*=s,te[11]*=s,te[15]*=s,this},multiplyVector3:function(vector){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),vector.applyProjection(this)},multiplyVector4:function(vector){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),vector.applyMatrix4(this)},multiplyVector3Array:function(){var v1=new THREE.Vector3;return function(a){for(var i=0,il=a.length;il>i;i+=3)v1.x=a[i],v1.y=a[i+1],v1.z=a[i+2],v1.applyProjection(this),a[i]=v1.x,a[i+1]=v1.y,a[i+2]=v1.z;return a}}(),rotateAxis:function(v){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),v.transformDirection(this)},crossVector:function(vector){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),vector.applyMatrix4(this)},determinant:function(){var te=this.elements,n11=te[0],n12=te[4],n13=te[8],n14=te[12],n21=te[1],n22=te[5],n23=te[9],n24=te[13],n31=te[2],n32=te[6],n33=te[10],n34=te[14],n41=te[3],n42=te[7],n43=te[11],n44=te[15];return n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31)},transpose:function(){var tmp,te=this.elements;return tmp=te[1],te[1]=te[4],te[4]=tmp,tmp=te[2],te[2]=te[8],te[8]=tmp,tmp=te[6],te[6]=te[9],te[9]=tmp,tmp=te[3],te[3]=te[12],te[12]=tmp,tmp=te[7],te[7]=te[13],te[13]=tmp,tmp=te[11],te[11]=te[14],te[14]=tmp,this},flattenToArray:function(flat){var te=this.elements;return flat[0]=te[0],flat[1]=te[1],flat[2]=te[2],flat[3]=te[3],flat[4]=te[4],flat[5]=te[5],flat[6]=te[6],flat[7]=te[7],flat[8]=te[8],flat[9]=te[9],flat[10]=te[10],flat[11]=te[11],flat[12]=te[12],flat[13]=te[13],flat[14]=te[14],flat[15]=te[15],flat},flattenToArrayOffset:function(flat,offset){var te=this.elements;return flat[offset]=te[0],flat[offset+1]=te[1],flat[offset+2]=te[2],flat[offset+3]=te[3],flat[offset+4]=te[4],flat[offset+5]=te[5],flat[offset+6]=te[6],flat[offset+7]=te[7],flat[offset+8]=te[8],flat[offset+9]=te[9],flat[offset+10]=te[10],flat[offset+11]=te[11],flat[offset+12]=te[12],flat[offset+13]=te[13],flat[offset+14]=te[14],flat[offset+15]=te[15],flat},getPosition:function(){var v1=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var te=this.elements;return v1.set(te[12],te[13],te[14])}}(),setPosition:function(v){var te=this.elements;return te[12]=v.x,te[13]=v.y,te[14]=v.z,this},getInverse:function(m,throwOnInvertible){var te=this.elements,me=m.elements,n11=me[0],n12=me[4],n13=me[8],n14=me[12],n21=me[1],n22=me[5],n23=me[9],n24=me[13],n31=me[2],n32=me[6],n33=me[10],n34=me[14],n41=me[3],n42=me[7],n43=me[11],n44=me[15];te[0]=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,te[4]=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,te[8]=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,te[12]=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34,te[1]=n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44,te[5]=n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44,te[9]=n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44,te[13]=n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34,te[2]=n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44,te[6]=n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44,te[10]=n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44,te[14]=n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34,te[3]=n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43,te[7]=n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43,te[11]=n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43,te[15]=n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33;var det=n11*te[0]+n21*te[4]+n31*te[8]+n41*te[12];if(0==det){var msg="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(throwOnInvertible)throw new Error(msg);return console.warn(msg),this.identity(),this}return this.multiplyScalar(1/det),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(v){var te=this.elements,x=v.x,y=v.y,z=v.z;return te[0]*=x,te[4]*=y,te[8]*=z,te[1]*=x,te[5]*=y,te[9]*=z,te[2]*=x,te[6]*=y,te[10]*=z,te[3]*=x,te[7]*=y,te[11]*=z,this},getMaxScaleOnAxis:function(){var te=this.elements,scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2],scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6],scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,Math.max(scaleYSq,scaleZSq)))},makeTranslation:function(x,y,z){return this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1),this},makeRotationX:function(theta){var c=Math.cos(theta),s=Math.sin(theta);return this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1),this},makeRotationY:function(theta){var c=Math.cos(theta),s=Math.sin(theta);return this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1),this},makeRotationZ:function(theta){var c=Math.cos(theta),s=Math.sin(theta);return this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(axis,angle){var c=Math.cos(angle),s=Math.sin(angle),t=1-c,x=axis.x,y=axis.y,z=axis.z,tx=t*x,ty=t*y;return this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1),this},makeScale:function(x,y,z){return this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1),this},compose:function(position,quaternion,scale){return this.makeRotationFromQuaternion(quaternion),this.scale(scale),this.setPosition(position),this},decompose:function(){var vector=new THREE.Vector3,matrix=new THREE.Matrix4;return function(position,quaternion,scale){var te=this.elements,sx=vector.set(te[0],te[1],te[2]).length(),sy=vector.set(te[4],te[5],te[6]).length(),sz=vector.set(te[8],te[9],te[10]).length();position.x=te[12],position.y=te[13],position.z=te[14],matrix.elements.set(this.elements);var invSX=1/sx,invSY=1/sy,invSZ=1/sz;return matrix.elements[0]*=invSX,matrix.elements[1]*=invSX,matrix.elements[2]*=invSX,matrix.elements[4]*=invSY,matrix.elements[5]*=invSY,matrix.elements[6]*=invSY,matrix.elements[8]*=invSZ,matrix.elements[9]*=invSZ,matrix.elements[10]*=invSZ,quaternion.setFromRotationMatrix(matrix),scale.x=sx,scale.y=sy,scale.z=sz,this}}(),makeFrustum:function(left,right,bottom,top,near,far){var te=this.elements,x=2*near/(right-left),y=2*near/(top-bottom),a=(right+left)/(right-left),b=(top+bottom)/(top-bottom),c=-(far+near)/(far-near),d=-2*far*near/(far-near);return te[0]=x,te[4]=0,te[8]=a,te[12]=0,te[1]=0,te[5]=y,te[9]=b,te[13]=0,te[2]=0,te[6]=0,te[10]=c,te[14]=d,te[3]=0,te[7]=0,te[11]=-1,te[15]=0,this},makePerspective:function(fov,aspect,near,far){var ymax=near*Math.tan(THREE.Math.degToRad(.5*fov)),ymin=-ymax,xmin=ymin*aspect,xmax=ymax*aspect;return this.makeFrustum(xmin,xmax,ymin,ymax,near,far)},makeOrthographic:function(left,right,top,bottom,near,far){var te=this.elements,w=right-left,h=top-bottom,p=far-near,x=(right+left)/w,y=(top+bottom)/h,z=(far+near)/p;return te[0]=2/w,te[4]=0,te[8]=0,te[12]=-x,te[1]=0,te[5]=2/h,te[9]=0,te[13]=-y,te[2]=0,te[6]=0,te[10]=-2/p,te[14]=-z,te[3]=0,te[7]=0,te[11]=0,te[15]=1,this},fromArray:function(array){return this.elements.set(array),this},toArray:function(){var te=this.elements;return[te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7],te[8],te[9],te[10],te[11],te[12],te[13],te[14],te[15]]},clone:function(){var te=this.elements;return new THREE.Matrix4(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15])}},THREE.Ray=function(origin,direction){this.origin=void 0!==origin?origin:new THREE.Vector3,this.direction=void 0!==direction?direction:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(origin,direction){return this.origin.copy(origin),this.direction.copy(direction),this},copy:function(ray){return this.origin.copy(ray.origin),this.direction.copy(ray.direction),this},at:function(t,optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var v1=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,v1)),this}}(),closestPointToPoint:function(point,optionalTarget){var result=optionalTarget||new THREE.Vector3;result.subVectors(point,this.origin);var directionDistance=result.dot(this.direction);return 0>directionDistance?result.copy(this.origin):result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin)},distanceToPoint:function(){var v1=new THREE.Vector3;return function(point){var directionDistance=v1.subVectors(point,this.origin).dot(this.direction);return 0>directionDistance?this.origin.distanceTo(point):(v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin),v1.distanceTo(point))}}(),distanceSqToSegment:function(v0,v1,optionalPointOnRay,optionalPointOnSegment){var s0,s1,sqrDist,extDet,segCenter=v0.clone().add(v1).multiplyScalar(.5),segDir=v1.clone().sub(v0).normalize(),segExtent=.5*v0.distanceTo(v1),diff=this.origin.clone().sub(segCenter),a01=-this.direction.dot(segDir),b0=diff.dot(this.direction),b1=-diff.dot(segDir),c=diff.lengthSq(),det=Math.abs(1-a01*a01);if(det>=0)if(s0=a01*b1-b0,s1=a01*b0-b1,extDet=segExtent*det,s0>=0)if(s1>=-extDet)if(extDet>=s1){var invDet=1/det;s0*=invDet,s1*=invDet,sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c}else s1=segExtent,s0=Math.max(0,-(a01*s1+b0)),sqrDist=-s0*s0+s1*(s1+2*b1)+c;else s1=-segExtent,s0=Math.max(0,-(a01*s1+b0)),sqrDist=-s0*s0+s1*(s1+2*b1)+c;else-extDet>=s1?(s0=Math.max(0,-(-a01*segExtent+b0)),s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),sqrDist=-s0*s0+s1*(s1+2*b1)+c):extDet>=s1?(s0=0,s1=Math.min(Math.max(-segExtent,-b1),segExtent),sqrDist=s1*(s1+2*b1)+c):(s0=Math.max(0,-(a01*segExtent+b0)),s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),sqrDist=-s0*s0+s1*(s1+2*b1)+c);else s1=a01>0?-segExtent:segExtent,s0=Math.max(0,-(a01*s1+b0)),sqrDist=-s0*s0+s1*(s1+2*b1)+c;return optionalPointOnRay&&optionalPointOnRay.copy(this.direction.clone().multiplyScalar(s0).add(this.origin)),optionalPointOnSegment&&optionalPointOnSegment.copy(segDir.clone().multiplyScalar(s1).add(segCenter)),sqrDist},isIntersectionSphere:function(sphere){return this.distanceToPoint(sphere.center)<=sphere.radius},isIntersectionPlane:function(plane){var distToPoint=plane.distanceToPoint(this.origin);if(0===distToPoint)return!0;var denominator=plane.normal.dot(this.direction);return 0>denominator*distToPoint?!0:!1},distanceToPlane:function(plane){var denominator=plane.normal.dot(this.direction);if(0==denominator)return 0==plane.distanceToPoint(this.origin)?0:null;var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return t>=0?t:null},intersectPlane:function(plane,optionalTarget){var t=this.distanceToPlane(plane);return null===t?null:this.at(t,optionalTarget)},isIntersectionBox:function(){var v=new THREE.Vector3;return function(box){return null!==this.intersectBox(box,v)}}(),intersectBox:function(box,optionalTarget){var tmin,tmax,tymin,tymax,tzmin,tzmax,invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z,origin=this.origin;return invdirx>=0?(tmin=(box.min.x-origin.x)*invdirx,tmax=(box.max.x-origin.x)*invdirx):(tmin=(box.max.x-origin.x)*invdirx,tmax=(box.min.x-origin.x)*invdirx),invdiry>=0?(tymin=(box.min.y-origin.y)*invdiry,tymax=(box.max.y-origin.y)*invdiry):(tymin=(box.max.y-origin.y)*invdiry,tymax=(box.min.y-origin.y)*invdiry),tmin>tymax||tymin>tmax?null:((tymin>tmin||tmin!==tmin)&&(tmin=tymin),(tmax>tymax||tmax!==tmax)&&(tmax=tymax),invdirz>=0?(tzmin=(box.min.z-origin.z)*invdirz,tzmax=(box.max.z-origin.z)*invdirz):(tzmin=(box.max.z-origin.z)*invdirz,tzmax=(box.min.z-origin.z)*invdirz),tmin>tzmax||tzmin>tmax?null:((tzmin>tmin||tmin!==tmin)&&(tmin=tzmin),(tmax>tzmax||tmax!==tmax)&&(tmax=tzmax),0>tmax?null:this.at(tmin>=0?tmin:tmax,optionalTarget)))},intersectTriangle:function(){var diff=new THREE.Vector3,edge1=new THREE.Vector3,edge2=new THREE.Vector3,normal=new THREE.Vector3;
return function(a,b,c,backfaceCulling,optionalTarget){edge1.subVectors(b,a),edge2.subVectors(c,a),normal.crossVectors(edge1,edge2);var sign,DdN=this.direction.dot(normal);if(DdN>0){if(backfaceCulling)return null;sign=1}else{if(!(0>DdN))return null;sign=-1,DdN=-DdN}diff.subVectors(this.origin,a);var DdQxE2=sign*this.direction.dot(edge2.crossVectors(diff,edge2));if(0>DdQxE2)return null;var DdE1xQ=sign*this.direction.dot(edge1.cross(diff));if(0>DdE1xQ)return null;if(DdQxE2+DdE1xQ>DdN)return null;var QdN=-sign*diff.dot(normal);return 0>QdN?null:this.at(QdN/DdN,optionalTarget)}}(),applyMatrix4:function(matrix4){return this.direction.add(this.origin).applyMatrix4(matrix4),this.origin.applyMatrix4(matrix4),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(center,radius){this.center=void 0!==center?center:new THREE.Vector3,this.radius=void 0!==radius?radius:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(center,radius){return this.center.copy(center),this.radius=radius,this},setFromPoints:function(){var box=new THREE.Box3;return function(points,optionalCenter){var center=this.center;void 0!==optionalCenter?center.copy(optionalCenter):box.setFromPoints(points).center(center);for(var maxRadiusSq=0,i=0,il=points.length;il>i;i++)maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));return this.radius=Math.sqrt(maxRadiusSq),this}}(),copy:function(sphere){return this.center.copy(sphere.center),this.radius=sphere.radius,this},empty:function(){return this.radius<=0},containsPoint:function(point){return point.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(point){return point.distanceTo(this.center)-this.radius},intersectsSphere:function(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum},clampPoint:function(point,optionalTarget){var deltaLengthSq=this.center.distanceToSquared(point),result=optionalTarget||new THREE.Vector3;return result.copy(point),deltaLengthSq>this.radius*this.radius&&(result.sub(this.center).normalize(),result.multiplyScalar(this.radius).add(this.center)),result},getBoundingBox:function(optionalTarget){var box=optionalTarget||new THREE.Box3;return box.set(this.center,this.center),box.expandByScalar(this.radius),box},applyMatrix4:function(matrix){return this.center.applyMatrix4(matrix),this.radius=this.radius*matrix.getMaxScaleOnAxis(),this},translate:function(offset){return this.center.add(offset),this},equals:function(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(p0,p1,p2,p3,p4,p5){this.planes=[void 0!==p0?p0:new THREE.Plane,void 0!==p1?p1:new THREE.Plane,void 0!==p2?p2:new THREE.Plane,void 0!==p3?p3:new THREE.Plane,void 0!==p4?p4:new THREE.Plane,void 0!==p5?p5:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(p0,p1,p2,p3,p4,p5){var planes=this.planes;return planes[0].copy(p0),planes[1].copy(p1),planes[2].copy(p2),planes[3].copy(p3),planes[4].copy(p4),planes[5].copy(p5),this},copy:function(frustum){for(var planes=this.planes,i=0;6>i;i++)planes[i].copy(frustum.planes[i]);return this},setFromMatrix:function(m){var planes=this.planes,me=m.elements,me0=me[0],me1=me[1],me2=me[2],me3=me[3],me4=me[4],me5=me[5],me6=me[6],me7=me[7],me8=me[8],me9=me[9],me10=me[10],me11=me[11],me12=me[12],me13=me[13],me14=me[14],me15=me[15];return planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize(),planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize(),planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize(),planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize(),planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize(),planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize(),this},intersectsObject:function(){var sphere=new THREE.Sphere;return function(object){var geometry=object.geometry;return null===geometry.boundingSphere&&geometry.computeBoundingSphere(),sphere.copy(geometry.boundingSphere),sphere.applyMatrix4(object.matrixWorld),this.intersectsSphere(sphere)}}(),intersectsSphere:function(sphere){for(var planes=this.planes,center=sphere.center,negRadius=-sphere.radius,i=0;6>i;i++){var distance=planes[i].distanceToPoint(center);if(negRadius>distance)return!1}return!0},intersectsBox:function(){var p1=new THREE.Vector3,p2=new THREE.Vector3;return function(box){for(var planes=this.planes,i=0;6>i;i++){var plane=planes[i];p1.x=plane.normal.x>0?box.min.x:box.max.x,p2.x=plane.normal.x>0?box.max.x:box.min.x,p1.y=plane.normal.y>0?box.min.y:box.max.y,p2.y=plane.normal.y>0?box.max.y:box.min.y,p1.z=plane.normal.z>0?box.min.z:box.max.z,p2.z=plane.normal.z>0?box.max.z:box.min.z;var d1=plane.distanceToPoint(p1),d2=plane.distanceToPoint(p2);if(0>d1&&0>d2)return!1}return!0}}(),containsPoint:function(point){for(var planes=this.planes,i=0;6>i;i++)if(planes[i].distanceToPoint(point)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(normal,constant){this.normal=void 0!==normal?normal:new THREE.Vector3(1,0,0),this.constant=void 0!==constant?constant:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(normal,constant){return this.normal.copy(normal),this.constant=constant,this},setComponents:function(x,y,z,w){return this.normal.set(x,y,z),this.constant=w,this},setFromNormalAndCoplanarPoint:function(normal,point){return this.normal.copy(normal),this.constant=-point.dot(this.normal),this},setFromCoplanarPoints:function(){var v1=new THREE.Vector3,v2=new THREE.Vector3;return function(a,b,c){var normal=v1.subVectors(c,b).cross(v2.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(normal,a),this}}(),copy:function(plane){return this.normal.copy(plane.normal),this.constant=plane.constant,this},normalize:function(){var inverseNormalLength=1/this.normal.length();return this.normal.multiplyScalar(inverseNormalLength),this.constant*=inverseNormalLength,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(point){return this.normal.dot(point)+this.constant},distanceToSphere:function(sphere){return this.distanceToPoint(sphere.center)-sphere.radius},projectPoint:function(point,optionalTarget){return this.orthoPoint(point,optionalTarget).sub(point).negate()},orthoPoint:function(point,optionalTarget){var perpendicularMagnitude=this.distanceToPoint(point),result=optionalTarget||new THREE.Vector3;return result.copy(this.normal).multiplyScalar(perpendicularMagnitude)},isIntersectionLine:function(line){var startSign=this.distanceToPoint(line.start),endSign=this.distanceToPoint(line.end);return 0>startSign&&endSign>0||0>endSign&&startSign>0},intersectLine:function(){var v1=new THREE.Vector3;return function(line,optionalTarget){var result=optionalTarget||new THREE.Vector3,direction=line.delta(v1),denominator=this.normal.dot(direction);if(0==denominator)return 0==this.distanceToPoint(line.start)?result.copy(line.start):void 0;var t=-(line.start.dot(this.normal)+this.constant)/denominator;return 0>t||t>1?void 0:result.copy(direction).multiplyScalar(t).add(line.start)}}(),coplanarPoint:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var v1=new THREE.Vector3,v2=new THREE.Vector3;return function(matrix,optionalNormalMatrix){optionalNormalMatrix=optionalNormalMatrix||(new THREE.Matrix3).getNormalMatrix(matrix);var newNormal=v1.copy(this.normal).applyMatrix3(optionalNormalMatrix),newCoplanarPoint=this.coplanarPoint(v2);return newCoplanarPoint.applyMatrix4(matrix),this.setFromNormalAndCoplanarPoint(newNormal,newCoplanarPoint),this}}(),translate:function(offset){return this.constant=this.constant-offset.dot(this.normal),this},equals:function(plane){return plane.normal.equals(this.normal)&&plane.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var r,chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),uuid=new Array(36),rnd=0;return function(){for(var i=0;36>i;i++)8==i||13==i||18==i||23==i?uuid[i]="-":14==i?uuid[i]="4":(2>=rnd&&(rnd=33554432+16777216*Math.random()|0),r=15&rnd,rnd>>=4,uuid[i]=chars[19==i?3&r|8:r]);return uuid.join("")}}(),clamp:function(x,a,b){return a>x?a:x>b?b:x},clampBottom:function(x,a){return a>x?a:x},mapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)},smoothstep:function(x,min,max){return min>=x?0:x>=max?1:(x=(x-min)/(max-min),x*x*(3-2*x))},smootherstep:function(x,min,max){return min>=x?0:x>=max?1:(x=(x-min)/(max-min),x*x*x*(x*(6*x-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1))},randFloat:function(low,high){return low+Math.random()*(high-low)},randFloatSpread:function(range){return range*(.5-Math.random())},sign:function(x){return 0>x?-1:x>0?1:0},degToRad:function(){var degreeToRadiansFactor=Math.PI/180;return function(degrees){return degrees*degreeToRadiansFactor}}(),radToDeg:function(){var radianToDegreesFactor=180/Math.PI;return function(radians){return radians*radianToDegreesFactor}}()},THREE.Spline=function(points){function interpolate(p0,p1,p2,p3,t,t2,t3){var v0=.5*(p2-p0),v1=.5*(p3-p1);return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1}this.points=points;var point,intPoint,weight,w2,w3,pa,pb,pc,pd,c=[],v3={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var i=0;i<a.length;i++)this.points[i]={x:a[i][0],y:a[i][1],z:a[i][2]}},this.getPoint=function(k){return point=(this.points.length-1)*k,intPoint=Math.floor(point),weight=point-intPoint,c[0]=0===intPoint?intPoint:intPoint-1,c[1]=intPoint,c[2]=intPoint>this.points.length-2?this.points.length-1:intPoint+1,c[3]=intPoint>this.points.length-3?this.points.length-1:intPoint+2,pa=this.points[c[0]],pb=this.points[c[1]],pc=this.points[c[2]],pd=this.points[c[3]],w2=weight*weight,w3=weight*w2,v3.x=interpolate(pa.x,pb.x,pc.x,pd.x,weight,w2,w3),v3.y=interpolate(pa.y,pb.y,pc.y,pd.y,weight,w2,w3),v3.z=interpolate(pa.z,pb.z,pc.z,pd.z,weight,w2,w3),v3},this.getControlPointsArray=function(){var i,p,l=this.points.length,coords=[];for(i=0;l>i;i++)p=this.points[i],coords[i]=[p.x,p.y,p.z];return coords},this.getLength=function(nSubDivisions){var i,index,nSamples,position,point=0,intPoint=0,oldIntPoint=0,oldPosition=new THREE.Vector3,tmpVec=new THREE.Vector3,chunkLengths=[],totalLength=0;for(chunkLengths[0]=0,nSubDivisions||(nSubDivisions=100),nSamples=this.points.length*nSubDivisions,oldPosition.copy(this.points[0]),i=1;nSamples>i;i++)index=i/nSamples,position=this.getPoint(index),tmpVec.copy(position),totalLength+=tmpVec.distanceTo(oldPosition),oldPosition.copy(position),point=(this.points.length-1)*index,intPoint=Math.floor(point),intPoint!=oldIntPoint&&(chunkLengths[intPoint]=totalLength,oldIntPoint=intPoint);return chunkLengths[chunkLengths.length]=totalLength,{chunks:chunkLengths,total:totalLength}},this.reparametrizeByArcLength=function(samplingCoef){var i,j,index,indexCurrent,indexNext,realDistance,sampling,position,newpoints=[],tmpVec=new THREE.Vector3,sl=this.getLength();for(newpoints.push(tmpVec.copy(this.points[0]).clone()),i=1;i<this.points.length;i++){for(realDistance=sl.chunks[i]-sl.chunks[i-1],sampling=Math.ceil(samplingCoef*realDistance/sl.total),indexCurrent=(i-1)/(this.points.length-1),indexNext=i/(this.points.length-1),j=1;sampling-1>j;j++)index=indexCurrent+j*(1/sampling)*(indexNext-indexCurrent),position=this.getPoint(index),newpoints.push(tmpVec.copy(position).clone());newpoints.push(tmpVec.copy(this.points[i]).clone())}this.points=newpoints}},THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3,this.b=void 0!==b?b:new THREE.Vector3,this.c=void 0!==c?c:new THREE.Vector3},THREE.Triangle.normal=function(){var v0=new THREE.Vector3;return function(a,b,c,optionalTarget){var result=optionalTarget||new THREE.Vector3;result.subVectors(c,b),v0.subVectors(a,b),result.cross(v0);var resultLengthSq=result.lengthSq();return resultLengthSq>0?result.multiplyScalar(1/Math.sqrt(resultLengthSq)):result.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var v0=new THREE.Vector3,v1=new THREE.Vector3,v2=new THREE.Vector3;return function(point,a,b,c,optionalTarget){v0.subVectors(c,a),v1.subVectors(b,a),v2.subVectors(point,a);var dot00=v0.dot(v0),dot01=v0.dot(v1),dot02=v0.dot(v2),dot11=v1.dot(v1),dot12=v1.dot(v2),denom=dot00*dot11-dot01*dot01,result=optionalTarget||new THREE.Vector3;if(0==denom)return result.set(-2,-1,-1);var invDenom=1/denom,u=(dot11*dot02-dot01*dot12)*invDenom,v=(dot00*dot12-dot01*dot02)*invDenom;return result.set(1-u-v,v,u)}}(),THREE.Triangle.containsPoint=function(){var v1=new THREE.Vector3;return function(point,a,b,c){var result=THREE.Triangle.barycoordFromPoint(point,a,b,c,v1);return result.x>=0&&result.y>=0&&result.x+result.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this},setFromPointsAndIndices:function(points,i0,i1,i2){return this.a.copy(points[i0]),this.b.copy(points[i1]),this.c.copy(points[i2]),this},copy:function(triangle){return this.a.copy(triangle.a),this.b.copy(triangle.b),this.c.copy(triangle.c),this},area:function(){var v0=new THREE.Vector3,v1=new THREE.Vector3;return function(){return v0.subVectors(this.c,this.b),v1.subVectors(this.a,this.b),.5*v0.cross(v1).length()}}(),midpoint:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(optionalTarget){return THREE.Triangle.normal(this.a,this.b,this.c,optionalTarget)},plane:function(optionalTarget){var result=optionalTarget||new THREE.Plane;return result.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(point,optionalTarget){return THREE.Triangle.barycoordFromPoint(point,this.a,this.b,this.c,optionalTarget)},containsPoint:function(point){return THREE.Triangle.containsPoint(point,this.a,this.b,this.c)},equals:function(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(v){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),v},THREE.UV=function(u,v){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(u,v)},THREE.Clock=function(autoStart){this.autoStart=void 0!==autoStart?autoStart:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var diff=0;if(this.autoStart&&!this.running&&this.start(),this.running){var newTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();diff=.001*(newTime-this.oldTime),this.oldTime=newTime,this.elapsedTime+=diff}return diff}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(object){object.addEventListener=THREE.EventDispatcher.prototype.addEventListener,object.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,object.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,object.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(type,listener){void 0===this._listeners&&(this._listeners={});var listeners=this._listeners;void 0===listeners[type]&&(listeners[type]=[]),-1===listeners[type].indexOf(listener)&&listeners[type].push(listener)},hasEventListener:function(type,listener){if(void 0===this._listeners)return!1;var listeners=this._listeners;return void 0!==listeners[type]&&-1!==listeners[type].indexOf(listener)?!0:!1},removeEventListener:function(type,listener){if(void 0!==this._listeners){var listeners=this._listeners,index=listeners[type].indexOf(listener);-1!==index&&listeners[type].splice(index,1)}},dispatchEvent:function(){var array=[];return function(event){if(void 0!==this._listeners){var listeners=this._listeners,listenerArray=listeners[event.type];if(void 0!==listenerArray){event.target=this;for(var length=listenerArray.length,i=0;length>i;i++)array[i]=listenerArray[i];for(var i=0;length>i;i++)array[i].call(this,event)}}}}()},function(THREE){THREE.Raycaster=function(origin,direction,near,far){this.ray=new THREE.Ray(origin,direction),this.near=near||0,this.far=far||1/0};var sphere=new THREE.Sphere,localRay=new THREE.Ray,matrixPosition=(new THREE.Plane,new THREE.Vector3,new THREE.Vector3),inverseMatrix=new THREE.Matrix4,descSort=function(a,b){return a.distance-b.distance},vA=new THREE.Vector3,vB=new THREE.Vector3,vC=new THREE.Vector3,intersectObject=function(object,raycaster,intersects){if(object instanceof THREE.Sprite){matrixPosition.getPositionFromMatrix(object.matrixWorld);var distance=raycaster.ray.distanceToPoint(matrixPosition);if(distance>object.scale.x)return intersects;intersects.push({distance:distance,point:object.position,face:null,object:object})}else if(object instanceof THREE.LOD){matrixPosition.getPositionFromMatrix(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(matrixPosition);intersectObject(object.getObjectForDistance(distance),raycaster,intersects)}else if(object instanceof THREE.Mesh){var geometry=object.geometry;if(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),sphere.copy(geometry.boundingSphere),sphere.applyMatrix4(object.matrixWorld),raycaster.ray.isIntersectionSphere(sphere)===!1)return intersects;if(inverseMatrix.getInverse(object.matrixWorld),localRay.copy(raycaster.ray).applyMatrix4(inverseMatrix),null!==geometry.boundingBox&&localRay.isIntersectionBox(geometry.boundingBox)===!1)return intersects;if(geometry instanceof THREE.BufferGeometry){var material=object.material;if(void 0===material)return intersects;if(geometry.dynamic===!1)return intersects;var a,b,c,precision=raycaster.precision;if(void 0!==geometry.attributes.index)for(var offsets=geometry.offsets,indices=geometry.attributes.index.array,positions=geometry.attributes.position.array,offLength=geometry.offsets.length,fl=geometry.attributes.index.array.length/3,oi=0;offLength>oi;++oi)for(var start=offsets[oi].start,count=offsets[oi].count,index=offsets[oi].index,i=start,il=start+count;il>i;i+=3){if(a=index+indices[i],b=index+indices[i+1],c=index+indices[i+2],vA.set(positions[3*a],positions[3*a+1],positions[3*a+2]),vB.set(positions[3*b],positions[3*b+1],positions[3*b+2]),vC.set(positions[3*c],positions[3*c+1],positions[3*c+2]),material.side===THREE.BackSide)var intersectionPoint=localRay.intersectTriangle(vC,vB,vA,!0);else var intersectionPoint=localRay.intersectTriangle(vA,vB,vC,material.side!==THREE.DoubleSide);if(null!==intersectionPoint){intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);precision>distance||distance<raycaster.near||distance>raycaster.far||intersects.push({distance:distance,point:intersectionPoint,face:null,faceIndex:null,object:object})}}else for(var offsets=geometry.offsets,positions=geometry.attributes.position.array,offLength=geometry.offsets.length,fl=geometry.attributes.position.array.length,i=0;fl>i;i+=3){if(a=i,b=i+1,c=i+2,vA.set(positions[3*a],positions[3*a+1],positions[3*a+2]),vB.set(positions[3*b],positions[3*b+1],positions[3*b+2]),vC.set(positions[3*c],positions[3*c+1],positions[3*c+2]),material.side===THREE.BackSide)var intersectionPoint=localRay.intersectTriangle(vC,vB,vA,!0);else var intersectionPoint=localRay.intersectTriangle(vA,vB,vC,material.side!==THREE.DoubleSide);if(null!==intersectionPoint){intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);precision>distance||distance<raycaster.near||distance>raycaster.far||intersects.push({distance:distance,point:intersectionPoint,face:null,faceIndex:null,object:object})}}}else if(geometry instanceof THREE.Geometry)for(var a,b,c,isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial,objectMaterials=isFaceMaterial===!0?object.material.materials:null,precision=raycaster.precision,vertices=geometry.vertices,f=0,fl=geometry.faces.length;fl>f;f++){var face=geometry.faces[f],material=isFaceMaterial===!0?objectMaterials[face.materialIndex]:object.material;if(void 0!==material){if(a=vertices[face.a],b=vertices[face.b],c=vertices[face.c],material.side===THREE.BackSide)var intersectionPoint=localRay.intersectTriangle(c,b,a,!0);else var intersectionPoint=localRay.intersectTriangle(a,b,c,material.side!==THREE.DoubleSide);if(null!==intersectionPoint){intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);precision>distance||distance<raycaster.near||distance>raycaster.far||intersects.push({distance:distance,point:intersectionPoint,face:face,faceIndex:f,object:object})}}}}else if(object instanceof THREE.Line){var precision=raycaster.linePrecision,precisionSq=precision*precision,geometry=object.geometry;if(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),sphere.copy(geometry.boundingSphere),sphere.applyMatrix4(object.matrixWorld),raycaster.ray.isIntersectionSphere(sphere)===!1)return intersects;if(inverseMatrix.getInverse(object.matrixWorld),localRay.copy(raycaster.ray).applyMatrix4(inverseMatrix),geometry instanceof THREE.Geometry)for(var vertices=geometry.vertices,nbVertices=vertices.length,interSegment=new THREE.Vector3,interRay=new THREE.Vector3,step=object.type===THREE.LineStrip?1:2,i=0;nbVertices-1>i;i+=step){var distSq=localRay.distanceSqToSegment(vertices[i],vertices[i+1],interRay,interSegment);if(!(distSq>precisionSq)){var distance=localRay.origin.distanceTo(interRay);distance<raycaster.near||distance>raycaster.far||intersects.push({distance:distance,point:interSegment.clone().applyMatrix4(object.matrixWorld),face:null,faceIndex:null,object:object})}}}},intersectDescendants=function(object,raycaster,intersects){for(var descendants=object.getDescendants(),i=0,l=descendants.length;l>i;i++)intersectObject(descendants[i],raycaster,intersects)};THREE.Raycaster.prototype.precision=1e-4,THREE.Raycaster.prototype.linePrecision=1,THREE.Raycaster.prototype.set=function(origin,direction){this.ray.set(origin,direction)},THREE.Raycaster.prototype.intersectObject=function(object,recursive){var intersects=[];return recursive===!0&&intersectDescendants(object,this,intersects),intersectObject(object,this,intersects),intersects.sort(descSort),intersects},THREE.Raycaster.prototype.intersectObjects=function(objects,recursive){for(var intersects=[],i=0,l=objects.length;l>i;i++)intersectObject(objects[i],this,intersects),recursive===!0&&intersectDescendants(objects[i],this,intersects);return intersects.sort(descSort),intersects}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Euler,this.quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this.rotation._quaternion=this.quaternion,this.quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(value){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=value},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(value){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var m1=new THREE.Matrix4;return function(matrix){this.matrix.multiplyMatrices(matrix,this.matrix),this.position.getPositionFromMatrix(this.matrix),this.scale.getScaleFromMatrix(this.matrix),m1.extractRotation(this.matrix),this.quaternion.setFromRotationMatrix(m1)}}(),setRotationFromAxisAngle:function(axis,angle){this.quaternion.setFromAxisAngle(axis,angle)},setRotationFromEuler:function(euler){this.quaternion.setFromEuler(euler,!0)},setRotationFromMatrix:function(m){this.quaternion.setFromRotationMatrix(m)},setRotationFromQuaternion:function(q){this.quaternion.copy(q)},rotateOnAxis:function(){var q1=new THREE.Quaternion;return function(axis,angle){return q1.setFromAxisAngle(axis,angle),this.quaternion.multiply(q1),this}}(),rotateX:function(){var v1=new THREE.Vector3(1,0,0);return function(angle){return this.rotateOnAxis(v1,angle)}}(),rotateY:function(){var v1=new THREE.Vector3(0,1,0);return function(angle){return this.rotateOnAxis(v1,angle)}}(),rotateZ:function(){var v1=new THREE.Vector3(0,0,1);return function(angle){return this.rotateOnAxis(v1,angle)}}(),translateOnAxis:function(){var v1=new THREE.Vector3;return function(axis,distance){return v1.copy(axis),v1.applyQuaternion(this.quaternion),this.position.add(v1.multiplyScalar(distance)),this}}(),translate:function(distance,axis){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(axis,distance)},translateX:function(){var v1=new THREE.Vector3(1,0,0);return function(distance){return this.translateOnAxis(v1,distance)}}(),translateY:function(){var v1=new THREE.Vector3(0,1,0);return function(distance){return this.translateOnAxis(v1,distance)}}(),translateZ:function(){var v1=new THREE.Vector3(0,0,1);return function(distance){return this.translateOnAxis(v1,distance)}}(),localToWorld:function(vector){return vector.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var m1=new THREE.Matrix4;return function(vector){return vector.applyMatrix4(m1.getInverse(this.matrixWorld))}}(),lookAt:function(){var m1=new THREE.Matrix4;return function(vector){m1.lookAt(vector,this.position,this.up),this.quaternion.setFromRotationMatrix(m1)}}(),add:function(object){if(object===this)return void console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");if(object instanceof THREE.Object3D){void 0!==object.parent&&object.parent.remove(object),object.parent=this,object.dispatchEvent({type:"added"}),this.children.push(object);for(var scene=this;void 0!==scene.parent;)scene=scene.parent;void 0!==scene&&scene instanceof THREE.Scene&&scene.__addObject(object)}},remove:function(object){var index=this.children.indexOf(object);if(-1!==index){object.parent=void 0,object.dispatchEvent({type:"removed"}),this.children.splice(index,1);for(var scene=this;void 0!==scene.parent;)scene=scene.parent;void 0!==scene&&scene instanceof THREE.Scene&&scene.__removeObject(object)}},traverse:function(callback){callback(this);for(var i=0,l=this.children.length;l>i;i++)this.children[i].traverse(callback)},getObjectById:function(id,recursive){for(var i=0,l=this.children.length;l>i;i++){var child=this.children[i];if(child.id===id)return child;if(recursive===!0&&(child=child.getObjectById(id,recursive),void 0!==child))return child}return void 0},getObjectByName:function(name,recursive){for(var i=0,l=this.children.length;l>i;i++){var child=this.children[i];if(child.name===name)return child;if(recursive===!0&&(child=child.getObjectByName(name,recursive),void 0!==child))return child}return void 0},getChildByName:function(name,recursive){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(name,recursive)},getDescendants:function(array){void 0===array&&(array=[]),Array.prototype.push.apply(array,this.children);for(var i=0,l=this.children.length;l>i;i++)this.children[i].getDescendants(array);return array},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(force){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||force===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0);for(var i=0,l=this.children.length;l>i;i++)this.children[i].updateMatrixWorld(force)},clone:function(object,recursive){if(void 0===object&&(object=new THREE.Object3D),void 0===recursive&&(recursive=!0),object.name=this.name,object.up.copy(this.up),object.position.copy(this.position),object.quaternion.copy(this.quaternion),object.scale.copy(this.scale),object.renderDepth=this.renderDepth,object.rotationAutoUpdate=this.rotationAutoUpdate,object.matrix.copy(this.matrix),object.matrixWorld.copy(this.matrixWorld),object.matrixAutoUpdate=this.matrixAutoUpdate,object.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,object.visible=this.visible,object.castShadow=this.castShadow,object.receiveShadow=this.receiveShadow,object.frustumCulled=this.frustumCulled,object.userData=JSON.parse(JSON.stringify(this.userData)),recursive===!0)for(var i=0;i<this.children.length;i++){var child=this.children[i];object.add(child.clone())}return object}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function getNextObjectInPool(){if(_objectCount===_objectPoolLength){var object=new THREE.RenderableObject;return _objectPool.push(object),_objectPoolLength++,_objectCount++,object}return _objectPool[_objectCount++]}function getNextVertexInPool(){if(_vertexCount===_vertexPoolLength){var vertex=new THREE.RenderableVertex;return _vertexPool.push(vertex),_vertexPoolLength++,_vertexCount++,vertex}return _vertexPool[_vertexCount++]}function getNextFace3InPool(){if(_face3Count===_face3PoolLength){var face=new THREE.RenderableFace3;return _face3Pool.push(face),_face3PoolLength++,_face3Count++,face}return _face3Pool[_face3Count++]}function getNextLineInPool(){if(_lineCount===_linePoolLength){var line=new THREE.RenderableLine;return _linePool.push(line),_linePoolLength++,_lineCount++,line}return _linePool[_lineCount++]}function getNextSpriteInPool(){if(_spriteCount===_spritePoolLength){var sprite=new THREE.RenderableSprite;return _spritePool.push(sprite),_spritePoolLength++,_spriteCount++,sprite}return _spritePool[_spriteCount++]}function painterSort(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function clipLine(s1,s2){var alpha1=0,alpha2=1,bc1near=s1.z+s1.w,bc2near=s2.z+s2.w,bc1far=-s1.z+s1.w,bc2far=-s2.z+s2.w;return bc1near>=0&&bc2near>=0&&bc1far>=0&&bc2far>=0?!0:0>bc1near&&0>bc2near||0>bc1far&&0>bc2far?!1:(0>bc1near?alpha1=Math.max(alpha1,bc1near/(bc1near-bc2near)):0>bc2near&&(alpha2=Math.min(alpha2,bc1near/(bc1near-bc2near))),0>bc1far?alpha1=Math.max(alpha1,bc1far/(bc1far-bc2far)):0>bc2far&&(alpha2=Math.min(alpha2,bc1far/(bc1far-bc2far))),alpha1>alpha2?!1:(s1.lerp(s2,alpha1),s2.lerp(s1,1-alpha2),!0))}var _object,_objectCount,_vertex,_vertexCount,_face,_face3Count,_line,_lineCount,_sprite,_spriteCount,_modelMatrix,_objectPool=[],_objectPoolLength=0,_vertexPool=[],_vertexPoolLength=0,_face3Pool=[],_face3PoolLength=0,_linePool=[],_linePoolLength=0,_spritePool=[],_spritePoolLength=0,_renderData={objects:[],sprites:[],lights:[],elements:[]},_vector3=new THREE.Vector3,_vector4=new THREE.Vector4,_clipBox=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),_boundingBox=new THREE.Box3,_points3=new Array(3),_viewMatrix=(new Array(4),new THREE.Matrix4),_viewProjectionMatrix=new THREE.Matrix4,_modelViewProjectionMatrix=new THREE.Matrix4,_normalMatrix=new THREE.Matrix3,_normalViewMatrix=new THREE.Matrix3,_centroid=new THREE.Vector3,_frustum=new THREE.Frustum,_clippedVertex1PositionScreen=new THREE.Vector4,_clippedVertex2PositionScreen=new THREE.Vector4;
this.projectVector=function(vector,camera){return camera.matrixWorldInverse.getInverse(camera.matrixWorld),_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse),vector.applyProjection(_viewProjectionMatrix)},this.unprojectVector=function(vector,camera){return camera.projectionMatrixInverse.getInverse(camera.projectionMatrix),_viewProjectionMatrix.multiplyMatrices(camera.matrixWorld,camera.projectionMatrixInverse),vector.applyProjection(_viewProjectionMatrix)},this.pickingRay=function(vector,camera){vector.z=-1;var end=new THREE.Vector3(vector.x,vector.y,1);return this.unprojectVector(vector,camera),this.unprojectVector(end,camera),end.sub(vector).normalize(),new THREE.Raycaster(vector,end)};var getObject=function(object){return _object=getNextObjectInPool(),_object.id=object.id,_object.object=object,null!==object.renderDepth?_object.z=object.renderDepth:(_vector3.getPositionFromMatrix(object.matrixWorld),_vector3.applyProjection(_viewProjectionMatrix),_object.z=_vector3.z),_object},projectObject=function(object){if(object.visible!==!1){object instanceof THREE.Light?_renderData.lights.push(object):object instanceof THREE.Mesh||object instanceof THREE.Line?(object.frustumCulled===!1||_frustum.intersectsObject(object)===!0)&&_renderData.objects.push(getObject(object)):object instanceof THREE.Sprite&&_renderData.sprites.push(getObject(object));for(var i=0,l=object.children.length;l>i;i++)projectObject(object.children[i])}},projectGraph=function(root,sortObjects){_objectCount=0,_renderData.objects.length=0,_renderData.sprites.length=0,_renderData.lights.length=0,projectObject(root),sortObjects===!0&&_renderData.objects.sort(painterSort)};this.projectScene=function(scene,camera,sortObjects,sortElements){var o,ol,v,vl,f,fl,n,nl,c,cl,u,ul,object,geometry,vertices,faces,face,faceVertexNormals,faceVertexUvs,uvs,v1,v2,v3,isFaceMaterial,objectMaterials,visible=!1;for(_face3Count=0,_lineCount=0,_spriteCount=0,_renderData.elements.length=0,scene.autoUpdate===!0&&scene.updateMatrixWorld(),void 0===camera.parent&&camera.updateMatrixWorld(),_viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld)),_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix,_viewMatrix),_normalViewMatrix.getNormalMatrix(_viewMatrix),_frustum.setFromMatrix(_viewProjectionMatrix),projectGraph(scene,sortObjects),o=0,ol=_renderData.objects.length;ol>o;o++)if(object=_renderData.objects[o].object,_modelMatrix=object.matrixWorld,_vertexCount=0,object instanceof THREE.Mesh){for(geometry=object.geometry,vertices=geometry.vertices,faces=geometry.faces,faceVertexUvs=geometry.faceVertexUvs,_normalMatrix.getNormalMatrix(_modelMatrix),isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial,objectMaterials=isFaceMaterial===!0?object.material:null,v=0,vl=vertices.length;vl>v;v++){_vertex=getNextVertexInPool(),_vertex.positionWorld.copy(vertices[v]).applyMatrix4(_modelMatrix),_vertex.positionScreen.copy(_vertex.positionWorld).applyMatrix4(_viewProjectionMatrix);var invW=1/_vertex.positionScreen.w;_vertex.positionScreen.x*=invW,_vertex.positionScreen.y*=invW,_vertex.positionScreen.z*=invW,_vertex.visible=!(_vertex.positionScreen.x<-1||_vertex.positionScreen.x>1||_vertex.positionScreen.y<-1||_vertex.positionScreen.y>1||_vertex.positionScreen.z<-1||_vertex.positionScreen.z>1)}for(f=0,fl=faces.length;fl>f;f++){face=faces[f];var material=isFaceMaterial===!0?objectMaterials.materials[face.materialIndex]:object.material;if(void 0!==material){var side=material.side;if(v1=_vertexPool[face.a],v2=_vertexPool[face.b],v3=_vertexPool[face.c],_points3[0]=v1.positionScreen,_points3[1]=v2.positionScreen,_points3[2]=v3.positionScreen,(v1.visible===!0||v2.visible===!0||v3.visible===!0||_clipBox.isIntersectionBox(_boundingBox.setFromPoints(_points3)))&&(visible=(v3.positionScreen.x-v1.positionScreen.x)*(v2.positionScreen.y-v1.positionScreen.y)-(v3.positionScreen.y-v1.positionScreen.y)*(v2.positionScreen.x-v1.positionScreen.x)<0,side===THREE.DoubleSide||visible===(side===THREE.FrontSide))){for(_face=getNextFace3InPool(),_face.id=object.id,_face.v1.copy(v1),_face.v2.copy(v2),_face.v3.copy(v3),_face.normalModel.copy(face.normal),visible!==!1||side!==THREE.BackSide&&side!==THREE.DoubleSide||_face.normalModel.negate(),_face.normalModel.applyMatrix3(_normalMatrix).normalize(),_face.normalModelView.copy(_face.normalModel).applyMatrix3(_normalViewMatrix),_face.centroidModel.copy(face.centroid).applyMatrix4(_modelMatrix),faceVertexNormals=face.vertexNormals,n=0,nl=Math.min(faceVertexNormals.length,3);nl>n;n++){var normalModel=_face.vertexNormalsModel[n];normalModel.copy(faceVertexNormals[n]),visible!==!1||side!==THREE.BackSide&&side!==THREE.DoubleSide||normalModel.negate(),normalModel.applyMatrix3(_normalMatrix).normalize();var normalModelView=_face.vertexNormalsModelView[n];normalModelView.copy(normalModel).applyMatrix3(_normalViewMatrix)}for(_face.vertexNormalsLength=faceVertexNormals.length,c=0,cl=Math.min(faceVertexUvs.length,3);cl>c;c++)if(uvs=faceVertexUvs[c][f],void 0!==uvs)for(u=0,ul=uvs.length;ul>u;u++)_face.uvs[c][u]=uvs[u];_face.color=face.color,_face.material=material,_centroid.copy(_face.centroidModel).applyProjection(_viewProjectionMatrix),_face.z=_centroid.z,_renderData.elements.push(_face)}}}}else if(object instanceof THREE.Line){_modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix,_modelMatrix),vertices=object.geometry.vertices,v1=getNextVertexInPool(),v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);var step=object.type===THREE.LinePieces?2:1;for(v=1,vl=vertices.length;vl>v;v++)v1=getNextVertexInPool(),v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix),(v+1)%step>0||(v2=_vertexPool[_vertexCount-2],_clippedVertex1PositionScreen.copy(v1.positionScreen),_clippedVertex2PositionScreen.copy(v2.positionScreen),clipLine(_clippedVertex1PositionScreen,_clippedVertex2PositionScreen)===!0&&(_clippedVertex1PositionScreen.multiplyScalar(1/_clippedVertex1PositionScreen.w),_clippedVertex2PositionScreen.multiplyScalar(1/_clippedVertex2PositionScreen.w),_line=getNextLineInPool(),_line.id=object.id,_line.v1.positionScreen.copy(_clippedVertex1PositionScreen),_line.v2.positionScreen.copy(_clippedVertex2PositionScreen),_line.z=Math.max(_clippedVertex1PositionScreen.z,_clippedVertex2PositionScreen.z),_line.material=object.material,object.material.vertexColors===THREE.VertexColors&&(_line.vertexColors[0].copy(object.geometry.colors[v]),_line.vertexColors[1].copy(object.geometry.colors[v-1])),_renderData.elements.push(_line)))}for(o=0,ol=_renderData.sprites.length;ol>o;o++)if(object=_renderData.sprites[o].object,_modelMatrix=object.matrixWorld,object instanceof THREE.Sprite){_vector4.set(_modelMatrix.elements[12],_modelMatrix.elements[13],_modelMatrix.elements[14],1),_vector4.applyMatrix4(_viewProjectionMatrix);var invW=1/_vector4.w;_vector4.z*=invW,_vector4.z>-1&&_vector4.z<1&&(_sprite=getNextSpriteInPool(),_sprite.id=object.id,_sprite.x=_vector4.x*invW,_sprite.y=_vector4.y*invW,_sprite.z=_vector4.z,_sprite.object=object,_sprite.rotation=object.rotation,_sprite.scale.x=object.scale.x*Math.abs(_sprite.x-(_vector4.x+camera.projectionMatrix.elements[0])/(_vector4.w+camera.projectionMatrix.elements[12])),_sprite.scale.y=object.scale.y*Math.abs(_sprite.y-(_vector4.y+camera.projectionMatrix.elements[5])/(_vector4.w+camera.projectionMatrix.elements[13])),_sprite.material=object.material,_renderData.elements.push(_sprite))}return sortElements===!0&&_renderData.elements.sort(painterSort),_renderData}},THREE.Face3=function(a,b,c,normal,color,materialIndex){this.a=a,this.b=b,this.c=c,this.normal=normal instanceof THREE.Vector3?normal:new THREE.Vector3,this.vertexNormals=normal instanceof Array?normal:[],this.color=color instanceof THREE.Color?color:new THREE.Color,this.vertexColors=color instanceof Array?color:[],this.vertexTangents=[],this.materialIndex=void 0!==materialIndex?materialIndex:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var face=new THREE.Face3(this.a,this.b,this.c);face.normal.copy(this.normal),face.color.copy(this.color),face.centroid.copy(this.centroid),face.materialIndex=this.materialIndex;var i,il;for(i=0,il=this.vertexNormals.length;il>i;i++)face.vertexNormals[i]=this.vertexNormals[i].clone();for(i=0,il=this.vertexColors.length;il>i;i++)face.vertexColors[i]=this.vertexColors[i].clone();for(i=0,il=this.vertexTangents.length;il>i;i++)face.vertexTangents[i]=this.vertexTangents[i].clone();return face}},THREE.Face4=function(a,b,c,d,normal,color,materialIndex){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(a,b,c,normal,color,materialIndex)},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(matrix){for(var normalMatrix=(new THREE.Matrix3).getNormalMatrix(matrix),i=0,il=this.vertices.length;il>i;i++){var vertex=this.vertices[i];vertex.applyMatrix4(matrix)}for(var i=0,il=this.faces.length;il>i;i++){var face=this.faces[i];face.normal.applyMatrix3(normalMatrix).normalize();for(var j=0,jl=face.vertexNormals.length;jl>j;j++)face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();face.centroid.applyMatrix4(matrix)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var f,fl,face;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face.centroid.set(0,0,0),face.centroid.add(this.vertices[face.a]),face.centroid.add(this.vertices[face.b]),face.centroid.add(this.vertices[face.c]),face.centroid.divideScalar(3)},computeFaceNormals:function(){for(var cb=new THREE.Vector3,ab=new THREE.Vector3,f=0,fl=this.faces.length;fl>f;f++){var face=this.faces[f],vA=this.vertices[face.a],vB=this.vertices[face.b],vC=this.vertices[face.c];cb.subVectors(vC,vB),ab.subVectors(vA,vB),cb.cross(ab),cb.normalize(),face.normal.copy(cb)}},computeVertexNormals:function(areaWeighted){var v,vl,f,fl,face,vertices;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),vertices=this.__tmpVertices,v=0,vl=this.vertices.length;vl>v;v++)vertices[v]=new THREE.Vector3;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else for(vertices=this.__tmpVertices,v=0,vl=this.vertices.length;vl>v;v++)vertices[v].set(0,0,0);if(areaWeighted){{var vA,vB,vC,cb=new THREE.Vector3,ab=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3}for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],vA=this.vertices[face.a],vB=this.vertices[face.b],vC=this.vertices[face.c],cb.subVectors(vC,vB),ab.subVectors(vA,vB),cb.cross(ab),vertices[face.a].add(cb),vertices[face.b].add(cb),vertices[face.c].add(cb)}else for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],vertices[face.a].add(face.normal),vertices[face.b].add(face.normal),vertices[face.c].add(face.normal);for(v=0,vl=this.vertices.length;vl>v;v++)vertices[v].normalize();for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face.vertexNormals[0].copy(vertices[face.a]),face.vertexNormals[1].copy(vertices[face.b]),face.vertexNormals[2].copy(vertices[face.c])},computeMorphNormals:function(){var i,il,f,fl,face;for(f=0,fl=this.faces.length;fl>f;f++)for(face=this.faces[f],face.__originalFaceNormal?face.__originalFaceNormal.copy(face.normal):face.__originalFaceNormal=face.normal.clone(),face.__originalVertexNormals||(face.__originalVertexNormals=[]),i=0,il=face.vertexNormals.length;il>i;i++)face.__originalVertexNormals[i]?face.__originalVertexNormals[i].copy(face.vertexNormals[i]):face.__originalVertexNormals[i]=face.vertexNormals[i].clone();var tmpGeo=new THREE.Geometry;for(tmpGeo.faces=this.faces,i=0,il=this.morphTargets.length;il>i;i++){if(!this.morphNormals[i]){this.morphNormals[i]={},this.morphNormals[i].faceNormals=[],this.morphNormals[i].vertexNormals=[];var faceNormal,vertexNormals,dstNormalsFace=this.morphNormals[i].faceNormals,dstNormalsVertex=this.morphNormals[i].vertexNormals;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],faceNormal=new THREE.Vector3,vertexNormals={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},dstNormalsFace.push(faceNormal),dstNormalsVertex.push(vertexNormals)}var morphNormals=this.morphNormals[i];tmpGeo.vertices=this.morphTargets[i].vertices,tmpGeo.computeFaceNormals(),tmpGeo.computeVertexNormals();var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],faceNormal=morphNormals.faceNormals[f],vertexNormals=morphNormals.vertexNormals[f],faceNormal.copy(face.normal),vertexNormals.a.copy(face.vertexNormals[0]),vertexNormals.b.copy(face.vertexNormals[1]),vertexNormals.c.copy(face.vertexNormals[2])}for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face.normal=face.__originalFaceNormal,face.vertexNormals=face.__originalVertexNormals},computeTangents:function(){function handleTriangle(context,a,b,c,ua,ub,uc){vA=context.vertices[a],vB=context.vertices[b],vC=context.vertices[c],uvA=uv[ua],uvB=uv[ub],uvC=uv[uc],x1=vB.x-vA.x,x2=vC.x-vA.x,y1=vB.y-vA.y,y2=vC.y-vA.y,z1=vB.z-vA.z,z2=vC.z-vA.z,s1=uvB.x-uvA.x,s2=uvC.x-uvA.x,t1=uvB.y-uvA.y,t2=uvC.y-uvA.y,r=1/(s1*t2-s2*t1),sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r),tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r),tan1[a].add(sdir),tan1[b].add(sdir),tan1[c].add(sdir),tan2[a].add(tdir),tan2[b].add(tdir),tan2[c].add(tdir)}var f,fl,v,vl,i,vertexIndex,face,uv,vA,vB,vC,uvA,uvB,uvC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r,t,test,w,tan1=[],tan2=[],sdir=new THREE.Vector3,tdir=new THREE.Vector3,tmp=new THREE.Vector3,tmp2=new THREE.Vector3,n=new THREE.Vector3;for(v=0,vl=this.vertices.length;vl>v;v++)tan1[v]=new THREE.Vector3,tan2[v]=new THREE.Vector3;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],uv=this.faceVertexUvs[0][f],handleTriangle(this,face.a,face.b,face.c,0,1,2);var faceIndex=["a","b","c","d"];for(f=0,fl=this.faces.length;fl>f;f++)for(face=this.faces[f],i=0;i<Math.min(face.vertexNormals.length,3);i++)n.copy(face.vertexNormals[i]),vertexIndex=face[faceIndex[i]],t=tan1[vertexIndex],tmp.copy(t),tmp.sub(n.multiplyScalar(n.dot(t))).normalize(),tmp2.crossVectors(face.vertexNormals[i],t),test=tmp2.dot(tan2[vertexIndex]),w=0>test?-1:1,face.vertexTangents[i]=new THREE.Vector4(tmp.x,tmp.y,tmp.z,w);this.hasTangents=!0},computeLineDistances:function(){for(var d=0,vertices=this.vertices,i=0,il=vertices.length;il>i;i++)i>0&&(d+=vertices[i].distanceTo(vertices[i-1])),this.lineDistances[i]=d},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var v,key,i,il,face,indices,j,jl,verticesMap={},unique=[],changes=[],precisionPoints=4,precision=Math.pow(10,precisionPoints);for(this.__tmpVertices=void 0,i=0,il=this.vertices.length;il>i;i++)v=this.vertices[i],key=Math.round(v.x*precision)+"_"+Math.round(v.y*precision)+"_"+Math.round(v.z*precision),void 0===verticesMap[key]?(verticesMap[key]=i,unique.push(this.vertices[i]),changes[i]=unique.length-1):changes[i]=changes[verticesMap[key]];var faceIndicesToRemove=[];for(i=0,il=this.faces.length;il>i;i++){face=this.faces[i],face.a=changes[face.a],face.b=changes[face.b],face.c=changes[face.c],indices=[face.a,face.b,face.c];for(var dupIndex=-1,n=0;3>n;n++)if(indices[n]==indices[(n+1)%3]){dupIndex=n,faceIndicesToRemove.push(i);break}}for(i=faceIndicesToRemove.length-1;i>=0;i--){var idx=faceIndicesToRemove[i];for(this.faces.splice(idx,1),j=0,jl=this.faceVertexUvs.length;jl>j;j++)this.faceVertexUvs[j].splice(idx,1)}var diff=this.vertices.length-unique.length;return this.vertices=unique,diff},clone:function(){for(var geometry=new THREE.Geometry,vertices=this.vertices,i=0,il=vertices.length;il>i;i++)geometry.vertices.push(vertices[i].clone());for(var faces=this.faces,i=0,il=faces.length;il>i;i++)geometry.faces.push(faces[i].clone());for(var uvs=this.faceVertexUvs[0],i=0,il=uvs.length;il>i;i++){for(var uv=uvs[i],uvCopy=[],j=0,jl=uv.length;jl>j;j++)uvCopy.push(new THREE.Vector2(uv[j].x,uv[j].y));geometry.faceVertexUvs[0].push(uvCopy)}return geometry},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.dynamic=!0,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(name,type,numItems,itemSize){this.attributes[name]={itemSize:itemSize,array:new type(numItems*itemSize)}},applyMatrix:function(matrix){var positionArray,normalArray;if(this.attributes.position&&(positionArray=this.attributes.position.array),this.attributes.normal&&(normalArray=this.attributes.normal.array),void 0!==positionArray&&(matrix.multiplyVector3Array(positionArray),this.verticesNeedUpdate=!0),void 0!==normalArray){var normalMatrix=(new THREE.Matrix3).getNormalMatrix(matrix);normalMatrix.multiplyVector3Array(normalArray),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var positions=this.attributes.position.array;if(positions){var x,y,z,bb=this.boundingBox;positions.length>=3&&(bb.min.x=bb.max.x=positions[0],bb.min.y=bb.max.y=positions[1],bb.min.z=bb.max.z=positions[2]);for(var i=3,il=positions.length;il>i;i+=3)x=positions[i],y=positions[i+1],z=positions[i+2],x<bb.min.x?bb.min.x=x:x>bb.max.x&&(bb.max.x=x),y<bb.min.y?bb.min.y=y:y>bb.max.y&&(bb.max.y=y),z<bb.min.z?bb.min.z=z:z>bb.max.z&&(bb.max.z=z)}(void 0===positions||0===positions.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var box=new THREE.Box3,vector=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var positions=this.attributes.position.array;if(positions){for(var center=this.boundingSphere.center,i=0,il=positions.length;il>i;i+=3)vector.set(positions[i],positions[i+1],positions[i+2]),box.addPoint(vector);box.center(center);for(var maxRadiusSq=0,i=0,il=positions.length;il>i;i+=3)vector.set(positions[i],positions[i+1],positions[i+2]),maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(vector));this.boundingSphere.radius=Math.sqrt(maxRadiusSq)}}}(),computeVertexNormals:function(){if(this.attributes.position){var i,il,j,jl,nVertexElements=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(nVertexElements)};else for(i=0,il=this.attributes.normal.array.length;il>i;i++)this.attributes.normal.array[i]=0;var vA,vB,vC,x,y,z,positions=this.attributes.position.array,normals=this.attributes.normal.array,pA=new THREE.Vector3,pB=new THREE.Vector3,pC=new THREE.Vector3,cb=new THREE.Vector3,ab=new THREE.Vector3;if(this.attributes.index){var indices=this.attributes.index.array,offsets=this.offsets;for(j=0,jl=offsets.length;jl>j;++j){var start=offsets[j].start,count=offsets[j].count,index=offsets[j].index;for(i=start,il=start+count;il>i;i+=3)vA=index+indices[i],vB=index+indices[i+1],vC=index+indices[i+2],x=positions[3*vA],y=positions[3*vA+1],z=positions[3*vA+2],pA.set(x,y,z),x=positions[3*vB],y=positions[3*vB+1],z=positions[3*vB+2],pB.set(x,y,z),x=positions[3*vC],y=positions[3*vC+1],z=positions[3*vC+2],pC.set(x,y,z),cb.subVectors(pC,pB),ab.subVectors(pA,pB),cb.cross(ab),normals[3*vA]+=cb.x,normals[3*vA+1]+=cb.y,normals[3*vA+2]+=cb.z,normals[3*vB]+=cb.x,normals[3*vB+1]+=cb.y,normals[3*vB+2]+=cb.z,normals[3*vC]+=cb.x,normals[3*vC+1]+=cb.y,normals[3*vC+2]+=cb.z}}else for(i=0,il=positions.length;il>i;i+=9)x=positions[i],y=positions[i+1],z=positions[i+2],pA.set(x,y,z),x=positions[i+3],y=positions[i+4],z=positions[i+5],pB.set(x,y,z),x=positions[i+6],y=positions[i+7],z=positions[i+8],pC.set(x,y,z),cb.subVectors(pC,pB),ab.subVectors(pA,pB),cb.cross(ab),normals[i]=cb.x,normals[i+1]=cb.y,normals[i+2]=cb.z,normals[i+3]=cb.x,normals[i+4]=cb.y,normals[i+5]=cb.z,normals[i+6]=cb.x,normals[i+7]=cb.y,normals[i+8]=cb.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var x,y,z,n,normals=this.attributes.normal.array,i=0,il=normals.length;il>i;i+=3)x=normals[i],y=normals[i+1],z=normals[i+2],n=1/Math.sqrt(x*x+y*y+z*z),normals[i]*=n,normals[i+1]*=n,normals[i+2]*=n},computeTangents:function(){function handleTriangle(a,b,c){xA=positions[3*a],yA=positions[3*a+1],zA=positions[3*a+2],xB=positions[3*b],yB=positions[3*b+1],zB=positions[3*b+2],xC=positions[3*c],yC=positions[3*c+1],zC=positions[3*c+2],uA=uvs[2*a],vA=uvs[2*a+1],uB=uvs[2*b],vB=uvs[2*b+1],uC=uvs[2*c],vC=uvs[2*c+1],x1=xB-xA,x2=xC-xA,y1=yB-yA,y2=yC-yA,z1=zB-zA,z2=zC-zA,s1=uB-uA,s2=uC-uA,t1=vB-vA,t2=vC-vA,r=1/(s1*t2-s2*t1),sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r),tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r),tan1[a].add(sdir),tan1[b].add(sdir),tan1[c].add(sdir),tan2[a].add(tdir),tan2[b].add(tdir),tan2[c].add(tdir)}function handleVertex(v){n.x=normals[3*v],n.y=normals[3*v+1],n.z=normals[3*v+2],n2.copy(n),t=tan1[v],tmp.copy(t),tmp.sub(n.multiplyScalar(n.dot(t))).normalize(),tmp2.crossVectors(n2,t),test=tmp2.dot(tan2[v]),w=0>test?-1:1,tangents[4*v]=tmp.x,tangents[4*v+1]=tmp.y,tangents[4*v+2]=tmp.z,tangents[4*v+3]=w}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var indices=this.attributes.index.array,positions=this.attributes.position.array,normals=this.attributes.normal.array,uvs=this.attributes.uv.array,nVertices=positions.length/3;if(void 0===this.attributes.tangent){var nTangentElements=4*nVertices;this.attributes.tangent={itemSize:4,array:new Float32Array(nTangentElements)}}for(var tangents=this.attributes.tangent.array,tan1=[],tan2=[],k=0;nVertices>k;k++)tan1[k]=new THREE.Vector3,tan2[k]=new THREE.Vector3;var xA,yA,zA,xB,yB,zB,xC,yC,zC,uA,vA,uB,vB,uC,vC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r,i,il,j,jl,iA,iB,iC,sdir=new THREE.Vector3,tdir=new THREE.Vector3,offsets=this.offsets;for(j=0,jl=offsets.length;jl>j;++j){var start=offsets[j].start,count=offsets[j].count,index=offsets[j].index;for(i=start,il=start+count;il>i;i+=3)iA=index+indices[i],iB=index+indices[i+1],iC=index+indices[i+2],handleTriangle(iA,iB,iC)}var w,t,test,tmp=new THREE.Vector3,tmp2=new THREE.Vector3,n=new THREE.Vector3,n2=new THREE.Vector3;for(j=0,jl=offsets.length;jl>j;++j){var start=offsets[j].start,count=offsets[j].count,index=offsets[j].index;for(i=start,il=start+count;il>i;i+=3)iA=index+indices[i],iB=index+indices[i+1],iC=index+indices[i+2],handleVertex(iA),handleVertex(iB),handleVertex(iC)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},clone:function(){var geometry=new THREE.BufferGeometry,types=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var attr in this.attributes){for(var sourceAttr=this.attributes[attr],sourceArray=sourceAttr.array,attribute={itemSize:sourceAttr.itemSize,numItems:sourceAttr.numItems,array:null},i=0,il=types.length;il>i;i++){var type=types[i];if(sourceArray instanceof type){attribute.array=new type(sourceArray);break}}geometry.attributes[attr]=attribute}for(var i=0,il=this.offsets.length;il>i;i++){var offset=this.offsets[i];geometry.offsets.push({start:offset.start,index:offset.index,count:offset.count})}return geometry},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var m1=new THREE.Matrix4;return function(vector){m1.lookAt(this.position,vector,this.up),this.quaternion.setFromRotationMatrix(m1)}}(),THREE.Camera.prototype.clone=function(camera){return void 0===camera&&(camera=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,camera),camera.matrixWorldInverse.copy(this.matrixWorldInverse),camera.projectionMatrix.copy(this.projectionMatrix),camera.projectionMatrixInverse.copy(this.projectionMatrixInverse),camera},THREE.OrthographicCamera=function(left,right,top,bottom,near,far){THREE.Camera.call(this),this.left=left,this.right=right,this.top=top,this.bottom=bottom,this.near=void 0!==near?near:.1,this.far=void 0!==far?far:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var camera=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,camera),camera.left=this.left,camera.right=this.right,camera.top=this.top,camera.bottom=this.bottom,camera.near=this.near,camera.far=this.far,camera},THREE.PerspectiveCamera=function(fov,aspect,near,far){THREE.Camera.call(this),this.fov=void 0!==fov?fov:50,this.aspect=void 0!==aspect?aspect:1,this.near=void 0!==near?near:.1,this.far=void 0!==far?far:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(focalLength,frameHeight){void 0===frameHeight&&(frameHeight=24),this.fov=2*THREE.Math.radToDeg(Math.atan(frameHeight/(2*focalLength))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(fullWidth,fullHeight,x,y,width,height){this.fullWidth=fullWidth,this.fullHeight=fullHeight,this.x=x,this.y=y,this.width=width,this.height=height,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var aspect=this.fullWidth/this.fullHeight,top=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,bottom=-top,left=aspect*bottom,right=aspect*top,width=Math.abs(right-left),height=Math.abs(top-bottom);this.projectionMatrix.makeFrustum(left+this.x*width/this.fullWidth,left+(this.x+this.width)*width/this.fullWidth,top-(this.y+this.height)*height/this.fullHeight,top-this.y*height/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var camera=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,camera),camera.fov=this.fov,camera.aspect=this.aspect,camera.near=this.near,camera.far=this.far,camera},THREE.Light=function(hex){THREE.Object3D.call(this),this.color=new THREE.Color(hex)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(light){return void 0===light&&(light=new THREE.Light),THREE.Object3D.prototype.clone.call(this,light),light.color.copy(this.color),light},THREE.AmbientLight=function(hex){THREE.Light.call(this,hex)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var light=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,light),light},THREE.AreaLight=function(hex,intensity){THREE.Light.call(this,hex),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==intensity?intensity:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(hex,intensity){THREE.Light.call(this,hex),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==intensity?intensity:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var light=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,light),light.target=this.target.clone(),light.intensity=this.intensity,light.castShadow=this.castShadow,light.onlyShadow=this.onlyShadow,light},THREE.HemisphereLight=function(skyColorHex,groundColorHex,intensity){THREE.Light.call(this,skyColorHex),this.position.set(0,100,0),this.groundColor=new THREE.Color(groundColorHex),this.intensity=void 0!==intensity?intensity:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var light=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,light),light.groundColor.copy(this.groundColor),light.intensity=this.intensity,light},THREE.PointLight=function(hex,intensity,distance){THREE.Light.call(this,hex),this.intensity=void 0!==intensity?intensity:1,this.distance=void 0!==distance?distance:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var light=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,light),light.intensity=this.intensity,light.distance=this.distance,light},THREE.SpotLight=function(hex,intensity,distance,angle,exponent){THREE.Light.call(this,hex),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==intensity?intensity:1,this.distance=void 0!==distance?distance:0,this.angle=void 0!==angle?angle:Math.PI/3,this.exponent=void 0!==exponent?exponent:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var light=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,light),light.target=this.target.clone(),light.intensity=this.intensity,light.distance=this.distance,light.angle=this.angle,light.exponent=this.exponent,light.castShadow=this.castShadow,light.onlyShadow=this.onlyShadow,light},THREE.Loader=function(showStatus){this.showStatus=showStatus,this.statusDomElement=showStatus?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}
},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(progress){var message="Loaded ";message+=progress.total?(100*progress.loaded/progress.total).toFixed(0)+"%":(progress.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=message},extractUrlBase:function(url){var parts=url.split("/");return parts.pop(),(parts.length<1?".":parts.join("/"))+"/"},initMaterials:function(materials,texturePath){for(var array=[],i=0;i<materials.length;++i)array[i]=THREE.Loader.prototype.createMaterial(materials[i],texturePath);return array},needsTangents:function(materials){for(var i=0,il=materials.length;il>i;i++){var m=materials[i];if(m instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(m,texturePath){function is_pow2(n){var l=Math.log(n)/Math.LN2;return Math.floor(l)==l}function nearest_pow2(n){var l=Math.log(n)/Math.LN2;return Math.pow(2,Math.round(l))}function load_image(where,url){var image=new Image;image.onload=function(){if(is_pow2(this.width)&&is_pow2(this.height))where.image=this;else{var width=nearest_pow2(this.width),height=nearest_pow2(this.height);where.image.width=width,where.image.height=height,where.image.getContext("2d").drawImage(this,0,0,width,height)}where.needsUpdate=!0},image.crossOrigin=_this.crossOrigin,image.src=url}function create_texture(where,name,sourceFile,repeat,offset,wrap,anisotropy){var isCompressed=/\.dds$/i.test(sourceFile),fullPath=texturePath+"/"+sourceFile;if(isCompressed){var texture=THREE.ImageUtils.loadCompressedTexture(fullPath);where[name]=texture}else{var texture=document.createElement("canvas");where[name]=new THREE.Texture(texture)}if(where[name].sourceFile=sourceFile,repeat&&(where[name].repeat.set(repeat[0],repeat[1]),1!==repeat[0]&&(where[name].wrapS=THREE.RepeatWrapping),1!==repeat[1]&&(where[name].wrapT=THREE.RepeatWrapping)),offset&&where[name].offset.set(offset[0],offset[1]),wrap){var wrapMap={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==wrapMap[wrap[0]]&&(where[name].wrapS=wrapMap[wrap[0]]),void 0!==wrapMap[wrap[1]]&&(where[name].wrapT=wrapMap[wrap[1]])}anisotropy&&(where[name].anisotropy=anisotropy),isCompressed||load_image(where[name],fullPath)}function rgb2hex(rgb){return(255*rgb[0]<<16)+(255*rgb[1]<<8)+255*rgb[2]}var _this=this,mtype="MeshLambertMaterial",mpars={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(m.shading){var shading=m.shading.toLowerCase();"phong"===shading?mtype="MeshPhongMaterial":"basic"===shading&&(mtype="MeshBasicMaterial")}if(void 0!==m.blending&&void 0!==THREE[m.blending]&&(mpars.blending=THREE[m.blending]),(void 0!==m.transparent||m.opacity<1)&&(mpars.transparent=m.transparent),void 0!==m.depthTest&&(mpars.depthTest=m.depthTest),void 0!==m.depthWrite&&(mpars.depthWrite=m.depthWrite),void 0!==m.visible&&(mpars.visible=m.visible),void 0!==m.flipSided&&(mpars.side=THREE.BackSide),void 0!==m.doubleSided&&(mpars.side=THREE.DoubleSide),void 0!==m.wireframe&&(mpars.wireframe=m.wireframe),void 0!==m.vertexColors&&("face"===m.vertexColors?mpars.vertexColors=THREE.FaceColors:m.vertexColors&&(mpars.vertexColors=THREE.VertexColors)),m.colorDiffuse?mpars.color=rgb2hex(m.colorDiffuse):m.DbgColor&&(mpars.color=m.DbgColor),m.colorSpecular&&(mpars.specular=rgb2hex(m.colorSpecular)),m.colorAmbient&&(mpars.ambient=rgb2hex(m.colorAmbient)),m.transparency&&(mpars.opacity=m.transparency),m.specularCoef&&(mpars.shininess=m.specularCoef),m.mapDiffuse&&texturePath&&create_texture(mpars,"map",m.mapDiffuse,m.mapDiffuseRepeat,m.mapDiffuseOffset,m.mapDiffuseWrap,m.mapDiffuseAnisotropy),m.mapLight&&texturePath&&create_texture(mpars,"lightMap",m.mapLight,m.mapLightRepeat,m.mapLightOffset,m.mapLightWrap,m.mapLightAnisotropy),m.mapBump&&texturePath&&create_texture(mpars,"bumpMap",m.mapBump,m.mapBumpRepeat,m.mapBumpOffset,m.mapBumpWrap,m.mapBumpAnisotropy),m.mapNormal&&texturePath&&create_texture(mpars,"normalMap",m.mapNormal,m.mapNormalRepeat,m.mapNormalOffset,m.mapNormalWrap,m.mapNormalAnisotropy),m.mapSpecular&&texturePath&&create_texture(mpars,"specularMap",m.mapSpecular,m.mapSpecularRepeat,m.mapSpecularOffset,m.mapSpecularWrap,m.mapSpecularAnisotropy),m.mapBumpScale&&(mpars.bumpScale=m.mapBumpScale),m.mapNormal){var shader=THREE.ShaderLib.normalmap,uniforms=THREE.UniformsUtils.clone(shader.uniforms);uniforms.tNormal.value=mpars.normalMap,m.mapNormalFactor&&uniforms.uNormalScale.value.set(m.mapNormalFactor,m.mapNormalFactor),mpars.map&&(uniforms.tDiffuse.value=mpars.map,uniforms.enableDiffuse.value=!0),mpars.specularMap&&(uniforms.tSpecular.value=mpars.specularMap,uniforms.enableSpecular.value=!0),mpars.lightMap&&(uniforms.tAO.value=mpars.lightMap,uniforms.enableAO.value=!0),uniforms.uDiffuseColor.value.setHex(mpars.color),uniforms.uSpecularColor.value.setHex(mpars.specular),uniforms.uAmbientColor.value.setHex(mpars.ambient),uniforms.uShininess.value=mpars.shininess,void 0!==mpars.opacity&&(uniforms.uOpacity.value=mpars.opacity);var parameters={fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:!0,fog:!0},material=new THREE.ShaderMaterial(parameters);mpars.transparent&&(material.transparent=!0)}else var material=new THREE[mtype](mpars);return void 0!==m.DbgName&&(material.name=m.DbgName),material}},THREE.XHRLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(url,onLoad,onProgress,onError){var scope=this,request=new XMLHttpRequest;void 0!==onLoad&&request.addEventListener("load",function(event){onLoad(event.target.responseText),scope.manager.itemEnd(url)},!1),void 0!==onProgress&&request.addEventListener("progress",function(event){onProgress(event)},!1),void 0!==onError&&request.addEventListener("error",function(event){onError(event)},!1),void 0!==this.crossOrigin&&(request.crossOrigin=this.crossOrigin),request.open("GET",url,!0),request.send(null),scope.manager.itemStart(url)},setCrossOrigin:function(value){this.crossOrigin=value}},THREE.ImageLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(url,onLoad,onProgress,onError){var scope=this,image=document.createElement("img");return void 0!==onLoad&&image.addEventListener("load",function(){scope.manager.itemEnd(url),onLoad(this)},!1),void 0!==onProgress&&image.addEventListener("progress",function(event){onProgress(event)},!1),void 0!==onError&&image.addEventListener("error",function(event){onError(event)},!1),void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin),image.src=url,scope.manager.itemStart(url),image},setCrossOrigin:function(value){this.crossOrigin=value}},THREE.JSONLoader=function(showStatus){THREE.Loader.call(this,showStatus),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(url,callback,texturePath){texturePath=texturePath&&"string"==typeof texturePath?texturePath:this.extractUrlBase(url),this.onLoadStart(),this.loadAjaxJSON(this,url,callback,texturePath)},THREE.JSONLoader.prototype.loadAjaxJSON=function(context,url,callback,texturePath,callbackProgress){var xhr=new XMLHttpRequest,length=0;xhr.onreadystatechange=function(){if(xhr.readyState===xhr.DONE)if(200===xhr.status||0===xhr.status){if(xhr.responseText){var json=JSON.parse(xhr.responseText),result=context.parse(json,texturePath);callback(result.geometry,result.materials)}else console.warn("THREE.JSONLoader: ["+url+"] seems to be unreachable or file there is empty");context.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+url+"] ["+xhr.status+"]");else xhr.readyState===xhr.LOADING?callbackProgress&&(0===length&&(length=xhr.getResponseHeader("Content-Length")),callbackProgress({total:length,loaded:xhr.responseText.length})):xhr.readyState===xhr.HEADERS_RECEIVED&&void 0!==callbackProgress&&(length=xhr.getResponseHeader("Content-Length"))},xhr.open("GET",url,!0),xhr.withCredentials=this.withCredentials,xhr.send(null)},THREE.JSONLoader.prototype.parse=function(json,texturePath){function parseModel(scale){function isBitSet(value,position){return value&1<<position}var i,j,fi,offset,zLength,colorIndex,normalIndex,uvIndex,materialIndex,type,isQuad,hasMaterial,hasFaceVertexUv,hasFaceNormal,hasFaceVertexNormal,hasFaceColor,hasFaceVertexColor,vertex,face,faceA,faceB,hex,normal,uvLayer,uv,u,v,faces=json.faces,vertices=json.vertices,normals=json.normals,colors=json.colors,nUvLayers=0;if(void 0!==json.uvs){for(i=0;i<json.uvs.length;i++)json.uvs[i].length&&nUvLayers++;for(i=0;nUvLayers>i;i++)geometry.faceVertexUvs[i]=[]}for(offset=0,zLength=vertices.length;zLength>offset;)vertex=new THREE.Vector3,vertex.x=vertices[offset++]*scale,vertex.y=vertices[offset++]*scale,vertex.z=vertices[offset++]*scale,geometry.vertices.push(vertex);for(offset=0,zLength=faces.length;zLength>offset;)if(type=faces[offset++],isQuad=isBitSet(type,0),hasMaterial=isBitSet(type,1),hasFaceVertexUv=isBitSet(type,3),hasFaceNormal=isBitSet(type,4),hasFaceVertexNormal=isBitSet(type,5),hasFaceColor=isBitSet(type,6),hasFaceVertexColor=isBitSet(type,7),isQuad){if(faceA=new THREE.Face3,faceA.a=faces[offset],faceA.b=faces[offset+1],faceA.c=faces[offset+3],faceB=new THREE.Face3,faceB.a=faces[offset+1],faceB.b=faces[offset+2],faceB.c=faces[offset+3],offset+=4,hasMaterial&&(materialIndex=faces[offset++],faceA.materialIndex=materialIndex,faceB.materialIndex=materialIndex),fi=geometry.faces.length,hasFaceVertexUv)for(i=0;nUvLayers>i;i++)for(uvLayer=json.uvs[i],geometry.faceVertexUvs[i][fi]=[],geometry.faceVertexUvs[i][fi+1]=[],j=0;4>j;j++)uvIndex=faces[offset++],u=uvLayer[2*uvIndex],v=uvLayer[2*uvIndex+1],uv=new THREE.Vector2(u,v),2!==j&&geometry.faceVertexUvs[i][fi].push(uv),0!==j&&geometry.faceVertexUvs[i][fi+1].push(uv);if(hasFaceNormal&&(normalIndex=3*faces[offset++],faceA.normal.set(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]),faceB.normal.copy(faceA.normal)),hasFaceVertexNormal)for(i=0;4>i;i++)normalIndex=3*faces[offset++],normal=new THREE.Vector3(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]),2!==i&&faceA.vertexNormals.push(normal),0!==i&&faceB.vertexNormals.push(normal);if(hasFaceColor&&(colorIndex=faces[offset++],hex=colors[colorIndex],faceA.color.setHex(hex),faceB.color.setHex(hex)),hasFaceVertexColor)for(i=0;4>i;i++)colorIndex=faces[offset++],hex=colors[colorIndex],2!==i&&faceA.vertexColors.push(new THREE.Color(hex)),0!==i&&faceB.vertexColors.push(new THREE.Color(hex));geometry.faces.push(faceA),geometry.faces.push(faceB)}else{if(face=new THREE.Face3,face.a=faces[offset++],face.b=faces[offset++],face.c=faces[offset++],hasMaterial&&(materialIndex=faces[offset++],face.materialIndex=materialIndex),fi=geometry.faces.length,hasFaceVertexUv)for(i=0;nUvLayers>i;i++)for(uvLayer=json.uvs[i],geometry.faceVertexUvs[i][fi]=[],j=0;3>j;j++)uvIndex=faces[offset++],u=uvLayer[2*uvIndex],v=uvLayer[2*uvIndex+1],uv=new THREE.Vector2(u,v),geometry.faceVertexUvs[i][fi].push(uv);if(hasFaceNormal&&(normalIndex=3*faces[offset++],face.normal.set(normals[normalIndex++],normals[normalIndex++],normals[normalIndex])),hasFaceVertexNormal)for(i=0;3>i;i++)normalIndex=3*faces[offset++],normal=new THREE.Vector3(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]),face.vertexNormals.push(normal);if(hasFaceColor&&(colorIndex=faces[offset++],face.color.setHex(colors[colorIndex])),hasFaceVertexColor)for(i=0;3>i;i++)colorIndex=faces[offset++],face.vertexColors.push(new THREE.Color(colors[colorIndex]));geometry.faces.push(face)}}function parseSkin(){var i,l,x,y,z,w,a,b,c,d;if(json.skinWeights)for(i=0,l=json.skinWeights.length;l>i;i+=2)x=json.skinWeights[i],y=json.skinWeights[i+1],z=0,w=0,geometry.skinWeights.push(new THREE.Vector4(x,y,z,w));if(json.skinIndices)for(i=0,l=json.skinIndices.length;l>i;i+=2)a=json.skinIndices[i],b=json.skinIndices[i+1],c=0,d=0,geometry.skinIndices.push(new THREE.Vector4(a,b,c,d));geometry.bones=json.bones,geometry.animation=json.animation,geometry.animations=json.animations}function parseMorphing(scale){if(void 0!==json.morphTargets){var i,l,v,vl,dstVertices,srcVertices;for(i=0,l=json.morphTargets.length;l>i;i++)for(geometry.morphTargets[i]={},geometry.morphTargets[i].name=json.morphTargets[i].name,geometry.morphTargets[i].vertices=[],dstVertices=geometry.morphTargets[i].vertices,srcVertices=json.morphTargets[i].vertices,v=0,vl=srcVertices.length;vl>v;v+=3){var vertex=new THREE.Vector3;vertex.x=srcVertices[v]*scale,vertex.y=srcVertices[v+1]*scale,vertex.z=srcVertices[v+2]*scale,dstVertices.push(vertex)}}if(void 0!==json.morphColors){var i,l,c,cl,dstColors,srcColors,color;for(i=0,l=json.morphColors.length;l>i;i++)for(geometry.morphColors[i]={},geometry.morphColors[i].name=json.morphColors[i].name,geometry.morphColors[i].colors=[],dstColors=geometry.morphColors[i].colors,srcColors=json.morphColors[i].colors,c=0,cl=srcColors.length;cl>c;c+=3)color=new THREE.Color(16755200),color.setRGB(srcColors[c],srcColors[c+1],srcColors[c+2]),dstColors.push(color)}}var geometry=new THREE.Geometry,scale=void 0!==json.scale?1/json.scale:1;if(parseModel(scale),parseSkin(),parseMorphing(scale),geometry.computeCentroids(),geometry.computeFaceNormals(),geometry.computeBoundingSphere(),void 0===json.materials)return{geometry:geometry};var materials=this.initMaterials(json.materials,texturePath);return this.needsTangents(materials)&&geometry.computeTangents(),{geometry:geometry,materials:materials}},THREE.LoadingManager=function(onLoad,onProgress,onError){var scope=this,loaded=0,total=0;this.onLoad=onLoad,this.onProgress=onProgress,this.onError=onError,this.itemStart=function(){total++},this.itemEnd=function(url){loaded++,void 0!==scope.onProgress&&scope.onProgress(url,loaded,total),loaded===total&&void 0!==scope.onLoad&&scope.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(url,onLoad){var scope=this,loader=new THREE.XHRLoader;loader.setCrossOrigin(this.crossOrigin),loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(json){var geometry=new THREE.BufferGeometry,attributes=json.attributes,offsets=json.offsets,boundingSphere=json.boundingSphere;for(var key in attributes){var attribute=attributes[key];geometry.attributes[key]={itemSize:attribute.itemSize,array:new self[attribute.type](attribute.array)}}return void 0!==offsets&&(geometry.offsets=JSON.parse(JSON.stringify(offsets))),void 0!==boundingSphere&&(geometry.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==boundingSphere.center?boundingSphere.center:[0,0,0]),boundingSphere.radius)),geometry}},THREE.GeometryLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager},THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(url,onLoad){var scope=this,loader=new THREE.XHRLoader;loader.setCrossOrigin(this.crossOrigin),loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(){}},THREE.MaterialLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(url,onLoad){var scope=this,loader=new THREE.XHRLoader;loader.setCrossOrigin(this.crossOrigin),loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(json){var material=new THREE[json.type];if(void 0!==json.color&&material.color.setHex(json.color),void 0!==json.ambient&&material.ambient.setHex(json.ambient),void 0!==json.emissive&&material.emissive.setHex(json.emissive),void 0!==json.specular&&material.specular.setHex(json.specular),void 0!==json.shininess&&(material.shininess=json.shininess),void 0!==json.vertexColors&&(material.vertexColors=json.vertexColors),void 0!==json.blending&&(material.blending=json.blending),void 0!==json.opacity&&(material.opacity=json.opacity),void 0!==json.transparent&&(material.transparent=json.transparent),void 0!==json.wireframe&&(material.wireframe=json.wireframe),void 0!==json.materials)for(var i=0,l=json.materials.length;l>i;i++)material.materials.push(this.parse(json.materials[i]));return material}},THREE.ObjectLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(url,onLoad){var scope=this,loader=new THREE.XHRLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin),loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(json){var geometries=this.parseGeometries(json.geometries),materials=this.parseMaterials(json.materials),object=this.parseObject(json.object,geometries,materials);return object},parseGeometries:function(json){var geometries={};if(void 0!==json)for(var geometryLoader=new THREE.JSONLoader,bufferGeometryLoader=new THREE.BufferGeometryLoader,i=0,l=json.length;l>i;i++){var geometry,data=json[i];switch(data.type){case"PlaneGeometry":geometry=new THREE.PlaneGeometry(data.width,data.height,data.widthSegments,data.heightSegments);break;case"CircleGeometry":geometry=new THREE.CircleGeometry(data.radius,data.segments);break;case"CubeGeometry":geometry=new THREE.CubeGeometry(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case"CylinderGeometry":geometry=new THREE.CylinderGeometry(data.radiusTop,data.radiusBottom,data.height,data.radiusSegments,data.heightSegments,data.openEnded);break;case"SphereGeometry":geometry=new THREE.SphereGeometry(data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case"IcosahedronGeometry":geometry=new THREE.IcosahedronGeometry(data.radius,data.detail);break;case"TorusGeometry":geometry=new THREE.TorusGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case"TorusKnotGeometry":geometry=new THREE.TorusKnotGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.p,data.q,data.heightScale);break;case"BufferGeometry":geometry=bufferGeometryLoader.parse(data.data);break;case"Geometry":geometry=geometryLoader.parse(data.data).geometry}geometry.uuid=data.uuid,void 0!==data.name&&(geometry.name=data.name),geometries[data.uuid]=geometry}return geometries},parseMaterials:function(json){var materials={};if(void 0!==json)for(var loader=new THREE.MaterialLoader,i=0,l=json.length;l>i;i++){var data=json[i],material=loader.parse(data);material.uuid=data.uuid,void 0!==data.name&&(material.name=data.name),materials[data.uuid]=material}return materials},parseObject:function(){var matrix=new THREE.Matrix4;return function(data,geometries,materials){var object;switch(data.type){case"Scene":object=new THREE.Scene;break;case"PerspectiveCamera":object=new THREE.PerspectiveCamera(data.fov,data.aspect,data.near,data.far);break;case"OrthographicCamera":object=new THREE.OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);break;case"AmbientLight":object=new THREE.AmbientLight(data.color);break;case"DirectionalLight":object=new THREE.DirectionalLight(data.color,data.intensity);break;case"PointLight":object=new THREE.PointLight(data.color,data.intensity,data.distance);break;case"SpotLight":object=new THREE.SpotLight(data.color,data.intensity,data.distance,data.angle,data.exponent);break;case"HemisphereLight":object=new THREE.HemisphereLight(data.color,data.groundColor,data.intensity);break;case"Mesh":var geometry=geometries[data.geometry],material=materials[data.material];void 0===geometry&&console.error("THREE.ObjectLoader: Undefined geometry "+data.geometry),void 0===material&&console.error("THREE.ObjectLoader: Undefined material "+data.material),object=new THREE.Mesh(geometry,material);break;default:object=new THREE.Object3D}if(object.uuid=data.uuid,void 0!==data.name&&(object.name=data.name),void 0!==data.matrix?(matrix.fromArray(data.matrix),matrix.decompose(object.position,object.quaternion,object.scale)):(void 0!==data.position&&object.position.fromArray(data.position),void 0!==data.rotation&&object.rotation.fromArray(data.rotation),void 0!==data.scale&&object.scale.fromArray(data.scale)),void 0!==data.visible&&(object.visible=data.visible),void 0!==data.userData&&(object.userData=data.userData),void 0!==data.children)for(var child in data.children)object.add(this.parseObject(data.children[child],geometries,materials));return object}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(url,onLoad){var scope=this,loader=new THREE.XHRLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin),loader.load(url,function(text){scope.parse(JSON.parse(text),onLoad,url)})},setCrossOrigin:function(value){this.crossOrigin=value},addGeometryHandler:function(typeID,loaderClass){this.geometryHandlers[typeID]={loaderClass:loaderClass}},addHierarchyHandler:function(typeID,loaderClass){this.hierarchyHandlers[typeID]={loaderClass:loaderClass}},parse:function(json,callbackFinished,url){function get_url(source_url,url_type){return"relativeToHTML"==url_type?source_url:urlBase+"/"+source_url}function handle_objects(){handle_children(result.scene,data.objects)}function handle_children(parent,children){var mat,dst,pos,rot,scl,quat;for(var objID in children){var object=result.objects[objID],objJSON=children[objID];if(void 0===object){if(objJSON.type&&objJSON.type in scope.hierarchyHandlers){if(void 0===objJSON.loading){var reservedTypes={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},loaderParameters={};for(var parType in objJSON)parType in reservedTypes||(loaderParameters[parType]=objJSON[parType]);material=result.materials[objJSON.material],objJSON.loading=!0;var loader=scope.hierarchyHandlers[objJSON.type].loaderObject;loader.options?loader.load(get_url(objJSON.url,data.urlBaseType),create_callback_hierachy(objID,parent,material,objJSON)):loader.load(get_url(objJSON.url,data.urlBaseType),create_callback_hierachy(objID,parent,material,objJSON),loaderParameters)}}else if(void 0!==objJSON.geometry){if(geometry=result.geometries[objJSON.geometry]){var needsTangents=!1;if(material=result.materials[objJSON.material],needsTangents=material instanceof THREE.ShaderMaterial,pos=objJSON.position,rot=objJSON.rotation,scl=objJSON.scale,mat=objJSON.matrix,quat=objJSON.quaternion,objJSON.material||(material=new THREE.MeshFaceMaterial(result.face_materials[objJSON.geometry])),material instanceof THREE.MeshFaceMaterial&&0===material.materials.length&&(material=new THREE.MeshFaceMaterial(result.face_materials[objJSON.geometry])),material instanceof THREE.MeshFaceMaterial)for(var i=0;i<material.materials.length;i++)needsTangents=needsTangents||material.materials[i]instanceof THREE.ShaderMaterial;needsTangents&&geometry.computeTangents(),objJSON.skin?object=new THREE.SkinnedMesh(geometry,material):objJSON.morph?(object=new THREE.MorphAnimMesh(geometry,material),void 0!==objJSON.duration&&(object.duration=objJSON.duration),void 0!==objJSON.time&&(object.time=objJSON.time),void 0!==objJSON.mirroredLoop&&(object.mirroredLoop=objJSON.mirroredLoop),material.morphNormals&&geometry.computeMorphNormals()):object=new THREE.Mesh(geometry,material),object.name=objID,mat?(object.matrixAutoUpdate=!1,object.matrix.set(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15])):(object.position.fromArray(pos),quat?object.quaternion.fromArray(quat):object.rotation.fromArray(rot),object.scale.fromArray(scl)),object.visible=objJSON.visible,object.castShadow=objJSON.castShadow,object.receiveShadow=objJSON.receiveShadow,parent.add(object),result.objects[objID]=object}}else"DirectionalLight"===objJSON.type||"PointLight"===objJSON.type||"AmbientLight"===objJSON.type?(hex=void 0!==objJSON.color?objJSON.color:16777215,intensity=void 0!==objJSON.intensity?objJSON.intensity:1,"DirectionalLight"===objJSON.type?(pos=objJSON.direction,light=new THREE.DirectionalLight(hex,intensity),light.position.fromArray(pos),objJSON.target&&(target_array.push({object:light,targetName:objJSON.target}),light.target=null)):"PointLight"===objJSON.type?(pos=objJSON.position,dst=objJSON.distance,light=new THREE.PointLight(hex,intensity,dst),light.position.fromArray(pos)):"AmbientLight"===objJSON.type&&(light=new THREE.AmbientLight(hex)),parent.add(light),light.name=objID,result.lights[objID]=light,result.objects[objID]=light):"PerspectiveCamera"===objJSON.type||"OrthographicCamera"===objJSON.type?(pos=objJSON.position,rot=objJSON.rotation,quat=objJSON.quaternion,"PerspectiveCamera"===objJSON.type?camera=new THREE.PerspectiveCamera(objJSON.fov,objJSON.aspect,objJSON.near,objJSON.far):"OrthographicCamera"===objJSON.type&&(camera=new THREE.OrthographicCamera(objJSON.left,objJSON.right,objJSON.top,objJSON.bottom,objJSON.near,objJSON.far)),camera.name=objID,camera.position.fromArray(pos),void 0!==quat?camera.quaternion.fromArray(quat):void 0!==rot&&camera.rotation.fromArray(rot),parent.add(camera),result.cameras[objID]=camera,result.objects[objID]=camera):(pos=objJSON.position,rot=objJSON.rotation,scl=objJSON.scale,quat=objJSON.quaternion,object=new THREE.Object3D,object.name=objID,object.position.fromArray(pos),quat?object.quaternion.fromArray(quat):object.rotation.fromArray(rot),object.scale.fromArray(scl),object.visible=void 0!==objJSON.visible?objJSON.visible:!1,parent.add(object),result.objects[objID]=object,result.empties[objID]=object);if(object){if(void 0!==objJSON.userData)for(var key in objJSON.userData){var value=objJSON.userData[key];object.userData[key]=value}if(void 0!==objJSON.groups)for(var i=0;i<objJSON.groups.length;i++){var groupID=objJSON.groups[i];void 0===result.groups[groupID]&&(result.groups[groupID]=[]),result.groups[groupID].push(objID)}}}void 0!==object&&void 0!==objJSON.children&&handle_children(object,objJSON.children)}}function handle_mesh(geo,mat,id){result.geometries[id]=geo,result.face_materials[id]=mat,handle_objects()}function handle_hierarchy(node,id,parent,material,obj){var p=obj.position,r=obj.rotation,q=obj.quaternion,s=obj.scale;node.position.fromArray(p),q?node.quaternion.fromArray(q):node.rotation.fromArray(r),node.scale.fromArray(s),material&&node.traverse(function(child){child.material=material});var visible=void 0!==obj.visible?obj.visible:!0;node.traverse(function(child){child.visible=visible}),parent.add(node),node.name=id,result.objects[id]=node,handle_objects()}function create_callback_geometry(id){return function(geo,mat){geo.name=id,handle_mesh(geo,mat,id),counter_models-=1,scope.onLoadComplete(),async_callback_gate()}}function create_callback_hierachy(id,parent,material,obj){return function(event){var result;result=event.content?event.content:event.dae?event.scene:event,handle_hierarchy(result,id,parent,material,obj),counter_models-=1,scope.onLoadComplete(),async_callback_gate()}}function create_callback_embed(id){return function(geo,mat){geo.name=id,result.geometries[id]=geo,result.face_materials[id]=mat}}function async_callback_gate(){var progress={totalModels:total_models,totalTextures:total_textures,loadedModels:total_models-counter_models,loadedTextures:total_textures-counter_textures};scope.callbackProgress(progress,result),scope.onLoadProgress(),0===counter_models&&0===counter_textures&&(finalize(),callbackFinished(result))}function finalize(){for(var i=0;i<target_array.length;i++){var ta=target_array[i],target=result.objects[ta.targetName];target?ta.object.target=target:(ta.object.target=new THREE.Object3D,result.scene.add(ta.object.target)),ta.object.target.userData.targetInverse=ta.object}}function traverse_json_hierarchy(objJSON,callback){if(callback(objJSON),void 0!==objJSON.children)for(var objChildID in objJSON.children)traverse_json_hierarchy(objJSON.children[objChildID],callback)}var geometry,material,camera,fog,texture,color,light,hex,intensity,counter_models,counter_textures,total_models,total_textures,result,scope=this,urlBase=THREE.Loader.prototype.extractUrlBase(url),target_array=[],data=json;for(var typeID in this.geometryHandlers){var loaderClass=this.geometryHandlers[typeID].loaderClass;this.geometryHandlers[typeID].loaderObject=new loaderClass}for(var typeID in this.hierarchyHandlers){var loaderClass=this.hierarchyHandlers[typeID].loaderClass;this.hierarchyHandlers[typeID].loaderObject=new loaderClass}if(counter_models=0,counter_textures=0,result={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},data.transform){var position=data.transform.position,rotation=data.transform.rotation,scale=data.transform.scale;position&&result.scene.position.fromArray(position),rotation&&result.scene.rotation.fromArray(rotation),scale&&result.scene.scale.fromArray(scale),(position||rotation||scale)&&(result.scene.updateMatrix(),result.scene.updateMatrixWorld())}var fogID,fogJSON,callbackTexture=function(count){counter_textures-=count,async_callback_gate(),scope.onLoadComplete()},generateTextureCallback=function(count){return function(){callbackTexture(count)}};for(fogID in data.fogs)fogJSON=data.fogs[fogID],"linear"===fogJSON.type?fog=new THREE.Fog(0,fogJSON.near,fogJSON.far):"exp2"===fogJSON.type&&(fog=new THREE.FogExp2(0,fogJSON.density)),color=fogJSON.color,fog.color.setRGB(color[0],color[1],color[2]),result.fogs[fogID]=fog;var geoID,geoJSON;for(geoID in data.geometries)geoJSON=data.geometries[geoID],geoJSON.type in this.geometryHandlers&&(counter_models+=1,scope.onLoadStart());for(var objID in data.objects)traverse_json_hierarchy(data.objects[objID],function(objJSON){objJSON.type&&objJSON.type in scope.hierarchyHandlers&&(counter_models+=1,scope.onLoadStart())});total_models=counter_models;for(geoID in data.geometries)if(geoJSON=data.geometries[geoID],"cube"===geoJSON.type)geometry=new THREE.CubeGeometry(geoJSON.width,geoJSON.height,geoJSON.depth,geoJSON.widthSegments,geoJSON.heightSegments,geoJSON.depthSegments),geometry.name=geoID,result.geometries[geoID]=geometry;else if("plane"===geoJSON.type)geometry=new THREE.PlaneGeometry(geoJSON.width,geoJSON.height,geoJSON.widthSegments,geoJSON.heightSegments),geometry.name=geoID,result.geometries[geoID]=geometry;else if("sphere"===geoJSON.type)geometry=new THREE.SphereGeometry(geoJSON.radius,geoJSON.widthSegments,geoJSON.heightSegments),geometry.name=geoID,result.geometries[geoID]=geometry;else if("cylinder"===geoJSON.type)geometry=new THREE.CylinderGeometry(geoJSON.topRad,geoJSON.botRad,geoJSON.height,geoJSON.radSegs,geoJSON.heightSegs),geometry.name=geoID,result.geometries[geoID]=geometry;else if("torus"===geoJSON.type)geometry=new THREE.TorusGeometry(geoJSON.radius,geoJSON.tube,geoJSON.segmentsR,geoJSON.segmentsT),geometry.name=geoID,result.geometries[geoID]=geometry;
else if("icosahedron"===geoJSON.type)geometry=new THREE.IcosahedronGeometry(geoJSON.radius,geoJSON.subdivisions),geometry.name=geoID,result.geometries[geoID]=geometry;else if(geoJSON.type in this.geometryHandlers){var loaderParameters={};for(var parType in geoJSON)"type"!==parType&&"url"!==parType&&(loaderParameters[parType]=geoJSON[parType]);var loader=this.geometryHandlers[geoJSON.type].loaderObject;loader.load(get_url(geoJSON.url,data.urlBaseType),create_callback_geometry(geoID),loaderParameters)}else if("embedded"===geoJSON.type){var modelJson=data.embeds[geoJSON.id],texture_path="";if(modelJson.metadata=data.metadata,modelJson){var jsonLoader=this.geometryHandlers.ascii.loaderObject,model=jsonLoader.parse(modelJson,texture_path);create_callback_embed(geoID)(model.geometry,model.materials)}}var textureID,textureJSON;for(textureID in data.textures)if(textureJSON=data.textures[textureID],textureJSON.url instanceof Array){counter_textures+=textureJSON.url.length;for(var n=0;n<textureJSON.url.length;n++)scope.onLoadStart()}else counter_textures+=1,scope.onLoadStart();total_textures=counter_textures;for(textureID in data.textures){if(textureJSON=data.textures[textureID],void 0!==textureJSON.mapping&&void 0!==THREE[textureJSON.mapping]&&(textureJSON.mapping=new THREE[textureJSON.mapping]),textureJSON.url instanceof Array){for(var count=textureJSON.url.length,url_array=[],i=0;count>i;i++)url_array[i]=get_url(textureJSON.url[i],data.urlBaseType);var isCompressed=/\.dds$/i.test(url_array[0]);texture=isCompressed?THREE.ImageUtils.loadCompressedTextureCube(url_array,textureJSON.mapping,generateTextureCallback(count)):THREE.ImageUtils.loadTextureCube(url_array,textureJSON.mapping,generateTextureCallback(count))}else{var isCompressed=/\.dds$/i.test(textureJSON.url),fullUrl=get_url(textureJSON.url,data.urlBaseType),textureCallback=generateTextureCallback(1);if(texture=isCompressed?THREE.ImageUtils.loadCompressedTexture(fullUrl,textureJSON.mapping,textureCallback):THREE.ImageUtils.loadTexture(fullUrl,textureJSON.mapping,textureCallback),void 0!==THREE[textureJSON.minFilter]&&(texture.minFilter=THREE[textureJSON.minFilter]),void 0!==THREE[textureJSON.magFilter]&&(texture.magFilter=THREE[textureJSON.magFilter]),textureJSON.anisotropy&&(texture.anisotropy=textureJSON.anisotropy),textureJSON.repeat&&(texture.repeat.set(textureJSON.repeat[0],textureJSON.repeat[1]),1!==textureJSON.repeat[0]&&(texture.wrapS=THREE.RepeatWrapping),1!==textureJSON.repeat[1]&&(texture.wrapT=THREE.RepeatWrapping)),textureJSON.offset&&texture.offset.set(textureJSON.offset[0],textureJSON.offset[1]),textureJSON.wrap){var wrapMap={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==wrapMap[textureJSON.wrap[0]]&&(texture.wrapS=wrapMap[textureJSON.wrap[0]]),void 0!==wrapMap[textureJSON.wrap[1]]&&(texture.wrapT=wrapMap[textureJSON.wrap[1]])}}result.textures[textureID]=texture}var matID,matJSON,parID;for(matID in data.materials){matJSON=data.materials[matID];for(parID in matJSON.parameters)if("envMap"===parID||"map"===parID||"lightMap"===parID||"bumpMap"===parID)matJSON.parameters[parID]=result.textures[matJSON.parameters[parID]];else if("shading"===parID)matJSON.parameters[parID]="flat"===matJSON.parameters[parID]?THREE.FlatShading:THREE.SmoothShading;else if("side"===parID)matJSON.parameters[parID]="double"==matJSON.parameters[parID]?THREE.DoubleSide:"back"==matJSON.parameters[parID]?THREE.BackSide:THREE.FrontSide;else if("blending"===parID)matJSON.parameters[parID]=matJSON.parameters[parID]in THREE?THREE[matJSON.parameters[parID]]:THREE.NormalBlending;else if("combine"===parID)matJSON.parameters[parID]=matJSON.parameters[parID]in THREE?THREE[matJSON.parameters[parID]]:THREE.MultiplyOperation;else if("vertexColors"===parID)"face"==matJSON.parameters[parID]?matJSON.parameters[parID]=THREE.FaceColors:matJSON.parameters[parID]&&(matJSON.parameters[parID]=THREE.VertexColors);else if("wrapRGB"===parID){var v3=matJSON.parameters[parID];matJSON.parameters[parID]=new THREE.Vector3(v3[0],v3[1],v3[2])}if(void 0!==matJSON.parameters.opacity&&matJSON.parameters.opacity<1&&(matJSON.parameters.transparent=!0),matJSON.parameters.normalMap){var shader=THREE.ShaderLib.normalmap,uniforms=THREE.UniformsUtils.clone(shader.uniforms),diffuse=matJSON.parameters.color,specular=matJSON.parameters.specular,ambient=matJSON.parameters.ambient,shininess=matJSON.parameters.shininess;uniforms.tNormal.value=result.textures[matJSON.parameters.normalMap],matJSON.parameters.normalScale&&uniforms.uNormalScale.value.set(matJSON.parameters.normalScale[0],matJSON.parameters.normalScale[1]),matJSON.parameters.map&&(uniforms.tDiffuse.value=matJSON.parameters.map,uniforms.enableDiffuse.value=!0),matJSON.parameters.envMap&&(uniforms.tCube.value=matJSON.parameters.envMap,uniforms.enableReflection.value=!0,uniforms.uReflectivity.value=matJSON.parameters.reflectivity),matJSON.parameters.lightMap&&(uniforms.tAO.value=matJSON.parameters.lightMap,uniforms.enableAO.value=!0),matJSON.parameters.specularMap&&(uniforms.tSpecular.value=result.textures[matJSON.parameters.specularMap],uniforms.enableSpecular.value=!0),matJSON.parameters.displacementMap&&(uniforms.tDisplacement.value=result.textures[matJSON.parameters.displacementMap],uniforms.enableDisplacement.value=!0,uniforms.uDisplacementBias.value=matJSON.parameters.displacementBias,uniforms.uDisplacementScale.value=matJSON.parameters.displacementScale),uniforms.uDiffuseColor.value.setHex(diffuse),uniforms.uSpecularColor.value.setHex(specular),uniforms.uAmbientColor.value.setHex(ambient),uniforms.uShininess.value=shininess,matJSON.parameters.opacity&&(uniforms.uOpacity.value=matJSON.parameters.opacity);var parameters={fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:!0,fog:!0};material=new THREE.ShaderMaterial(parameters)}else material=new THREE[matJSON.type](matJSON.parameters);material.name=matID,result.materials[matID]=material}for(matID in data.materials)if(matJSON=data.materials[matID],matJSON.parameters.materials){for(var materialArray=[],i=0;i<matJSON.parameters.materials.length;i++){var label=matJSON.parameters.materials[i];materialArray.push(result.materials[label])}result.materials[matID].materials=materialArray}handle_objects(),result.cameras&&data.defaults.camera&&(result.currentCamera=result.cameras[data.defaults.camera]),result.fogs&&data.defaults.fog&&(result.scene.fog=result.fogs[data.defaults.fog]),scope.callbackSync(result),async_callback_gate()}},THREE.TextureLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(url,onLoad){var scope=this,loader=new THREE.ImageLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin),loader.load(url,function(image){var texture=new THREE.Texture(image);texture.needsUpdate=!0,void 0!==onLoad&&onLoad(texture)})},setCrossOrigin:function(value){this.crossOrigin=value}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(values){if(void 0!==values)for(var key in values){var newValue=values[key];if(void 0!==newValue){if(key in this){var currentValue=this[key];currentValue instanceof THREE.Color?currentValue.set(newValue):currentValue instanceof THREE.Vector3&&newValue instanceof THREE.Vector3?currentValue.copy(newValue):this[key]="overdraw"==key?Number(newValue):newValue}}else console.warn("THREE.Material: '"+key+"' parameter is undefined.")}},clone:function(material){return void 0===material&&(material=new THREE.Material),material.name=this.name,material.side=this.side,material.opacity=this.opacity,material.transparent=this.transparent,material.blending=this.blending,material.blendSrc=this.blendSrc,material.blendDst=this.blendDst,material.blendEquation=this.blendEquation,material.depthTest=this.depthTest,material.depthWrite=this.depthWrite,material.polygonOffset=this.polygonOffset,material.polygonOffsetFactor=this.polygonOffsetFactor,material.polygonOffsetUnits=this.polygonOffsetUnits,material.alphaTest=this.alphaTest,material.overdraw=this.overdraw,material.visible=this.visible,material},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(parameters)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var material=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.linewidth=this.linewidth,material.linecap=this.linecap,material.linejoin=this.linejoin,material.vertexColors=this.vertexColors,material.fog=this.fog,material},THREE.LineDashedMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(parameters)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var material=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.linewidth=this.linewidth,material.scale=this.scale,material.dashSize=this.dashSize,material.gapSize=this.gapSize,material.vertexColors=this.vertexColors,material.fog=this.fog,material},THREE.MeshBasicMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(parameters)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var material=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.map=this.map,material.lightMap=this.lightMap,material.specularMap=this.specularMap,material.envMap=this.envMap,material.combine=this.combine,material.reflectivity=this.reflectivity,material.refractionRatio=this.refractionRatio,material.fog=this.fog,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.wireframeLinecap=this.wireframeLinecap,material.wireframeLinejoin=this.wireframeLinejoin,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material},THREE.MeshLambertMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(parameters)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var material=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.ambient.copy(this.ambient),material.emissive.copy(this.emissive),material.wrapAround=this.wrapAround,material.wrapRGB.copy(this.wrapRGB),material.map=this.map,material.lightMap=this.lightMap,material.specularMap=this.specularMap,material.envMap=this.envMap,material.combine=this.combine,material.reflectivity=this.reflectivity,material.refractionRatio=this.refractionRatio,material.fog=this.fog,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.wireframeLinecap=this.wireframeLinecap,material.wireframeLinejoin=this.wireframeLinejoin,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material.morphNormals=this.morphNormals,material},THREE.MeshPhongMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(parameters)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var material=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.ambient.copy(this.ambient),material.emissive.copy(this.emissive),material.specular.copy(this.specular),material.shininess=this.shininess,material.metal=this.metal,material.perPixel=this.perPixel,material.wrapAround=this.wrapAround,material.wrapRGB.copy(this.wrapRGB),material.map=this.map,material.lightMap=this.lightMap,material.bumpMap=this.bumpMap,material.bumpScale=this.bumpScale,material.normalMap=this.normalMap,material.normalScale.copy(this.normalScale),material.specularMap=this.specularMap,material.envMap=this.envMap,material.combine=this.combine,material.reflectivity=this.reflectivity,material.refractionRatio=this.refractionRatio,material.fog=this.fog,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.wireframeLinecap=this.wireframeLinecap,material.wireframeLinejoin=this.wireframeLinejoin,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material.morphNormals=this.morphNormals,material},THREE.MeshDepthMaterial=function(parameters){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(parameters)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var material=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,material),material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material},THREE.MeshNormalMaterial=function(parameters){THREE.Material.call(this,parameters),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(parameters)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var material=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,material),material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material},THREE.MeshFaceMaterial=function(materials){this.materials=materials instanceof Array?materials:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var material=new THREE.MeshFaceMaterial,i=0;i<this.materials.length;i++)material.materials.push(this.materials[i].clone());return material},THREE.ParticleSystemMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(parameters)},THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleSystemMaterial.prototype.clone=function(){var material=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.map=this.map,material.size=this.size,material.sizeAttenuation=this.sizeAttenuation,material.vertexColors=this.vertexColors,material.fog=this.fog,material},THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial,THREE.ShaderMaterial=function(parameters){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(parameters)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var material=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,material),material.fragmentShader=this.fragmentShader,material.vertexShader=this.vertexShader,material.uniforms=THREE.UniformsUtils.clone(this.uniforms),material.attributes=this.attributes,material.defines=this.defines,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.fog=this.fog,material.lights=this.lights,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material.morphNormals=this.morphNormals,material},THREE.SpriteMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(parameters),parameters=parameters||{},void 0===parameters.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===parameters.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var material=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.map=this.map,material.useScreenCoordinates=this.useScreenCoordinates,material.sizeAttenuation=this.sizeAttenuation,material.alignment.copy(this.alignment),material.uvOffset.copy(this.uvOffset),material.uvScale.copy(this.uvScale),material.fog=this.fog,material},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(.5,-.5),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-.5),THREE.SpriteAlignment.topRight=new THREE.Vector2(-.5,-.5),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(.5,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-.5,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(.5,.5),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,.5),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-.5,.5),THREE.SpriteCanvasMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(parameters)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var material=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.program=this.program,material},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=image,this.mipmaps=[],this.mapping=void 0!==mapping?mapping:new THREE.UVMapping,this.wrapS=void 0!==wrapS?wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==wrapT?wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==magFilter?magFilter:THREE.LinearFilter,this.minFilter=void 0!==minFilter?minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==anisotropy?anisotropy:1,this.format=void 0!==format?format:THREE.RGBAFormat,this.type=void 0!==type?type:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(texture){return void 0===texture&&(texture=new THREE.Texture),texture.image=this.image,texture.mipmaps=this.mipmaps.slice(0),texture.mapping=this.mapping,texture.wrapS=this.wrapS,texture.wrapT=this.wrapT,texture.magFilter=this.magFilter,texture.minFilter=this.minFilter,texture.anisotropy=this.anisotropy,texture.format=this.format,texture.type=this.type,texture.offset.copy(this.offset),texture.repeat.copy(this.repeat),texture.generateMipmaps=this.generateMipmaps,texture.premultiplyAlpha=this.premultiplyAlpha,texture.flipY=this.flipY,texture.unpackAlignment=this.unpackAlignment,texture},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy),this.image={width:width,height:height},this.mipmaps=mipmaps,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var texture=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,texture),texture},THREE.DataTexture=function(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy),this.image={data:data,width:width,height:height}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var texture=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,texture),texture},THREE.ParticleSystem=function(geometry,material){THREE.Object3D.call(this),this.geometry=void 0!==geometry?geometry:new THREE.Geometry,this.material=void 0!==material?material:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(object){return void 0===object&&(object=new THREE.ParticleSystem(this.geometry,this.material)),object.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,object),object},THREE.Line=function(geometry,material,type){THREE.Object3D.call(this),this.geometry=void 0!==geometry?geometry:new THREE.Geometry,this.material=void 0!==material?material:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==type?type:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(object){return void 0===object&&(object=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,object),object},THREE.Mesh=function(geometry,material){THREE.Object3D.call(this),this.geometry=void 0!==geometry?geometry:new THREE.Geometry,this.material=void 0!==material?material:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var m=0,ml=this.geometry.morphTargets.length;ml>m;m++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[m].name]=m}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(name){return void 0!==this.morphTargetDictionary[name]?this.morphTargetDictionary[name]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+name+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(object){return void 0===object&&(object=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,object),object},THREE.Bone=function(belongsToSkin){THREE.Object3D.call(this),this.skin=belongsToSkin,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(parentSkinMatrix,forceUpdate){this.matrixAutoUpdate&&(forceUpdate|=this.updateMatrix()),(forceUpdate||this.matrixWorldNeedsUpdate)&&(parentSkinMatrix?this.skinMatrix.multiplyMatrices(parentSkinMatrix,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,forceUpdate=!0);var i,l=this.children.length;for(i=0;l>i;i++)this.children[i].update(this.skinMatrix,forceUpdate)},THREE.SkinnedMesh=function(geometry,material,useVertexTexture){THREE.Mesh.call(this,geometry,material),this.useVertexTexture=void 0!==useVertexTexture?useVertexTexture:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var b,bone,gbone,p,q,s;if(this.geometry&&void 0!==this.geometry.bones){for(b=0;b<this.geometry.bones.length;b++)gbone=this.geometry.bones[b],p=gbone.pos,q=gbone.rotq,s=gbone.scl,bone=this.addBone(),bone.name=gbone.name,bone.position.set(p[0],p[1],p[2]),bone.quaternion.set(q[0],q[1],q[2],q[3]),void 0!==s?bone.scale.set(s[0],s[1],s[2]):bone.scale.set(1,1,1);for(b=0;b<this.bones.length;b++)gbone=this.geometry.bones[b],bone=this.bones[b],-1===gbone.parent?this.add(bone):this.bones[gbone.parent].add(bone);var nBones=this.bones.length;if(this.useVertexTexture){var size;size=nBones>256?64:nBones>64?32:nBones>16?16:8,this.boneTextureWidth=size,this.boneTextureHeight=size,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*nBones);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(bone){return void 0===bone&&(bone=new THREE.Bone(this)),this.bones.push(bone),bone},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var offsetMatrix=new THREE.Matrix4;return function(force){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||force)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0);for(var i=0,l=this.children.length;l>i;i++){var child=this.children[i];child instanceof THREE.Bone?child.update(this.identityMatrix,!1):child.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var b=0,bl=this.bones.length;bl>b;b++){var inverse=new THREE.Matrix4;inverse.getInverse(this.bones[b].skinMatrix),this.boneInverses.push(inverse)}}for(var b=0,bl=this.bones.length;bl>b;b++)offsetMatrix.multiplyMatrices(this.bones[b].skinMatrix,this.boneInverses[b]),offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var i=0;i<this.geometry.skinIndices.length;i++){var sw=this.geometry.skinWeights[i],scale=1/sw.lengthManhattan();1/0!==scale?sw.multiplyScalar(scale):sw.set(1)}},THREE.SkinnedMesh.prototype.clone=function(object){return void 0===object&&(object=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,object),object},THREE.MorphAnimMesh=function(geometry,material){THREE.Mesh.call(this,geometry,material),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(start,end){this.startKeyframe=start,this.endKeyframe=end,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var geometry=this.geometry;geometry.animations||(geometry.animations={});for(var firstAnimation,animations=geometry.animations,pattern=/([a-z]+)(\d+)/,i=0,il=geometry.morphTargets.length;il>i;i++){var morph=geometry.morphTargets[i],parts=morph.name.match(pattern);if(parts&&parts.length>1){{var label=parts[1];parts[2]}animations[label]||(animations[label]={start:1/0,end:-1/0});var animation=animations[label];i<animation.start&&(animation.start=i),i>animation.end&&(animation.end=i),firstAnimation||(firstAnimation=label)}}geometry.firstAnimation=firstAnimation},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(label,start,end){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[label]={start:start,end:end}},THREE.MorphAnimMesh.prototype.playAnimation=function(label,fps){var animation=this.geometry.animations[label];animation?(this.setFrameRange(animation.start,animation.end),this.duration=1e3*((animation.end-animation.start)/fps),this.time=0):console.warn("animation["+label+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(delta){var frameTime=this.duration/this.length;this.time+=this.direction*delta,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var keyframe=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/frameTime),0,this.length-1);keyframe!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[keyframe]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=keyframe);
var mix=this.time%frameTime/frameTime;this.directionBackwards&&(mix=1-mix),this.morphTargetInfluences[this.currentKeyframe]=mix,this.morphTargetInfluences[this.lastKeyframe]=1-mix},THREE.MorphAnimMesh.prototype.clone=function(object){return void 0===object&&(object=new THREE.MorphAnimMesh(this.geometry,this.material)),object.duration=this.duration,object.mirroredLoop=this.mirroredLoop,object.time=this.time,object.lastKeyframe=this.lastKeyframe,object.currentKeyframe=this.currentKeyframe,object.direction=this.direction,object.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,object),object},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(object,distance){void 0===distance&&(distance=0),distance=Math.abs(distance);for(var l=0;l<this.objects.length&&!(distance<this.objects[l].distance);l++);this.objects.splice(l,0,{distance:distance,object:object}),this.add(object)},THREE.LOD.prototype.getObjectForDistance=function(distance){for(var i=1,l=this.objects.length;l>i&&!(distance<this.objects[i].distance);i++);return this.objects[i-1].object},THREE.LOD.prototype.update=function(){var v1=new THREE.Vector3,v2=new THREE.Vector3;return function(camera){if(this.objects.length>1){v1.getPositionFromMatrix(camera.matrixWorld),v2.getPositionFromMatrix(this.matrixWorld);var distance=v1.distanceTo(v2);this.objects[0].object.visible=!0;for(var i=1,l=this.objects.length;l>i&&distance>=this.objects[i].distance;i++)this.objects[i-1].object.visible=!1,this.objects[i].object.visible=!0;for(;l>i;i++)this.objects[i].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(material){THREE.Object3D.call(this),this.material=void 0!==material?material:new THREE.SpriteMaterial,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(object){return void 0===object&&(object=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,object),object},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(object){if(object instanceof THREE.Light)-1===this.__lights.indexOf(object)&&this.__lights.push(object),object.target&&void 0===object.target.parent&&this.add(object.target);else if(!(object instanceof THREE.Camera||object instanceof THREE.Bone)){this.__objectsAdded.push(object);var i=this.__objectsRemoved.indexOf(object);-1!==i&&this.__objectsRemoved.splice(i,1)}for(var c=0;c<object.children.length;c++)this.__addObject(object.children[c])},THREE.Scene.prototype.__removeObject=function(object){if(object instanceof THREE.Light){var i=this.__lights.indexOf(object);if(-1!==i&&this.__lights.splice(i,1),object.shadowCascadeArray)for(var x=0;x<object.shadowCascadeArray.length;x++)this.__removeObject(object.shadowCascadeArray[x])}else if(!(object instanceof THREE.Camera)){this.__objectsRemoved.push(object);var i=this.__objectsAdded.indexOf(object);-1!==i&&this.__objectsAdded.splice(i,1)}for(var c=0;c<object.children.length;c++)this.__removeObject(object.children[c])},THREE.Scene.prototype.clone=function(object){return void 0===object&&(object=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,object),null!==this.fog&&(object.fog=this.fog.clone()),null!==this.overrideMaterial&&(object.overrideMaterial=this.overrideMaterial.clone()),object.autoUpdate=this.autoUpdate,object.matrixAutoUpdate=this.matrixAutoUpdate,object},THREE.Fog=function(hex,near,far){this.name="",this.color=new THREE.Color(hex),this.near=void 0!==near?near:1,this.far=void 0!==far?far:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(hex,density){this.name="",this.color=new THREE.Color(hex),this.density=void 0!==density?density:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(parameters){function calculateLights(){_ambientLight.setRGB(0,0,0),_directionalLights.setRGB(0,0,0),_pointLights.setRGB(0,0,0);for(var l=0,ll=_lights.length;ll>l;l++){var light=_lights[l],lightColor=light.color;light instanceof THREE.AmbientLight?_ambientLight.add(lightColor):light instanceof THREE.DirectionalLight?_directionalLights.add(lightColor):light instanceof THREE.PointLight&&_pointLights.add(lightColor)}}function calculateLight(position,normal,color){for(var l=0,ll=_lights.length;ll>l;l++){var light=_lights[l];if(_lightColor.copy(light.color),light instanceof THREE.DirectionalLight){var lightPosition=_vector3.getPositionFromMatrix(light.matrixWorld).normalize(),amount=normal.dot(lightPosition);if(0>=amount)continue;amount*=light.intensity,color.add(_lightColor.multiplyScalar(amount))}else if(light instanceof THREE.PointLight){var lightPosition=_vector3.getPositionFromMatrix(light.matrixWorld),amount=normal.dot(_vector3.subVectors(lightPosition,position).normalize());if(0>=amount)continue;if(amount*=0==light.distance?1:1-Math.min(position.distanceTo(lightPosition)/light.distance,1),0==amount)continue;amount*=light.intensity,color.add(_lightColor.multiplyScalar(amount))}}}function renderSprite(v1,element,material){setOpacity(material.opacity),setBlending(material.blending);var width,height,scaleX,scaleY,bitmap,bitmapWidth,bitmapHeight;if(material instanceof THREE.SpriteMaterial||material instanceof THREE.ParticleSystemMaterial)if(void 0!==material.map.image){if(bitmap=material.map.image,bitmapWidth=bitmap.width>>1,bitmapHeight=bitmap.height>>1,scaleX=element.scale.x*_canvasWidthHalf,scaleY=element.scale.y*_canvasHeightHalf,width=scaleX*bitmapWidth,height=scaleY*bitmapHeight,_elemBox.min.set(v1.x-width,v1.y-height),_elemBox.max.set(v1.x+width,v1.y+height),_clipBox.isIntersectionBox(_elemBox)===!1)return void _elemBox.makeEmpty();_context.save(),_context.translate(v1.x,v1.y),_context.rotate(-element.rotation),_context.scale(scaleX,-scaleY),_context.translate(-bitmapWidth,-bitmapHeight),_context.drawImage(bitmap,0,0),_context.restore()}else{if(scaleX=element.object.scale.x,scaleY=element.object.scale.y,scaleX*=element.scale.x*_canvasWidthHalf,scaleY*=element.scale.y*_canvasHeightHalf,_elemBox.min.set(v1.x-scaleX,v1.y-scaleY),_elemBox.max.set(v1.x+scaleX,v1.y+scaleY),_clipBox.isIntersectionBox(_elemBox)===!1)return void _elemBox.makeEmpty();setFillStyle(material.color.getStyle()),_context.save(),_context.translate(v1.x,v1.y),_context.rotate(-element.rotation),_context.scale(scaleX,scaleY),_context.fillRect(-1,-1,2,2),_context.restore()}else if(material instanceof THREE.SpriteCanvasMaterial){if(width=element.scale.x*_canvasWidthHalf,height=element.scale.y*_canvasHeightHalf,_elemBox.min.set(v1.x-width,v1.y-height),_elemBox.max.set(v1.x+width,v1.y+height),_clipBox.isIntersectionBox(_elemBox)===!1)return void _elemBox.makeEmpty();setStrokeStyle(material.color.getStyle()),setFillStyle(material.color.getStyle()),_context.save(),_context.translate(v1.x,v1.y),_context.rotate(-element.rotation),_context.scale(width,height),material.program(_context),_context.restore()}}function renderLine(v1,v2,element,material){if(setOpacity(material.opacity),setBlending(material.blending),_context.beginPath(),_context.moveTo(v1.positionScreen.x,v1.positionScreen.y),_context.lineTo(v2.positionScreen.x,v2.positionScreen.y),material instanceof THREE.LineBasicMaterial){if(setLineWidth(material.linewidth),setLineCap(material.linecap),setLineJoin(material.linejoin),material.vertexColors!==THREE.VertexColors)setStrokeStyle(material.color.getStyle());else{var colorStyle1=element.vertexColors[0].getStyle(),colorStyle2=element.vertexColors[1].getStyle();if(colorStyle1===colorStyle2)setStrokeStyle(colorStyle1);else{try{var grad=_context.createLinearGradient(v1.positionScreen.x,v1.positionScreen.y,v2.positionScreen.x,v2.positionScreen.y);grad.addColorStop(0,colorStyle1),grad.addColorStop(1,colorStyle2)}catch(exception){grad=colorStyle1}setStrokeStyle(grad)}}_context.stroke(),_elemBox.expandByScalar(2*material.linewidth)}else material instanceof THREE.LineDashedMaterial&&(setLineWidth(material.linewidth),setLineCap(material.linecap),setLineJoin(material.linejoin),setStrokeStyle(material.color.getStyle()),setDashAndGap(material.dashSize,material.gapSize),_context.stroke(),_elemBox.expandByScalar(2*material.linewidth),setDashAndGap(null,null))}function renderFace3(v1,v2,v3,uv1,uv2,uv3,element,material){if(_this.info.render.vertices+=3,_this.info.render.faces++,setOpacity(material.opacity),setBlending(material.blending),_v1x=v1.positionScreen.x,_v1y=v1.positionScreen.y,_v2x=v2.positionScreen.x,_v2y=v2.positionScreen.y,_v3x=v3.positionScreen.x,_v3y=v3.positionScreen.y,drawTriangle(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y),(material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial)&&null===material.map)_diffuseColor.copy(material.color),_emissiveColor.copy(material.emissive),material.vertexColors===THREE.FaceColors&&_diffuseColor.multiply(element.color),material.wireframe===!1&&material.shading==THREE.SmoothShading&&3==element.vertexNormalsLength?(_color1.copy(_ambientLight),_color2.copy(_ambientLight),_color3.copy(_ambientLight),calculateLight(element.v1.positionWorld,element.vertexNormalsModel[0],_color1),calculateLight(element.v2.positionWorld,element.vertexNormalsModel[1],_color2),calculateLight(element.v3.positionWorld,element.vertexNormalsModel[2],_color3),_color1.multiply(_diffuseColor).add(_emissiveColor),_color2.multiply(_diffuseColor).add(_emissiveColor),_color3.multiply(_diffuseColor).add(_emissiveColor),_color4.addColors(_color2,_color3).multiplyScalar(.5),_image=getGradientTexture(_color1,_color2,_color3,_color4),clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image)):(_color.copy(_ambientLight),calculateLight(element.centroidModel,element.normalModel,_color),_color.multiply(_diffuseColor).add(_emissiveColor),material.wireframe===!0?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color));else if(material instanceof THREE.MeshBasicMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial)null!==material.map?material.map.mapping instanceof THREE.UVMapping&&(_uvs=element.uvs[0],patternPath(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_uvs[uv1].x,_uvs[uv1].y,_uvs[uv2].x,_uvs[uv2].y,_uvs[uv3].x,_uvs[uv3].y,material.map)):null!==material.envMap?material.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(_vector3.copy(element.vertexNormalsModelView[uv1]),_uv1x=.5*_vector3.x+.5,_uv1y=.5*_vector3.y+.5,_vector3.copy(element.vertexNormalsModelView[uv2]),_uv2x=.5*_vector3.x+.5,_uv2y=.5*_vector3.y+.5,_vector3.copy(element.vertexNormalsModelView[uv3]),_uv3x=.5*_vector3.x+.5,_uv3y=.5*_vector3.y+.5,patternPath(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_uv1x,_uv1y,_uv2x,_uv2y,_uv3x,_uv3y,material.envMap)):(_color.copy(material.color),material.vertexColors===THREE.FaceColors&&_color.multiply(element.color),material.wireframe===!0?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color));else if(material instanceof THREE.MeshDepthMaterial)_near=_camera.near,_far=_camera.far,_color1.r=_color1.g=_color1.b=1-smoothstep(v1.positionScreen.z*v1.positionScreen.w,_near,_far),_color2.r=_color2.g=_color2.b=1-smoothstep(v2.positionScreen.z*v2.positionScreen.w,_near,_far),_color3.r=_color3.g=_color3.b=1-smoothstep(v3.positionScreen.z*v3.positionScreen.w,_near,_far),_color4.addColors(_color2,_color3).multiplyScalar(.5),_image=getGradientTexture(_color1,_color2,_color3,_color4),clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image);else if(material instanceof THREE.MeshNormalMaterial){var normal;material.shading==THREE.FlatShading?(normal=element.normalModelView,_color.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5),material.wireframe===!0?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color)):material.shading==THREE.SmoothShading&&(normal=element.vertexNormalsModelView[uv1],_color1.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5),normal=element.vertexNormalsModelView[uv2],_color2.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5),normal=element.vertexNormalsModelView[uv3],_color3.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5),_color4.addColors(_color2,_color3).multiplyScalar(.5),_image=getGradientTexture(_color1,_color2,_color3,_color4),clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image))}}function drawTriangle(x0,y0,x1,y1,x2,y2){_context.beginPath(),_context.moveTo(x0,y0),_context.lineTo(x1,y1),_context.lineTo(x2,y2),_context.closePath()}function strokePath(color,linewidth,linecap,linejoin){setLineWidth(linewidth),setLineCap(linecap),setLineJoin(linejoin),setStrokeStyle(color.getStyle()),_context.stroke(),_elemBox.expandByScalar(2*linewidth)}function fillPath(color){setFillStyle(color.getStyle()),_context.fill()}function patternPath(x0,y0,x1,y1,x2,y2,u0,v0,u1,v1,u2,v2,texture){if(!(texture instanceof THREE.DataTexture||void 0===texture.image||0==texture.image.width)){if(texture.needsUpdate===!0){var repeatX=texture.wrapS==THREE.RepeatWrapping,repeatY=texture.wrapT==THREE.RepeatWrapping;_patterns[texture.id]=_context.createPattern(texture.image,repeatX===!0&&repeatY===!0?"repeat":repeatX===!0&&repeatY===!1?"repeat-x":repeatX===!1&&repeatY===!0?"repeat-y":"no-repeat"),texture.needsUpdate=!1}setFillStyle(void 0===_patterns[texture.id]?"rgba(0,0,0,1)":_patterns[texture.id]);var a,b,c,d,e,f,det,idet,offsetX=texture.offset.x/texture.repeat.x,offsetY=texture.offset.y/texture.repeat.y,width=texture.image.width*texture.repeat.x,height=texture.image.height*texture.repeat.y;if(u0=(u0+offsetX)*width,v0=(1-v0+offsetY)*height,u1=(u1+offsetX)*width,v1=(1-v1+offsetY)*height,u2=(u2+offsetX)*width,v2=(1-v2+offsetY)*height,x1-=x0,y1-=y0,x2-=x0,y2-=y0,u1-=u0,v1-=v0,u2-=u0,v2-=v0,det=u1*v2-u2*v1,0===det){if(void 0===_imagedatas[texture.id]){var canvas=document.createElement("canvas");canvas.width=texture.image.width,canvas.height=texture.image.height;var context=canvas.getContext("2d");context.drawImage(texture.image,0,0),_imagedatas[texture.id]=context.getImageData(0,0,texture.image.width,texture.image.height).data}var data=_imagedatas[texture.id],index=4*(Math.floor(u0)+Math.floor(v0)*texture.image.width);return _color.setRGB(data[index]/255,data[index+1]/255,data[index+2]/255),void fillPath(_color)}idet=1/det,a=(v2*x1-v1*x2)*idet,b=(v2*y1-v1*y2)*idet,c=(u1*x2-u2*x1)*idet,d=(u1*y2-u2*y1)*idet,e=x0-a*u0-c*v0,f=y0-b*u0-d*v0,_context.save(),_context.transform(a,b,c,d,e,f),_context.fill(),_context.restore()}}function clipImage(x0,y0,x1,y1,x2,y2,u0,v0,u1,v1,u2,v2,image){var a,b,c,d,e,f,det,idet,width=image.width-1,height=image.height-1;u0*=width,v0*=height,u1*=width,v1*=height,u2*=width,v2*=height,x1-=x0,y1-=y0,x2-=x0,y2-=y0,u1-=u0,v1-=v0,u2-=u0,v2-=v0,det=u1*v2-u2*v1,idet=1/det,a=(v2*x1-v1*x2)*idet,b=(v2*y1-v1*y2)*idet,c=(u1*x2-u2*x1)*idet,d=(u1*y2-u2*y1)*idet,e=x0-a*u0-c*v0,f=y0-b*u0-d*v0,_context.save(),_context.transform(a,b,c,d,e,f),_context.clip(),_context.drawImage(image,0,0),_context.restore()}function getGradientTexture(color1,color2,color3,color4){return _pixelMapData[0]=255*color1.r|0,_pixelMapData[1]=255*color1.g|0,_pixelMapData[2]=255*color1.b|0,_pixelMapData[4]=255*color2.r|0,_pixelMapData[5]=255*color2.g|0,_pixelMapData[6]=255*color2.b|0,_pixelMapData[8]=255*color3.r|0,_pixelMapData[9]=255*color3.g|0,_pixelMapData[10]=255*color3.b|0,_pixelMapData[12]=255*color4.r|0,_pixelMapData[13]=255*color4.g|0,_pixelMapData[14]=255*color4.b|0,_pixelMapContext.putImageData(_pixelMapImage,0,0),_gradientMapContext.drawImage(_pixelMap,0,0),_gradientMap}function expand(v1,v2,pixels){var idet,x=v2.x-v1.x,y=v2.y-v1.y,det=x*x+y*y;0!==det&&(idet=pixels/Math.sqrt(det),x*=idet,y*=idet,v2.x+=x,v2.y+=y,v1.x-=x,v1.y-=y)}function setOpacity(value){_contextGlobalAlpha!==value&&(_context.globalAlpha=value,_contextGlobalAlpha=value)}function setBlending(value){_contextGlobalCompositeOperation!==value&&(value===THREE.NormalBlending?_context.globalCompositeOperation="source-over":value===THREE.AdditiveBlending?_context.globalCompositeOperation="lighter":value===THREE.SubtractiveBlending&&(_context.globalCompositeOperation="darker"),_contextGlobalCompositeOperation=value)}function setLineWidth(value){_contextLineWidth!==value&&(_context.lineWidth=value,_contextLineWidth=value)}function setLineCap(value){_contextLineCap!==value&&(_context.lineCap=value,_contextLineCap=value)}function setLineJoin(value){_contextLineJoin!==value&&(_context.lineJoin=value,_contextLineJoin=value)}function setStrokeStyle(value){_contextStrokeStyle!==value&&(_context.strokeStyle=value,_contextStrokeStyle=value)}function setFillStyle(value){_contextFillStyle!==value&&(_context.fillStyle=value,_contextFillStyle=value)}function setDashAndGap(dashSizeValue,gapSizeValue){(_contextDashSize!==dashSizeValue||_contextGapSize!==gapSizeValue)&&(_context.setLineDash([dashSizeValue,gapSizeValue]),_contextDashSize=dashSizeValue,_contextGapSize=gapSizeValue)}console.log("THREE.CanvasRenderer",THREE.REVISION);var smoothstep=THREE.Math.smoothstep;parameters=parameters||{};var _renderData,_elements,_lights,_camera,_v1,_v2,_v3,_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_near,_far,_image,_uvs,_uv1x,_uv1y,_uv2x,_uv2y,_uv3x,_uv3y,_pixelMap,_pixelMapContext,_pixelMapImage,_pixelMapData,_gradientMap,_gradientMapContext,_this=this,_projector=new THREE.Projector,_canvas=void 0!==parameters.canvas?parameters.canvas:document.createElement("canvas"),_canvasWidth=_canvas.width,_canvasHeight=_canvas.height,_canvasWidthHalf=Math.floor(_canvasWidth/2),_canvasHeightHalf=Math.floor(_canvasHeight/2),_context=_canvas.getContext("2d"),_clearColor=new THREE.Color(0),_clearAlpha=0,_contextGlobalAlpha=1,_contextGlobalCompositeOperation=0,_contextStrokeStyle=null,_contextFillStyle=null,_contextLineWidth=null,_contextLineCap=null,_contextLineJoin=null,_contextDashSize=null,_contextGapSize=0,_color=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),_color1=new THREE.Color,_color2=new THREE.Color,_color3=new THREE.Color,_color4=new THREE.Color,_diffuseColor=new THREE.Color,_emissiveColor=new THREE.Color,_lightColor=new THREE.Color,_patterns={},_imagedatas={},_clipBox=new THREE.Box2,_clearBox=new THREE.Box2,_elemBox=new THREE.Box2,_ambientLight=new THREE.Color,_directionalLights=new THREE.Color,_pointLights=new THREE.Color,_vector3=new THREE.Vector3,_gradientMapQuality=16;_pixelMap=document.createElement("canvas"),_pixelMap.width=_pixelMap.height=2,_pixelMapContext=_pixelMap.getContext("2d"),_pixelMapContext.fillStyle="rgba(0,0,0,1)",_pixelMapContext.fillRect(0,0,2,2),_pixelMapImage=_pixelMapContext.getImageData(0,0,2,2),_pixelMapData=_pixelMapImage.data,_gradientMap=document.createElement("canvas"),_gradientMap.width=_gradientMap.height=_gradientMapQuality,_gradientMapContext=_gradientMap.getContext("2d"),_gradientMapContext.translate(-_gradientMapQuality/2,-_gradientMapQuality/2),_gradientMapContext.scale(_gradientMapQuality,_gradientMapQuality),_gradientMapQuality--,void 0===_context.setLineDash&&(_context.setLineDash=void 0!==_context.mozDash?function(values){_context.mozDash=null!==values[0]?values:null}:function(){}),this.domElement=_canvas,this.devicePixelRatio=void 0!==parameters.devicePixelRatio?parameters.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(width,height,updateStyle){_canvasWidth=width*this.devicePixelRatio,_canvasHeight=height*this.devicePixelRatio,_canvasWidthHalf=Math.floor(_canvasWidth/2),_canvasHeightHalf=Math.floor(_canvasHeight/2),_canvas.width=_canvasWidth,_canvas.height=_canvasHeight,1!==this.devicePixelRatio&&updateStyle!==!1&&(_canvas.style.width=width+"px",_canvas.style.height=height+"px"),_clipBox.set(new THREE.Vector2(-_canvasWidthHalf,-_canvasHeightHalf),new THREE.Vector2(_canvasWidthHalf,_canvasHeightHalf)),_clearBox.set(new THREE.Vector2(-_canvasWidthHalf,-_canvasHeightHalf),new THREE.Vector2(_canvasWidthHalf,_canvasHeightHalf)),_contextGlobalAlpha=1,_contextGlobalCompositeOperation=0,_contextStrokeStyle=null,_contextFillStyle=null,_contextLineWidth=null,_contextLineCap=null,_contextLineJoin=null},this.setClearColor=function(color,alpha){_clearColor.set(color),_clearAlpha=void 0!==alpha?alpha:1,_clearBox.set(new THREE.Vector2(-_canvasWidthHalf,-_canvasHeightHalf),new THREE.Vector2(_canvasWidthHalf,_canvasHeightHalf))},this.setClearColorHex=function(hex,alpha){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(hex,alpha)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){_context.setTransform(1,0,0,-1,_canvasWidthHalf,_canvasHeightHalf),_clearBox.empty()===!1&&(_clearBox.intersect(_clipBox),_clearBox.expandByScalar(2),1>_clearAlpha&&_context.clearRect(0|_clearBox.min.x,0|_clearBox.min.y,_clearBox.max.x-_clearBox.min.x|0,_clearBox.max.y-_clearBox.min.y|0),_clearAlpha>0&&(setBlending(THREE.NormalBlending),setOpacity(1),setFillStyle("rgba("+Math.floor(255*_clearColor.r)+","+Math.floor(255*_clearColor.g)+","+Math.floor(255*_clearColor.b)+","+_clearAlpha+")"),_context.fillRect(0|_clearBox.min.x,0|_clearBox.min.y,_clearBox.max.x-_clearBox.min.x|0,_clearBox.max.y-_clearBox.min.y|0)),_clearBox.makeEmpty())},this.render=function(scene,camera){if(camera instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),_context.setTransform(1,0,0,-1,_canvasWidthHalf,_canvasHeightHalf),_this.info.render.vertices=0,_this.info.render.faces=0,_renderData=_projector.projectScene(scene,camera,this.sortObjects,this.sortElements),_elements=_renderData.elements,_lights=_renderData.lights,_camera=camera,calculateLights();for(var e=0,el=_elements.length;el>e;e++){var element=_elements[e],material=element.material;if(void 0!==material&&material.visible!==!1){if(_elemBox.makeEmpty(),element instanceof THREE.RenderableSprite)_v1=element,_v1.x*=_canvasWidthHalf,_v1.y*=_canvasHeightHalf,renderSprite(_v1,element,material);else if(element instanceof THREE.RenderableLine)_v1=element.v1,_v2=element.v2,_v1.positionScreen.x*=_canvasWidthHalf,_v1.positionScreen.y*=_canvasHeightHalf,_v2.positionScreen.x*=_canvasWidthHalf,_v2.positionScreen.y*=_canvasHeightHalf,_elemBox.setFromPoints([_v1.positionScreen,_v2.positionScreen]),_clipBox.isIntersectionBox(_elemBox)===!0&&renderLine(_v1,_v2,element,material);else if(element instanceof THREE.RenderableFace3){if(_v1=element.v1,_v2=element.v2,_v3=element.v3,_v1.positionScreen.z<-1||_v1.positionScreen.z>1)continue;if(_v2.positionScreen.z<-1||_v2.positionScreen.z>1)continue;if(_v3.positionScreen.z<-1||_v3.positionScreen.z>1)continue;_v1.positionScreen.x*=_canvasWidthHalf,_v1.positionScreen.y*=_canvasHeightHalf,_v2.positionScreen.x*=_canvasWidthHalf,_v2.positionScreen.y*=_canvasHeightHalf,_v3.positionScreen.x*=_canvasWidthHalf,_v3.positionScreen.y*=_canvasHeightHalf,material.overdraw>0&&(expand(_v1.positionScreen,_v2.positionScreen,material.overdraw),expand(_v2.positionScreen,_v3.positionScreen,material.overdraw),expand(_v3.positionScreen,_v1.positionScreen,material.overdraw)),_elemBox.setFromPoints([_v1.positionScreen,_v2.positionScreen,_v3.positionScreen]),_clipBox.isIntersectionBox(_elemBox)===!0&&renderFace3(_v1,_v2,_v3,0,1,2,element,material)}_clearBox.union(_elemBox)}}_context.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","uniform int boneTextureWidth;","uniform int boneTextureHeight;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, float( boneTextureWidth ) );","float y = floor( j / float( boneTextureWidth ) );","float dx = 1.0 / float( boneTextureWidth );","float dy = 1.0 / float( boneTextureHeight );","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(uniforms){var u,p,tmp,merged={};
for(u=0;u<uniforms.length;u++){tmp=this.clone(uniforms[u]);for(p in tmp)merged[p]=tmp[p]}return merged},clone:function(uniforms_src){var u,p,parameter_src,uniforms_dst={};for(u in uniforms_src){uniforms_dst[u]={};for(p in uniforms_src[u])parameter_src=uniforms_src[u][p],uniforms_dst[u][p]=parameter_src instanceof THREE.Color||parameter_src instanceof THREE.Vector2||parameter_src instanceof THREE.Vector3||parameter_src instanceof THREE.Vector4||parameter_src instanceof THREE.Matrix4||parameter_src instanceof THREE.Texture?parameter_src.clone():parameter_src instanceof Array?parameter_src.slice():parameter_src}return uniforms_dst}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(parameters){function createParticleBuffers(geometry){geometry.__webglVertexBuffer=_gl.createBuffer(),geometry.__webglColorBuffer=_gl.createBuffer(),_this.info.memory.geometries++}function createLineBuffers(geometry){geometry.__webglVertexBuffer=_gl.createBuffer(),geometry.__webglColorBuffer=_gl.createBuffer(),geometry.__webglLineDistanceBuffer=_gl.createBuffer(),_this.info.memory.geometries++}function createMeshBuffers(geometryGroup){geometryGroup.__webglVertexBuffer=_gl.createBuffer(),geometryGroup.__webglNormalBuffer=_gl.createBuffer(),geometryGroup.__webglTangentBuffer=_gl.createBuffer(),geometryGroup.__webglColorBuffer=_gl.createBuffer(),geometryGroup.__webglUVBuffer=_gl.createBuffer(),geometryGroup.__webglUV2Buffer=_gl.createBuffer(),geometryGroup.__webglSkinIndicesBuffer=_gl.createBuffer(),geometryGroup.__webglSkinWeightsBuffer=_gl.createBuffer(),geometryGroup.__webglFaceBuffer=_gl.createBuffer(),geometryGroup.__webglLineBuffer=_gl.createBuffer();var m,ml;if(geometryGroup.numMorphTargets)for(geometryGroup.__webglMorphTargetsBuffers=[],m=0,ml=geometryGroup.numMorphTargets;ml>m;m++)geometryGroup.__webglMorphTargetsBuffers.push(_gl.createBuffer());if(geometryGroup.numMorphNormals)for(geometryGroup.__webglMorphNormalsBuffers=[],m=0,ml=geometryGroup.numMorphNormals;ml>m;m++)geometryGroup.__webglMorphNormalsBuffers.push(_gl.createBuffer());_this.info.memory.geometries++}function initCustomAttributes(geometry,object){var nvertices=geometry.vertices.length,material=object.material;if(material.attributes){void 0===geometry.__webglCustomAttributesList&&(geometry.__webglCustomAttributesList=[]);for(var a in material.attributes){var attribute=material.attributes[a];if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=!0;var size=1;"v2"===attribute.type?size=2:"v3"===attribute.type?size=3:"v4"===attribute.type?size=4:"c"===attribute.type&&(size=3),attribute.size=size,attribute.array=new Float32Array(nvertices*size),attribute.buffer=_gl.createBuffer(),attribute.buffer.belongsToAttribute=a,attribute.needsUpdate=!0}geometry.__webglCustomAttributesList.push(attribute)}}}function initParticleBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(3*nvertices),geometry.__colorArray=new Float32Array(3*nvertices),geometry.__sortArray=[],geometry.__webglParticleCount=nvertices,initCustomAttributes(geometry,object)}function initLineBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(3*nvertices),geometry.__colorArray=new Float32Array(3*nvertices),geometry.__lineDistanceArray=new Float32Array(1*nvertices),geometry.__webglLineCount=nvertices,initCustomAttributes(geometry,object)}function initMeshBuffers(geometryGroup,object){var geometry=object.geometry,faces3=geometryGroup.faces3,nvertices=3*faces3.length,ntris=1*faces3.length,nlines=3*faces3.length,material=getBufferMaterial(object,geometryGroup),uvType=bufferGuessUVType(material),normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material);geometryGroup.__vertexArray=new Float32Array(3*nvertices),normalType&&(geometryGroup.__normalArray=new Float32Array(3*nvertices)),geometry.hasTangents&&(geometryGroup.__tangentArray=new Float32Array(4*nvertices)),vertexColorType&&(geometryGroup.__colorArray=new Float32Array(3*nvertices)),uvType&&(geometry.faceVertexUvs.length>0&&(geometryGroup.__uvArray=new Float32Array(2*nvertices)),geometry.faceVertexUvs.length>1&&(geometryGroup.__uv2Array=new Float32Array(2*nvertices))),object.geometry.skinWeights.length&&object.geometry.skinIndices.length&&(geometryGroup.__skinIndexArray=new Float32Array(4*nvertices),geometryGroup.__skinWeightArray=new Float32Array(4*nvertices)),geometryGroup.__faceArray=new Uint16Array(3*ntris),geometryGroup.__lineArray=new Uint16Array(2*nlines);var m,ml;if(geometryGroup.numMorphTargets)for(geometryGroup.__morphTargetsArrays=[],m=0,ml=geometryGroup.numMorphTargets;ml>m;m++)geometryGroup.__morphTargetsArrays.push(new Float32Array(3*nvertices));if(geometryGroup.numMorphNormals)for(geometryGroup.__morphNormalsArrays=[],m=0,ml=geometryGroup.numMorphNormals;ml>m;m++)geometryGroup.__morphNormalsArrays.push(new Float32Array(3*nvertices));if(geometryGroup.__webglFaceCount=3*ntris,geometryGroup.__webglLineCount=2*nlines,material.attributes){void 0===geometryGroup.__webglCustomAttributesList&&(geometryGroup.__webglCustomAttributesList=[]);for(var a in material.attributes){var originalAttribute=material.attributes[a],attribute={};for(var property in originalAttribute)attribute[property]=originalAttribute[property];
if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=!0;var size=1;"v2"===attribute.type?size=2:"v3"===attribute.type?size=3:"v4"===attribute.type?size=4:"c"===attribute.type&&(size=3),attribute.size=size,attribute.array=new Float32Array(nvertices*size),attribute.buffer=_gl.createBuffer(),attribute.buffer.belongsToAttribute=a,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute}geometryGroup.__webglCustomAttributesList.push(attribute)}}geometryGroup.__inittedArrays=!0}function getBufferMaterial(object,geometryGroup){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[geometryGroup.materialIndex]:object.material}function materialNeedsSmoothNormals(material){return material&&void 0!==material.shading&&material.shading===THREE.SmoothShading}function bufferGuessNormalType(material){return material instanceof THREE.MeshBasicMaterial&&!material.envMap||material instanceof THREE.MeshDepthMaterial?!1:materialNeedsSmoothNormals(material)?THREE.SmoothShading:THREE.FlatShading}function bufferGuessVertexColorType(material){return material.vertexColors?material.vertexColors:!1}function bufferGuessUVType(material){return material.map||material.lightMap||material.bumpMap||material.normalMap||material.specularMap||material instanceof THREE.ShaderMaterial?!0:!1}function initDirectBuffers(geometry){var a,attribute,type;for(a in geometry.attributes)type="index"===a?_gl.ELEMENT_ARRAY_BUFFER:_gl.ARRAY_BUFFER,attribute=geometry.attributes[a],void 0===attribute.numItems&&(attribute.numItems=attribute.array.length),attribute.buffer=_gl.createBuffer(),_gl.bindBuffer(type,attribute.buffer),_gl.bufferData(type,attribute.array,_gl.STATIC_DRAW)}function setParticleBuffers(geometry,hint,object){var v,c,vertex,offset,index,color,i,il,ca,cal,value,customAttribute,vertices=geometry.vertices,vl=vertices.length,colors=geometry.colors,cl=colors.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,sortArray=geometry.__sortArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyColors=(geometry.elementsNeedUpdate,geometry.colorsNeedUpdate),customAttributes=geometry.__webglCustomAttributesList;if(object.sortParticles){for(_projScreenMatrixPS.copy(_projScreenMatrix),_projScreenMatrixPS.multiply(object.matrixWorld),v=0;vl>v;v++)vertex=vertices[v],_vector3.copy(vertex),_vector3.applyProjection(_projScreenMatrixPS),sortArray[v]=[_vector3.z,v];for(sortArray.sort(numericalSort),v=0;vl>v;v++)vertex=vertices[sortArray[v][1]],offset=3*v,vertexArray[offset]=vertex.x,vertexArray[offset+1]=vertex.y,vertexArray[offset+2]=vertex.z;for(c=0;cl>c;c++)offset=3*c,color=colors[sortArray[c][1]],colorArray[offset]=color.r,colorArray[offset+1]=color.g,colorArray[offset+2]=color.b;if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)if(offset=0,cal=customAttribute.value.length,1===customAttribute.size)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],customAttribute.array[ca]=customAttribute.value[index];else if(2===customAttribute.size)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,offset+=2;else if(3===customAttribute.size)if("c"===customAttribute.type)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.r,customAttribute.array[offset+1]=value.g,customAttribute.array[offset+2]=value.b,offset+=3;else for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,offset+=3;else if(4===customAttribute.size)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,customAttribute.array[offset+3]=value.w,offset+=4}else{if(dirtyVertices)for(v=0;vl>v;v++)vertex=vertices[v],offset=3*v,vertexArray[offset]=vertex.x,vertexArray[offset+1]=vertex.y,vertexArray[offset+2]=vertex.z;if(dirtyColors)for(c=0;cl>c;c++)color=colors[c],offset=3*c,colorArray[offset]=color.r,colorArray[offset+1]=color.g,colorArray[offset+2]=color.b;if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],customAttribute.needsUpdate&&(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo))if(cal=customAttribute.value.length,offset=0,1===customAttribute.size)for(ca=0;cal>ca;ca++)customAttribute.array[ca]=customAttribute.value[ca];else if(2===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,offset+=2;else if(3===customAttribute.size)if("c"===customAttribute.type)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.r,customAttribute.array[offset+1]=value.g,customAttribute.array[offset+2]=value.b,offset+=3;else for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,offset+=3;else if(4===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,customAttribute.array[offset+3]=value.w,offset+=4}if((dirtyVertices||object.sortParticles)&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)),(dirtyColors||object.sortParticles)&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint)),customAttributes)for(i=0,il=customAttributes.length;il>i;i++)customAttribute=customAttributes[i],(customAttribute.needsUpdate||object.sortParticles)&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint))}function setLineBuffers(geometry,hint){var v,c,d,vertex,offset,color,i,il,ca,cal,value,customAttribute,vertices=geometry.vertices,colors=geometry.colors,lineDistances=geometry.lineDistances,vl=vertices.length,cl=colors.length,dl=lineDistances.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,lineDistanceArray=geometry.__lineDistanceArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,dirtyLineDistances=geometry.lineDistancesNeedUpdate,customAttributes=geometry.__webglCustomAttributesList;if(dirtyVertices){for(v=0;vl>v;v++)vertex=vertices[v],offset=3*v,vertexArray[offset]=vertex.x,vertexArray[offset+1]=vertex.y,vertexArray[offset+2]=vertex.z;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyColors){for(c=0;cl>c;c++)color=colors[c],offset=3*c,colorArray[offset]=color.r,colorArray[offset+1]=color.g,colorArray[offset+2]=color.b;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint)}if(dirtyLineDistances){for(d=0;dl>d;d++)lineDistanceArray[d]=lineDistances[d];_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglLineDistanceBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,lineDistanceArray,hint)}if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],customAttribute.needsUpdate&&(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)){if(offset=0,cal=customAttribute.value.length,1===customAttribute.size)for(ca=0;cal>ca;ca++)customAttribute.array[ca]=customAttribute.value[ca];else if(2===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,offset+=2;else if(3===customAttribute.size)if("c"===customAttribute.type)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.r,customAttribute.array[offset+1]=value.g,customAttribute.array[offset+2]=value.b,offset+=3;else for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,offset+=3;else if(4===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,customAttribute.array[offset+3]=value.w,offset+=4;_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint)}}function setMeshBuffers(geometryGroup,object,hint,dispose,material){if(geometryGroup.__inittedArrays){var f,fl,fi,face,vertexNormals,faceNormal,vertexColors,faceColor,vertexTangents,uv,uv2,v1,v2,v3,t1,t2,t3,n1,n2,n3,c1,c2,c3,sw1,sw2,sw3,si1,si2,si3,i,il,vn,uvi,uv2i,vk,vkl,vka,nka,chf,faceVertexNormals,value,customAttribute,normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material),uvType=bufferGuessUVType(material),needsSmoothNormals=normalType===THREE.SmoothShading,vertexIndex=0,offset=0,offset_uv=0,offset_uv2=0,offset_face=0,offset_normal=0,offset_tangent=0,offset_line=0,offset_color=0,offset_skin=0,offset_morphTarget=0,offset_custom=0,offset_customSrc=0,vertexArray=geometryGroup.__vertexArray,uvArray=geometryGroup.__uvArray,uv2Array=geometryGroup.__uv2Array,normalArray=geometryGroup.__normalArray,tangentArray=geometryGroup.__tangentArray,colorArray=geometryGroup.__colorArray,skinIndexArray=geometryGroup.__skinIndexArray,skinWeightArray=geometryGroup.__skinWeightArray,morphTargetsArrays=geometryGroup.__morphTargetsArrays,morphNormalsArrays=geometryGroup.__morphNormalsArrays,customAttributes=geometryGroup.__webglCustomAttributesList,faceArray=geometryGroup.__faceArray,lineArray=geometryGroup.__lineArray,geometry=object.geometry,dirtyVertices=geometry.verticesNeedUpdate,dirtyElements=geometry.elementsNeedUpdate,dirtyUvs=geometry.uvsNeedUpdate,dirtyNormals=geometry.normalsNeedUpdate,dirtyTangents=geometry.tangentsNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,dirtyMorphTargets=geometry.morphTargetsNeedUpdate,vertices=geometry.vertices,chunk_faces3=geometryGroup.faces3,obj_faces=geometry.faces,obj_uvs=geometry.faceVertexUvs[0],obj_uvs2=geometry.faceVertexUvs[1],obj_skinIndices=(geometry.colors,geometry.skinIndices),obj_skinWeights=geometry.skinWeights,morphTargets=geometry.morphTargets,morphNormals=geometry.morphNormals;if(dirtyVertices){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=vertices[face.a],v2=vertices[face.b],v3=vertices[face.c],vertexArray[offset]=v1.x,vertexArray[offset+1]=v1.y,vertexArray[offset+2]=v1.z,vertexArray[offset+3]=v2.x,vertexArray[offset+4]=v2.y,vertexArray[offset+5]=v2.z,vertexArray[offset+6]=v3.x,vertexArray[offset+7]=v3.y,vertexArray[offset+8]=v3.z,offset+=9;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyMorphTargets)for(vk=0,vkl=morphTargets.length;vkl>vk;vk++){for(offset_morphTarget=0,f=0,fl=chunk_faces3.length;fl>f;f++)chf=chunk_faces3[f],face=obj_faces[chf],v1=morphTargets[vk].vertices[face.a],v2=morphTargets[vk].vertices[face.b],v3=morphTargets[vk].vertices[face.c],vka=morphTargetsArrays[vk],vka[offset_morphTarget]=v1.x,vka[offset_morphTarget+1]=v1.y,vka[offset_morphTarget+2]=v1.z,vka[offset_morphTarget+3]=v2.x,vka[offset_morphTarget+4]=v2.y,vka[offset_morphTarget+5]=v2.z,vka[offset_morphTarget+6]=v3.x,vka[offset_morphTarget+7]=v3.y,vka[offset_morphTarget+8]=v3.z,material.morphNormals&&(needsSmoothNormals?(faceVertexNormals=morphNormals[vk].vertexNormals[chf],n1=faceVertexNormals.a,n2=faceVertexNormals.b,n3=faceVertexNormals.c):(n1=morphNormals[vk].faceNormals[chf],n2=n1,n3=n1),nka=morphNormalsArrays[vk],nka[offset_morphTarget]=n1.x,nka[offset_morphTarget+1]=n1.y,nka[offset_morphTarget+2]=n1.z,nka[offset_morphTarget+3]=n2.x,nka[offset_morphTarget+4]=n2.y,nka[offset_morphTarget+5]=n2.z,nka[offset_morphTarget+6]=n3.x,nka[offset_morphTarget+7]=n3.y,nka[offset_morphTarget+8]=n3.z),offset_morphTarget+=9;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[vk]),_gl.bufferData(_gl.ARRAY_BUFFER,morphTargetsArrays[vk],hint),material.morphNormals&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[vk]),_gl.bufferData(_gl.ARRAY_BUFFER,morphNormalsArrays[vk],hint))}if(obj_skinWeights.length){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],sw1=obj_skinWeights[face.a],sw2=obj_skinWeights[face.b],sw3=obj_skinWeights[face.c],skinWeightArray[offset_skin]=sw1.x,skinWeightArray[offset_skin+1]=sw1.y,skinWeightArray[offset_skin+2]=sw1.z,skinWeightArray[offset_skin+3]=sw1.w,skinWeightArray[offset_skin+4]=sw2.x,skinWeightArray[offset_skin+5]=sw2.y,skinWeightArray[offset_skin+6]=sw2.z,skinWeightArray[offset_skin+7]=sw2.w,skinWeightArray[offset_skin+8]=sw3.x,skinWeightArray[offset_skin+9]=sw3.y,skinWeightArray[offset_skin+10]=sw3.z,skinWeightArray[offset_skin+11]=sw3.w,si1=obj_skinIndices[face.a],si2=obj_skinIndices[face.b],si3=obj_skinIndices[face.c],skinIndexArray[offset_skin]=si1.x,skinIndexArray[offset_skin+1]=si1.y,skinIndexArray[offset_skin+2]=si1.z,skinIndexArray[offset_skin+3]=si1.w,skinIndexArray[offset_skin+4]=si2.x,skinIndexArray[offset_skin+5]=si2.y,skinIndexArray[offset_skin+6]=si2.z,skinIndexArray[offset_skin+7]=si2.w,skinIndexArray[offset_skin+8]=si3.x,skinIndexArray[offset_skin+9]=si3.y,skinIndexArray[offset_skin+10]=si3.z,skinIndexArray[offset_skin+11]=si3.w,offset_skin+=12;offset_skin>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinIndicesBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,skinIndexArray,hint),_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinWeightsBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,skinWeightArray,hint))}if(dirtyColors&&vertexColorType){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],vertexColors=face.vertexColors,faceColor=face.color,3===vertexColors.length&&vertexColorType===THREE.VertexColors?(c1=vertexColors[0],c2=vertexColors[1],c3=vertexColors[2]):(c1=faceColor,c2=faceColor,c3=faceColor),colorArray[offset_color]=c1.r,colorArray[offset_color+1]=c1.g,colorArray[offset_color+2]=c1.b,colorArray[offset_color+3]=c2.r,colorArray[offset_color+4]=c2.g,colorArray[offset_color+5]=c2.b,colorArray[offset_color+6]=c3.r,colorArray[offset_color+7]=c3.g,colorArray[offset_color+8]=c3.b,offset_color+=9;offset_color>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint))}if(dirtyTangents&&geometry.hasTangents){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],vertexTangents=face.vertexTangents,t1=vertexTangents[0],t2=vertexTangents[1],t3=vertexTangents[2],tangentArray[offset_tangent]=t1.x,tangentArray[offset_tangent+1]=t1.y,tangentArray[offset_tangent+2]=t1.z,tangentArray[offset_tangent+3]=t1.w,tangentArray[offset_tangent+4]=t2.x,tangentArray[offset_tangent+5]=t2.y,tangentArray[offset_tangent+6]=t2.z,tangentArray[offset_tangent+7]=t2.w,tangentArray[offset_tangent+8]=t3.x,tangentArray[offset_tangent+9]=t3.y,tangentArray[offset_tangent+10]=t3.z,tangentArray[offset_tangent+11]=t3.w,offset_tangent+=12;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglTangentBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,tangentArray,hint)}if(dirtyNormals&&normalType){for(f=0,fl=chunk_faces3.length;fl>f;f++)if(face=obj_faces[chunk_faces3[f]],vertexNormals=face.vertexNormals,faceNormal=face.normal,3===vertexNormals.length&&needsSmoothNormals)for(i=0;3>i;i++)vn=vertexNormals[i],normalArray[offset_normal]=vn.x,normalArray[offset_normal+1]=vn.y,normalArray[offset_normal+2]=vn.z,offset_normal+=3;else for(i=0;3>i;i++)normalArray[offset_normal]=faceNormal.x,normalArray[offset_normal+1]=faceNormal.y,normalArray[offset_normal+2]=faceNormal.z,offset_normal+=3;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,normalArray,hint)}if(dirtyUvs&&obj_uvs&&uvType){for(f=0,fl=chunk_faces3.length;fl>f;f++)if(fi=chunk_faces3[f],uv=obj_uvs[fi],void 0!==uv)for(i=0;3>i;i++)uvi=uv[i],uvArray[offset_uv]=uvi.x,uvArray[offset_uv+1]=uvi.y,offset_uv+=2;offset_uv>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUVBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,uvArray,hint))}if(dirtyUvs&&obj_uvs2&&uvType){for(f=0,fl=chunk_faces3.length;fl>f;f++)if(fi=chunk_faces3[f],uv2=obj_uvs2[fi],void 0!==uv2)for(i=0;3>i;i++)uv2i=uv2[i],uv2Array[offset_uv2]=uv2i.x,uv2Array[offset_uv2+1]=uv2i.y,offset_uv2+=2;offset_uv2>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUV2Buffer),_gl.bufferData(_gl.ARRAY_BUFFER,uv2Array,hint))}if(dirtyElements){for(f=0,fl=chunk_faces3.length;fl>f;f++)faceArray[offset_face]=vertexIndex,faceArray[offset_face+1]=vertexIndex+1,faceArray[offset_face+2]=vertexIndex+2,offset_face+=3,lineArray[offset_line]=vertexIndex,lineArray[offset_line+1]=vertexIndex+1,lineArray[offset_line+2]=vertexIndex,lineArray[offset_line+3]=vertexIndex+2,lineArray[offset_line+4]=vertexIndex+1,lineArray[offset_line+5]=vertexIndex+2,offset_line+=6,vertexIndex+=3;_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,faceArray,hint),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,lineArray,hint)}if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],customAttribute.__original.needsUpdate){if(offset_custom=0,offset_customSrc=0,1===customAttribute.size){if(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],customAttribute.array[offset_custom]=customAttribute.value[face.a],customAttribute.array[offset_custom+1]=customAttribute.value[face.b],customAttribute.array[offset_custom+2]=customAttribute.value[face.c],offset_custom+=3;else if("faces"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],customAttribute.array[offset_custom]=value,customAttribute.array[offset_custom+1]=value,customAttribute.array[offset_custom+2]=value,offset_custom+=3}else if(2===customAttribute.size){if(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v2.x,customAttribute.array[offset_custom+3]=v2.y,customAttribute.array[offset_custom+4]=v3.x,customAttribute.array[offset_custom+5]=v3.y,offset_custom+=6;else if("faces"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value,v2=value,v3=value,customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v2.x,customAttribute.array[offset_custom+3]=v2.y,customAttribute.array[offset_custom+4]=v3.x,customAttribute.array[offset_custom+5]=v3.y,offset_custom+=6}else if(3===customAttribute.size){var pp;if(pp="c"===customAttribute.type?["r","g","b"]:["x","y","z"],void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],offset_custom+=9;else if("faces"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value,v2=value,v3=value,customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],offset_custom+=9;else if("faceVertices"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value[0],v2=value[1],v3=value[2],customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],offset_custom+=9}else if(4===customAttribute.size)if(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,offset_custom+=12;else if("faces"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value,v2=value,v3=value,customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,offset_custom+=12;else if("faceVertices"===customAttribute.boundTo)for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value[0],v2=value[1],v3=value[2],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,offset_custom+=12;_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint)}dispose&&(delete geometryGroup.__inittedArrays,delete geometryGroup.__colorArray,delete geometryGroup.__normalArray,delete geometryGroup.__tangentArray,delete geometryGroup.__uvArray,delete geometryGroup.__uv2Array,delete geometryGroup.__faceArray,delete geometryGroup.__vertexArray,delete geometryGroup.__lineArray,delete geometryGroup.__skinIndexArray,delete geometryGroup.__skinWeightArray)}}function setDirectBuffers(geometry,hint,dispose){var attributeName,attributeItem,attributes=geometry.attributes;for(attributeName in attributes)attributeItem=attributes[attributeName],attributeItem.needsUpdate&&("index"===attributeName?(_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,attributeItem.buffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,attributeItem.array,hint)):(_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,attributeItem.array,hint)),attributeItem.needsUpdate=!1),dispose&&!attributeItem.dynamic&&(attributeItem.array=null)}function enableAttribute(attribute){_enabledAttributes[attribute]||(_gl.enableVertexAttribArray(attribute),_enabledAttributes[attribute]=!0)}function disableAttributes(){for(var attribute in _enabledAttributes)_enabledAttributes[attribute]&&(_gl.disableVertexAttribArray(attribute),_enabledAttributes[attribute]=!1)}function setupMorphTargets(material,geometryGroup,object){var attributes=material.program.attributes;if(-1!==object.morphTargetBase&&attributes.position>=0?(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[object.morphTargetBase]),enableAttribute(attributes.position),_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,!1,0,0)):attributes.position>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer),enableAttribute(attributes.position),_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,!1,0,0)),object.morphTargetForcedOrder.length)for(var m=0,order=object.morphTargetForcedOrder,influences=object.morphTargetInfluences;m<material.numSupportedMorphTargets&&m<order.length;)attributes["morphTarget"+m]>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[order[m]]),enableAttribute(attributes["morphTarget"+m]),_gl.vertexAttribPointer(attributes["morphTarget"+m],3,_gl.FLOAT,!1,0,0)),attributes["morphNormal"+m]>=0&&material.morphNormals&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[order[m]]),enableAttribute(attributes["morphNormal"+m]),_gl.vertexAttribPointer(attributes["morphNormal"+m],3,_gl.FLOAT,!1,0,0)),object.__webglMorphTargetInfluences[m]=influences[order[m]],m++;else{var influence,i,activeInfluenceIndices=[],influences=object.morphTargetInfluences,il=influences.length;for(i=0;il>i;i++)influence=influences[i],influence>0&&activeInfluenceIndices.push([influence,i]);activeInfluenceIndices.length>material.numSupportedMorphTargets?(activeInfluenceIndices.sort(numericalSort),activeInfluenceIndices.length=material.numSupportedMorphTargets):activeInfluenceIndices.length>material.numSupportedMorphNormals?activeInfluenceIndices.sort(numericalSort):0===activeInfluenceIndices.length&&activeInfluenceIndices.push([0,0]);for(var influenceIndex,m=0;m<material.numSupportedMorphTargets;)activeInfluenceIndices[m]?(influenceIndex=activeInfluenceIndices[m][1],attributes["morphTarget"+m]>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[influenceIndex]),enableAttribute(attributes["morphTarget"+m]),_gl.vertexAttribPointer(attributes["morphTarget"+m],3,_gl.FLOAT,!1,0,0)),attributes["morphNormal"+m]>=0&&material.morphNormals&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[influenceIndex]),enableAttribute(attributes["morphNormal"+m]),_gl.vertexAttribPointer(attributes["morphNormal"+m],3,_gl.FLOAT,!1,0,0)),object.__webglMorphTargetInfluences[m]=influences[influenceIndex]):object.__webglMorphTargetInfluences[m]=0,m++}null!==material.program.uniforms.morphTargetInfluences&&_gl.uniform1fv(material.program.uniforms.morphTargetInfluences,object.__webglMorphTargetInfluences)}function painterSortStable(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function numericalSort(a,b){return b[0]-a[0]}function renderPlugins(plugins,scene,camera){if(plugins.length)for(var i=0,il=plugins.length;il>i;i++)_currentProgram=null,_currentCamera=null,_oldBlending=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldDoubleSided=-1,_oldFlipSided=-1,_currentGeometryGroupHash=-1,_currentMaterialId=-1,_lightsNeedUpdate=!0,plugins[i].render(scene,camera,_currentWidth,_currentHeight),_currentProgram=null,_currentCamera=null,_oldBlending=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldDoubleSided=-1,_oldFlipSided=-1,_currentGeometryGroupHash=-1,_currentMaterialId=-1,_lightsNeedUpdate=!0}function renderObjects(renderList,reverse,materialType,camera,lights,fog,useBlending,overrideMaterial){var webglObject,object,buffer,material,start,end,delta;reverse?(start=renderList.length-1,end=-1,delta=-1):(start=0,end=renderList.length,delta=1);for(var i=start;i!==end;i+=delta)if(webglObject=renderList[i],webglObject.render){if(object=webglObject.object,buffer=webglObject.buffer,overrideMaterial)material=overrideMaterial;else{if(material=webglObject[materialType],!material)continue;useBlending&&_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst),_this.setDepthTest(material.depthTest),_this.setDepthWrite(material.depthWrite),setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)}_this.setMaterialFaces(material),buffer instanceof THREE.BufferGeometry?_this.renderBufferDirect(camera,lights,fog,material,buffer,object):_this.renderBuffer(camera,lights,fog,material,buffer,object)}}function renderObjectsImmediate(renderList,materialType,camera,lights,fog,useBlending,overrideMaterial){for(var webglObject,object,material,i=0,il=renderList.length;il>i;i++)if(webglObject=renderList[i],object=webglObject.object,object.visible){if(overrideMaterial)material=overrideMaterial;else{if(material=webglObject[materialType],!material)continue;useBlending&&_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst),_this.setDepthTest(material.depthTest),_this.setDepthWrite(material.depthWrite),setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)}_this.renderImmediateObject(camera,lights,fog,material,object)}}function unrollImmediateBufferMaterial(globject){var object=globject.object,material=object.material;material.transparent?(globject.transparent=material,globject.opaque=null):(globject.opaque=material,globject.transparent=null)}function unrollBufferMaterial(globject){var material,materialIndex,meshMaterial,object=globject.object,buffer=globject.buffer;meshMaterial=object.material,meshMaterial instanceof THREE.MeshFaceMaterial?(materialIndex=buffer.materialIndex,material=meshMaterial.materials[materialIndex],material.transparent?(globject.transparent=material,globject.opaque=null):(globject.opaque=material,globject.transparent=null)):(material=meshMaterial,material&&(material.transparent?(globject.transparent=material,globject.opaque=null):(globject.opaque=material,globject.transparent=null)))}function sortFacesByMaterial(geometry,material){var f,fl,face,materialIndex,vertices,groupHash,hash_map={},numMorphTargets=geometry.morphTargets.length,numMorphNormals=geometry.morphNormals.length,usesFaceMaterial=material instanceof THREE.MeshFaceMaterial;for(geometry.geometryGroups={},f=0,fl=geometry.faces.length;fl>f;f++)face=geometry.faces[f],materialIndex=usesFaceMaterial?face.materialIndex:0,void 0===hash_map[materialIndex]&&(hash_map[materialIndex]={hash:materialIndex,counter:0}),groupHash=hash_map[materialIndex].hash+"_"+hash_map[materialIndex].counter,void 0===geometry.geometryGroups[groupHash]&&(geometry.geometryGroups[groupHash]={faces3:[],materialIndex:materialIndex,vertices:0,numMorphTargets:numMorphTargets,numMorphNormals:numMorphNormals}),vertices=3,geometry.geometryGroups[groupHash].vertices+vertices>65535&&(hash_map[materialIndex].counter+=1,groupHash=hash_map[materialIndex].hash+"_"+hash_map[materialIndex].counter,void 0===geometry.geometryGroups[groupHash]&&(geometry.geometryGroups[groupHash]={faces3:[],materialIndex:materialIndex,vertices:0,numMorphTargets:numMorphTargets,numMorphNormals:numMorphNormals})),geometry.geometryGroups[groupHash].faces3.push(f),geometry.geometryGroups[groupHash].vertices+=vertices;
geometry.geometryGroupsList=[];for(var g in geometry.geometryGroups)geometry.geometryGroups[g].id=_geometryGroupCounter++,geometry.geometryGroupsList.push(geometry.geometryGroups[g])}function addObject(object,scene){var g,geometry,material,geometryGroup;if(void 0===object.__webglInit)if(object.__webglInit=!0,object._modelViewMatrix=new THREE.Matrix4,object._normalMatrix=new THREE.Matrix3,void 0!==object.geometry&&void 0===object.geometry.__webglInit&&(object.geometry.__webglInit=!0,object.geometry.addEventListener("dispose",onGeometryDispose)),geometry=object.geometry,void 0===geometry);else if(geometry instanceof THREE.BufferGeometry)initDirectBuffers(geometry);else if(object instanceof THREE.Mesh){material=object.material,void 0===geometry.geometryGroups&&sortFacesByMaterial(geometry,material);for(g in geometry.geometryGroups)geometryGroup=geometry.geometryGroups[g],geometryGroup.__webglVertexBuffer||(createMeshBuffers(geometryGroup),initMeshBuffers(geometryGroup,object),geometry.verticesNeedUpdate=!0,geometry.morphTargetsNeedUpdate=!0,geometry.elementsNeedUpdate=!0,geometry.uvsNeedUpdate=!0,geometry.normalsNeedUpdate=!0,geometry.tangentsNeedUpdate=!0,geometry.colorsNeedUpdate=!0)}else object instanceof THREE.Line?geometry.__webglVertexBuffer||(createLineBuffers(geometry),initLineBuffers(geometry,object),geometry.verticesNeedUpdate=!0,geometry.colorsNeedUpdate=!0,geometry.lineDistancesNeedUpdate=!0):object instanceof THREE.ParticleSystem&&(geometry.__webglVertexBuffer||(createParticleBuffers(geometry),initParticleBuffers(geometry,object),geometry.verticesNeedUpdate=!0,geometry.colorsNeedUpdate=!0));if(void 0===object.__webglActive){if(object instanceof THREE.Mesh){if(geometry=object.geometry,geometry instanceof THREE.BufferGeometry)addBuffer(scene.__webglObjects,geometry,object);else if(geometry instanceof THREE.Geometry)for(g in geometry.geometryGroups)geometryGroup=geometry.geometryGroups[g],addBuffer(scene.__webglObjects,geometryGroup,object)}else object instanceof THREE.Line||object instanceof THREE.ParticleSystem?(geometry=object.geometry,addBuffer(scene.__webglObjects,geometry,object)):object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback?addBufferImmediate(scene.__webglObjectsImmediate,object):object instanceof THREE.Sprite?scene.__webglSprites.push(object):object instanceof THREE.LensFlare&&scene.__webglFlares.push(object);object.__webglActive=!0}}function addBuffer(objlist,buffer,object){objlist.push({id:null,buffer:buffer,object:object,opaque:null,transparent:null,z:0})}function addBufferImmediate(objlist,object){objlist.push({id:null,object:object,opaque:null,transparent:null,z:0})}function updateObject(object){var geometryGroup,customAttributesDirty,material,geometry=object.geometry;if(geometry instanceof THREE.BufferGeometry)setDirectBuffers(geometry,_gl.DYNAMIC_DRAW,!geometry.dynamic);else if(object instanceof THREE.Mesh){for(var i=0,il=geometry.geometryGroupsList.length;il>i;i++)geometryGroup=geometry.geometryGroupsList[i],material=getBufferMaterial(object,geometryGroup),geometry.buffersNeedUpdate&&initMeshBuffers(geometryGroup,object),customAttributesDirty=material.attributes&&areCustomAttributesDirty(material),(geometry.verticesNeedUpdate||geometry.morphTargetsNeedUpdate||geometry.elementsNeedUpdate||geometry.uvsNeedUpdate||geometry.normalsNeedUpdate||geometry.colorsNeedUpdate||geometry.tangentsNeedUpdate||customAttributesDirty)&&setMeshBuffers(geometryGroup,object,_gl.DYNAMIC_DRAW,!geometry.dynamic,material);geometry.verticesNeedUpdate=!1,geometry.morphTargetsNeedUpdate=!1,geometry.elementsNeedUpdate=!1,geometry.uvsNeedUpdate=!1,geometry.normalsNeedUpdate=!1,geometry.colorsNeedUpdate=!1,geometry.tangentsNeedUpdate=!1,geometry.buffersNeedUpdate=!1,material.attributes&&clearCustomAttributes(material)}else object instanceof THREE.Line?(material=getBufferMaterial(object,geometry),customAttributesDirty=material.attributes&&areCustomAttributesDirty(material),(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||geometry.lineDistancesNeedUpdate||customAttributesDirty)&&setLineBuffers(geometry,_gl.DYNAMIC_DRAW),geometry.verticesNeedUpdate=!1,geometry.colorsNeedUpdate=!1,geometry.lineDistancesNeedUpdate=!1,material.attributes&&clearCustomAttributes(material)):object instanceof THREE.ParticleSystem&&(material=getBufferMaterial(object,geometry),customAttributesDirty=material.attributes&&areCustomAttributesDirty(material),(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||object.sortParticles||customAttributesDirty)&&setParticleBuffers(geometry,_gl.DYNAMIC_DRAW,object),geometry.verticesNeedUpdate=!1,geometry.colorsNeedUpdate=!1,material.attributes&&clearCustomAttributes(material))}function areCustomAttributesDirty(material){for(var a in material.attributes)if(material.attributes[a].needsUpdate)return!0;return!1}function clearCustomAttributes(material){for(var a in material.attributes)material.attributes[a].needsUpdate=!1}function removeObject(object,scene){object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem||object instanceof THREE.Line?removeInstances(scene.__webglObjects,object):object instanceof THREE.Sprite?removeInstancesDirect(scene.__webglSprites,object):object instanceof THREE.LensFlare?removeInstancesDirect(scene.__webglFlares,object):(object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback)&&removeInstances(scene.__webglObjectsImmediate,object),delete object.__webglActive}function removeInstances(objlist,object){for(var o=objlist.length-1;o>=0;o--)objlist[o].object===object&&objlist.splice(o,1)}function removeInstancesDirect(objlist,object){for(var o=objlist.length-1;o>=0;o--)objlist[o]===object&&objlist.splice(o,1)}function setMaterialShaders(material,shaders){material.uniforms=THREE.UniformsUtils.clone(shaders.uniforms),material.vertexShader=shaders.vertexShader,material.fragmentShader=shaders.fragmentShader}function setProgram(camera,lights,fog,material,object){_usedTextureUnits=0,material.needsUpdate&&(material.program&&deallocateMaterial(material),_this.initMaterial(material,lights,fog,object),material.needsUpdate=!1),material.morphTargets&&(object.__webglMorphTargetInfluences||(object.__webglMorphTargetInfluences=new Float32Array(_this.maxMorphTargets)));var refreshMaterial=!1,program=material.program,p_uniforms=program.uniforms,m_uniforms=material.uniforms;if(program!==_currentProgram&&(_gl.useProgram(program),_currentProgram=program,refreshMaterial=!0),material.id!==_currentMaterialId&&(_currentMaterialId=material.id,refreshMaterial=!0),(refreshMaterial||camera!==_currentCamera)&&(_gl.uniformMatrix4fv(p_uniforms.projectionMatrix,!1,camera.projectionMatrix.elements),camera!==_currentCamera&&(_currentCamera=camera)),material.skinning)if(_supportsBoneTextures&&object.useVertexTexture){if(null!==p_uniforms.boneTexture){var textureUnit=getTextureUnit();_gl.uniform1i(p_uniforms.boneTexture,textureUnit),_this.setTexture(object.boneTexture,textureUnit)}null!==p_uniforms.boneTextureWidth&&_gl.uniform1i(p_uniforms.boneTextureWidth,object.boneTextureWidth),null!==p_uniforms.boneTextureHeight&&_gl.uniform1i(p_uniforms.boneTextureHeight,object.boneTextureHeight)}else null!==p_uniforms.boneGlobalMatrices&&_gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices,!1,object.boneMatrices);return refreshMaterial&&(fog&&material.fog&&refreshUniformsFog(m_uniforms,fog),(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material.lights)&&(_lightsNeedUpdate&&(setupLights(program,lights),_lightsNeedUpdate=!1),refreshUniformsLights(m_uniforms,_lights)),(material instanceof THREE.MeshBasicMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial)&&refreshUniformsCommon(m_uniforms,material),material instanceof THREE.LineBasicMaterial?refreshUniformsLine(m_uniforms,material):material instanceof THREE.LineDashedMaterial?(refreshUniformsLine(m_uniforms,material),refreshUniformsDash(m_uniforms,material)):material instanceof THREE.ParticleSystemMaterial?refreshUniformsParticle(m_uniforms,material):material instanceof THREE.MeshPhongMaterial?refreshUniformsPhong(m_uniforms,material):material instanceof THREE.MeshLambertMaterial?refreshUniformsLambert(m_uniforms,material):material instanceof THREE.MeshDepthMaterial?(m_uniforms.mNear.value=camera.near,m_uniforms.mFar.value=camera.far,m_uniforms.opacity.value=material.opacity):material instanceof THREE.MeshNormalMaterial&&(m_uniforms.opacity.value=material.opacity),object.receiveShadow&&!material._shadowPass&&refreshUniformsShadow(m_uniforms,lights),loadUniformsGeneric(program,material.uniformsList),(material instanceof THREE.ShaderMaterial||material instanceof THREE.MeshPhongMaterial||material.envMap)&&null!==p_uniforms.cameraPosition&&(_vector3.getPositionFromMatrix(camera.matrixWorld),_gl.uniform3f(p_uniforms.cameraPosition,_vector3.x,_vector3.y,_vector3.z)),(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.ShaderMaterial||material.skinning)&&null!==p_uniforms.viewMatrix&&_gl.uniformMatrix4fv(p_uniforms.viewMatrix,!1,camera.matrixWorldInverse.elements)),loadUniformsMatrices(p_uniforms,object),null!==p_uniforms.modelMatrix&&_gl.uniformMatrix4fv(p_uniforms.modelMatrix,!1,object.matrixWorld.elements),program}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity,_this.gammaInput?uniforms.diffuse.value.copyGammaToLinear(material.color):uniforms.diffuse.value=material.color,uniforms.map.value=material.map,uniforms.lightMap.value=material.lightMap,uniforms.specularMap.value=material.specularMap,material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale),material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale));var uvScaleMap;if(material.map?uvScaleMap=material.map:material.specularMap?uvScaleMap=material.specularMap:material.normalMap?uvScaleMap=material.normalMap:material.bumpMap&&(uvScaleMap=material.bumpMap),void 0!==uvScaleMap){var offset=uvScaleMap.offset,repeat=uvScaleMap.repeat;uniforms.offsetRepeat.value.set(offset.x,offset.y,repeat.x,repeat.y)}uniforms.envMap.value=material.envMap,uniforms.flipEnvMap.value=material.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,uniforms.reflectivity.value=_this.gammaInput?material.reflectivity:material.reflectivity,uniforms.refractionRatio.value=material.refractionRatio,uniforms.combine.value=material.combine,uniforms.useRefract.value=material.envMap&&material.envMap.mapping instanceof THREE.CubeRefractionMapping}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value=material.color,uniforms.opacity.value=material.opacity}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize,uniforms.totalSize.value=material.dashSize+material.gapSize,uniforms.scale.value=material.scale}function refreshUniformsParticle(uniforms,material){uniforms.psColor.value=material.color,uniforms.opacity.value=material.opacity,uniforms.size.value=material.size,uniforms.scale.value=_canvas.height/2,uniforms.map.value=material.map}function refreshUniformsFog(uniforms,fog){uniforms.fogColor.value=fog.color,fog instanceof THREE.Fog?(uniforms.fogNear.value=fog.near,uniforms.fogFar.value=fog.far):fog instanceof THREE.FogExp2&&(uniforms.fogDensity.value=fog.density)}function refreshUniformsPhong(uniforms,material){uniforms.shininess.value=material.shininess,_this.gammaInput?(uniforms.ambient.value.copyGammaToLinear(material.ambient),uniforms.emissive.value.copyGammaToLinear(material.emissive),uniforms.specular.value.copyGammaToLinear(material.specular)):(uniforms.ambient.value=material.ambient,uniforms.emissive.value=material.emissive,uniforms.specular.value=material.specular),material.wrapAround&&uniforms.wrapRGB.value.copy(material.wrapRGB)}function refreshUniformsLambert(uniforms,material){_this.gammaInput?(uniforms.ambient.value.copyGammaToLinear(material.ambient),uniforms.emissive.value.copyGammaToLinear(material.emissive)):(uniforms.ambient.value=material.ambient,uniforms.emissive.value=material.emissive),material.wrapAround&&uniforms.wrapRGB.value.copy(material.wrapRGB)}function refreshUniformsLights(uniforms,lights){uniforms.ambientLightColor.value=lights.ambient,uniforms.directionalLightColor.value=lights.directional.colors,uniforms.directionalLightDirection.value=lights.directional.positions,uniforms.pointLightColor.value=lights.point.colors,uniforms.pointLightPosition.value=lights.point.positions,uniforms.pointLightDistance.value=lights.point.distances,uniforms.spotLightColor.value=lights.spot.colors,uniforms.spotLightPosition.value=lights.spot.positions,uniforms.spotLightDistance.value=lights.spot.distances,uniforms.spotLightDirection.value=lights.spot.directions,uniforms.spotLightAngleCos.value=lights.spot.anglesCos,uniforms.spotLightExponent.value=lights.spot.exponents,uniforms.hemisphereLightSkyColor.value=lights.hemi.skyColors,uniforms.hemisphereLightGroundColor.value=lights.hemi.groundColors,uniforms.hemisphereLightDirection.value=lights.hemi.positions}function refreshUniformsShadow(uniforms,lights){if(uniforms.shadowMatrix)for(var j=0,i=0,il=lights.length;il>i;i++){var light=lights[i];light.castShadow&&(light instanceof THREE.SpotLight||light instanceof THREE.DirectionalLight&&!light.shadowCascade)&&(uniforms.shadowMap.value[j]=light.shadowMap,uniforms.shadowMapSize.value[j]=light.shadowMapSize,uniforms.shadowMatrix.value[j]=light.shadowMatrix,uniforms.shadowDarkness.value[j]=light.shadowDarkness,uniforms.shadowBias.value[j]=light.shadowBias,j++)}}function loadUniformsMatrices(uniforms,object){_gl.uniformMatrix4fv(uniforms.modelViewMatrix,!1,object._modelViewMatrix.elements),uniforms.normalMatrix&&_gl.uniformMatrix3fv(uniforms.normalMatrix,!1,object._normalMatrix.elements)}function getTextureUnit(){var textureUnit=_usedTextureUnits;return textureUnit>=_maxTextures&&console.warn("WebGLRenderer: trying to use "+textureUnit+" texture units while this GPU supports only "+_maxTextures),_usedTextureUnits+=1,textureUnit}function loadUniformsGeneric(program,uniforms){var uniform,value,type,location,texture,textureUnit,i,il,j,jl,offset;for(j=0,jl=uniforms.length;jl>j;j++)if(location=program.uniforms[uniforms[j][1]])if(uniform=uniforms[j][0],type=uniform.type,value=uniform.value,"i"===type)_gl.uniform1i(location,value);else if("f"===type)_gl.uniform1f(location,value);else if("v2"===type)_gl.uniform2f(location,value.x,value.y);else if("v3"===type)_gl.uniform3f(location,value.x,value.y,value.z);else if("v4"===type)_gl.uniform4f(location,value.x,value.y,value.z,value.w);else if("c"===type)_gl.uniform3f(location,value.r,value.g,value.b);else if("iv1"===type)_gl.uniform1iv(location,value);else if("iv"===type)_gl.uniform3iv(location,value);else if("fv1"===type)_gl.uniform1fv(location,value);else if("fv"===type)_gl.uniform3fv(location,value);else if("v2v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(2*value.length)),i=0,il=value.length;il>i;i++)offset=2*i,uniform._array[offset]=value[i].x,uniform._array[offset+1]=value[i].y;_gl.uniform2fv(location,uniform._array)}else if("v3v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(3*value.length)),i=0,il=value.length;il>i;i++)offset=3*i,uniform._array[offset]=value[i].x,uniform._array[offset+1]=value[i].y,uniform._array[offset+2]=value[i].z;_gl.uniform3fv(location,uniform._array)}else if("v4v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(4*value.length)),i=0,il=value.length;il>i;i++)offset=4*i,uniform._array[offset]=value[i].x,uniform._array[offset+1]=value[i].y,uniform._array[offset+2]=value[i].z,uniform._array[offset+3]=value[i].w;_gl.uniform4fv(location,uniform._array)}else if("m4"===type)void 0===uniform._array&&(uniform._array=new Float32Array(16)),value.flattenToArray(uniform._array),_gl.uniformMatrix4fv(location,!1,uniform._array);else if("m4v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(16*value.length)),i=0,il=value.length;il>i;i++)value[i].flattenToArrayOffset(uniform._array,16*i);_gl.uniformMatrix4fv(location,!1,uniform._array)}else if("t"===type){if(texture=value,textureUnit=getTextureUnit(),_gl.uniform1i(location,textureUnit),!texture)continue;texture.image instanceof Array&&6===texture.image.length?setCubeTexture(texture,textureUnit):texture instanceof THREE.WebGLRenderTargetCube?setCubeTextureDynamic(texture,textureUnit):_this.setTexture(texture,textureUnit)}else if("tv"===type){for(void 0===uniform._array&&(uniform._array=[]),i=0,il=uniform.value.length;il>i;i++)uniform._array[i]=getTextureUnit();for(_gl.uniform1iv(location,uniform._array),i=0,il=uniform.value.length;il>i;i++)texture=uniform.value[i],textureUnit=uniform._array[i],texture&&_this.setTexture(texture,textureUnit)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+type)}function setupMatrices(object,camera){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld),object._normalMatrix.getNormalMatrix(object._modelViewMatrix)}function setColorGamma(array,offset,color,intensitySq){array[offset]=color.r*color.r*intensitySq,array[offset+1]=color.g*color.g*intensitySq,array[offset+2]=color.b*color.b*intensitySq}function setColorLinear(array,offset,color,intensity){array[offset]=color.r*intensity,array[offset+1]=color.g*intensity,array[offset+2]=color.b*intensity}function setupLights(program,lights){var l,ll,light,color,skyColor,groundColor,intensity,intensitySq,distance,r=0,g=0,b=0,zlights=_lights,dirColors=zlights.directional.colors,dirPositions=zlights.directional.positions,pointColors=zlights.point.colors,pointPositions=zlights.point.positions,pointDistances=zlights.point.distances,spotColors=zlights.spot.colors,spotPositions=zlights.spot.positions,spotDistances=zlights.spot.distances,spotDirections=zlights.spot.directions,spotAnglesCos=zlights.spot.anglesCos,spotExponents=zlights.spot.exponents,hemiSkyColors=zlights.hemi.skyColors,hemiGroundColors=zlights.hemi.groundColors,hemiPositions=zlights.hemi.positions,dirLength=0,pointLength=0,spotLength=0,hemiLength=0,dirCount=0,pointCount=0,spotCount=0,hemiCount=0,dirOffset=0,pointOffset=0,spotOffset=0,hemiOffset=0;for(l=0,ll=lights.length;ll>l;l++)if(light=lights[l],!light.onlyShadow)if(color=light.color,intensity=light.intensity,distance=light.distance,light instanceof THREE.AmbientLight){if(!light.visible)continue;_this.gammaInput?(r+=color.r*color.r,g+=color.g*color.g,b+=color.b*color.b):(r+=color.r,g+=color.g,b+=color.b)}else if(light instanceof THREE.DirectionalLight){if(dirCount+=1,!light.visible)continue;if(_direction.getPositionFromMatrix(light.matrixWorld),_vector3.getPositionFromMatrix(light.target.matrixWorld),_direction.sub(_vector3),_direction.normalize(),0===_direction.x&&0===_direction.y&&0===_direction.z)continue;dirOffset=3*dirLength,dirPositions[dirOffset]=_direction.x,dirPositions[dirOffset+1]=_direction.y,dirPositions[dirOffset+2]=_direction.z,_this.gammaInput?setColorGamma(dirColors,dirOffset,color,intensity*intensity):setColorLinear(dirColors,dirOffset,color,intensity),dirLength+=1}else if(light instanceof THREE.PointLight){if(pointCount+=1,!light.visible)continue;pointOffset=3*pointLength,_this.gammaInput?setColorGamma(pointColors,pointOffset,color,intensity*intensity):setColorLinear(pointColors,pointOffset,color,intensity),_vector3.getPositionFromMatrix(light.matrixWorld),pointPositions[pointOffset]=_vector3.x,pointPositions[pointOffset+1]=_vector3.y,pointPositions[pointOffset+2]=_vector3.z,pointDistances[pointLength]=distance,pointLength+=1}else if(light instanceof THREE.SpotLight){if(spotCount+=1,!light.visible)continue;spotOffset=3*spotLength,_this.gammaInput?setColorGamma(spotColors,spotOffset,color,intensity*intensity):setColorLinear(spotColors,spotOffset,color,intensity),_vector3.getPositionFromMatrix(light.matrixWorld),spotPositions[spotOffset]=_vector3.x,spotPositions[spotOffset+1]=_vector3.y,spotPositions[spotOffset+2]=_vector3.z,spotDistances[spotLength]=distance,_direction.copy(_vector3),_vector3.getPositionFromMatrix(light.target.matrixWorld),_direction.sub(_vector3),_direction.normalize(),spotDirections[spotOffset]=_direction.x,spotDirections[spotOffset+1]=_direction.y,spotDirections[spotOffset+2]=_direction.z,spotAnglesCos[spotLength]=Math.cos(light.angle),spotExponents[spotLength]=light.exponent,spotLength+=1}else if(light instanceof THREE.HemisphereLight){if(hemiCount+=1,!light.visible)continue;if(_direction.getPositionFromMatrix(light.matrixWorld),_direction.normalize(),0===_direction.x&&0===_direction.y&&0===_direction.z)continue;hemiOffset=3*hemiLength,hemiPositions[hemiOffset]=_direction.x,hemiPositions[hemiOffset+1]=_direction.y,hemiPositions[hemiOffset+2]=_direction.z,skyColor=light.color,groundColor=light.groundColor,_this.gammaInput?(intensitySq=intensity*intensity,setColorGamma(hemiSkyColors,hemiOffset,skyColor,intensitySq),setColorGamma(hemiGroundColors,hemiOffset,groundColor,intensitySq)):(setColorLinear(hemiSkyColors,hemiOffset,skyColor,intensity),setColorLinear(hemiGroundColors,hemiOffset,groundColor,intensity)),hemiLength+=1}for(l=3*dirLength,ll=Math.max(dirColors.length,3*dirCount);ll>l;l++)dirColors[l]=0;for(l=3*pointLength,ll=Math.max(pointColors.length,3*pointCount);ll>l;l++)pointColors[l]=0;for(l=3*spotLength,ll=Math.max(spotColors.length,3*spotCount);ll>l;l++)spotColors[l]=0;for(l=3*hemiLength,ll=Math.max(hemiSkyColors.length,3*hemiCount);ll>l;l++)hemiSkyColors[l]=0;for(l=3*hemiLength,ll=Math.max(hemiGroundColors.length,3*hemiCount);ll>l;l++)hemiGroundColors[l]=0;zlights.directional.length=dirLength,zlights.point.length=pointLength,zlights.spot.length=spotLength,zlights.hemi.length=hemiLength,zlights.ambient[0]=r,zlights.ambient[1]=g,zlights.ambient[2]=b}function setLineWidth(width){width!==_oldLineWidth&&(_gl.lineWidth(width),_oldLineWidth=width)}function setPolygonOffset(polygonoffset,factor,units){_oldPolygonOffset!==polygonoffset&&(polygonoffset?_gl.enable(_gl.POLYGON_OFFSET_FILL):_gl.disable(_gl.POLYGON_OFFSET_FILL),_oldPolygonOffset=polygonoffset),!polygonoffset||_oldPolygonOffsetFactor===factor&&_oldPolygonOffsetUnits===units||(_gl.polygonOffset(factor,units),_oldPolygonOffsetFactor=factor,_oldPolygonOffsetUnits=units)}function generateDefines(defines){var value,chunk,chunks=[];for(var d in defines)value=defines[d],value!==!1&&(chunk="#define "+d+" "+value,chunks.push(chunk));return chunks.join("\n")}function buildProgram(shaderID,fragmentShader,vertexShader,uniforms,attributes,defines,parameters,index0AttributeName){var p,pl,d,program,code,chunks=[];shaderID?chunks.push(shaderID):(chunks.push(fragmentShader),chunks.push(vertexShader));for(d in defines)chunks.push(d),chunks.push(defines[d]);for(p in parameters)chunks.push(p),chunks.push(parameters[p]);for(code=chunks.join(),p=0,pl=_programs.length;pl>p;p++){var programInfo=_programs[p];if(programInfo.code===code)return programInfo.usedTimes++,programInfo.program}var shadowMapTypeDefine="SHADOWMAP_TYPE_BASIC";parameters.shadowMapType===THREE.PCFShadowMap?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF":parameters.shadowMapType===THREE.PCFSoftShadowMap&&(shadowMapTypeDefine="SHADOWMAP_TYPE_PCF_SOFT");var customDefines=generateDefines(defines);program=_gl.createProgram();var prefix_vertex=["precision "+_precision+" float;","precision "+_precision+" int;",customDefines,_supportsVertexTextures?"#define VERTEX_TEXTURES":"",_this.gammaInput?"#define GAMMA_INPUT":"",_this.gammaOutput?"#define GAMMA_OUTPUT":"",_this.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+parameters.maxDirLights,"#define MAX_POINT_LIGHTS "+parameters.maxPointLights,"#define MAX_SPOT_LIGHTS "+parameters.maxSpotLights,"#define MAX_HEMI_LIGHTS "+parameters.maxHemiLights,"#define MAX_SHADOWS "+parameters.maxShadows,"#define MAX_BONES "+parameters.maxBones,parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.skinning?"#define USE_SKINNING":"",parameters.useVertexTexture?"#define BONE_TEXTURE":"",parameters.morphTargets?"#define USE_MORPHTARGETS":"",parameters.morphNormals?"#define USE_MORPHNORMALS":"",parameters.perPixel?"#define PHONG_PER_PIXEL":"",parameters.wrapAround?"#define WRAP_AROUND":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",parameters.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",parameters.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),prefix_fragment=["precision "+_precision+" float;","precision "+_precision+" int;",parameters.bumpMap||parameters.normalMap?"#extension GL_OES_standard_derivatives : enable":"",customDefines,"#define MAX_DIR_LIGHTS "+parameters.maxDirLights,"#define MAX_POINT_LIGHTS "+parameters.maxPointLights,"#define MAX_SPOT_LIGHTS "+parameters.maxSpotLights,"#define MAX_HEMI_LIGHTS "+parameters.maxHemiLights,"#define MAX_SHADOWS "+parameters.maxShadows,parameters.alphaTest?"#define ALPHATEST "+parameters.alphaTest:"",_this.gammaInput?"#define GAMMA_INPUT":"",_this.gammaOutput?"#define GAMMA_OUTPUT":"",_this.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.metal?"#define METAL":"",parameters.perPixel?"#define PHONG_PER_PIXEL":"",parameters.wrapAround?"#define WRAP_AROUND":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",parameters.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),glVertexShader=getShader("vertex",prefix_vertex+vertexShader),glFragmentShader=getShader("fragment",prefix_fragment+fragmentShader);_gl.attachShader(program,glVertexShader),_gl.attachShader(program,glFragmentShader),index0AttributeName&&_gl.bindAttribLocation(program,0,index0AttributeName),_gl.linkProgram(program),_gl.getProgramParameter(program,_gl.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+_gl.getProgramParameter(program,_gl.VALIDATE_STATUS)+", gl error ["+_gl.getError()+"]"),console.error("Program Info Log: "+_gl.getProgramInfoLog(program))),_gl.deleteShader(glFragmentShader),_gl.deleteShader(glVertexShader),program.uniforms={},program.attributes={};var identifiers,u,a,i;identifiers=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],parameters.useVertexTexture?(identifiers.push("boneTexture"),identifiers.push("boneTextureWidth"),identifiers.push("boneTextureHeight")):identifiers.push("boneGlobalMatrices");for(u in uniforms)identifiers.push(u);for(cacheUniformLocations(program,identifiers),identifiers=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],i=0;i<parameters.maxMorphTargets;i++)identifiers.push("morphTarget"+i);for(i=0;i<parameters.maxMorphNormals;i++)identifiers.push("morphNormal"+i);for(a in attributes)identifiers.push(a);return cacheAttributeLocations(program,identifiers),program.id=_programs_counter++,_programs.push({program:program,code:code,usedTimes:1}),_this.info.memory.programs=_programs.length,program}function cacheUniformLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;l>i;i++)id=identifiers[i],program.uniforms[id]=_gl.getUniformLocation(program,id)}function cacheAttributeLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;l>i;i++)id=identifiers[i],program.attributes[id]=_gl.getAttribLocation(program,id)}function addLineNumbers(string){for(var chunks=string.split("\n"),i=0,il=chunks.length;il>i;i++)chunks[i]=i+1+": "+chunks[i];return chunks.join("\n")}function getShader(type,string){var shader;return"fragment"===type?shader=_gl.createShader(_gl.FRAGMENT_SHADER):"vertex"===type&&(shader=_gl.createShader(_gl.VERTEX_SHADER)),_gl.shaderSource(shader,string),_gl.compileShader(shader),_gl.getShaderParameter(shader,_gl.COMPILE_STATUS)?shader:(console.error(_gl.getShaderInfoLog(shader)),console.error(addLineNumbers(string)),null)}function isPowerOfTwo(value){return 0===(value&value-1)}function setTextureParameters(textureType,texture,isImagePowerOfTwo){isImagePowerOfTwo?(_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,paramThreeToGL(texture.wrapS)),_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,paramThreeToGL(texture.wrapT)),_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,paramThreeToGL(texture.magFilter)),_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,paramThreeToGL(texture.minFilter))):(_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE),_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE),_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,filterFallback(texture.magFilter)),_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterFallback(texture.minFilter))),_glExtensionTextureFilterAnisotropic&&texture.type!==THREE.FloatType&&(texture.anisotropy>1||texture.__oldAnisotropy)&&(_gl.texParameterf(textureType,_glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,_maxAnisotropy)),texture.__oldAnisotropy=texture.anisotropy)}function clampToMaxSize(image,maxSize){if(image.width<=maxSize&&image.height<=maxSize)return image;var maxDimension=Math.max(image.width,image.height),newWidth=Math.floor(image.width*maxSize/maxDimension),newHeight=Math.floor(image.height*maxSize/maxDimension),canvas=document.createElement("canvas");canvas.width=newWidth,canvas.height=newHeight;var ctx=canvas.getContext("2d");return ctx.drawImage(image,0,0,image.width,image.height,0,0,newWidth,newHeight),canvas}function setCubeTexture(texture,slot){if(6===texture.image.length)if(texture.needsUpdate){texture.image.__webglTextureCube||(texture.addEventListener("dispose",onTextureDispose),texture.image.__webglTextureCube=_gl.createTexture(),_this.info.memory.textures++),_gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube),_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);for(var isCompressed=texture instanceof THREE.CompressedTexture,cubeImage=[],i=0;6>i;i++)cubeImage[i]=_this.autoScaleCubemaps&&!isCompressed?clampToMaxSize(texture.image[i],_maxCubemapSize):texture.image[i];
var image=cubeImage[0],isImagePowerOfTwo=isPowerOfTwo(image.width)&&isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture,isImagePowerOfTwo);for(var i=0;6>i;i++)if(isCompressed)for(var mipmap,mipmaps=cubeImage[i].mipmaps,j=0,jl=mipmaps.length;jl>j;j++)mipmap=mipmaps[j],texture.format!==THREE.RGBAFormat?_gl.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glFormat,mipmap.width,mipmap.height,0,mipmap.data):_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);else _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,glFormat,glType,cubeImage[i]);texture.generateMipmaps&&isImagePowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP),texture.needsUpdate=!1,texture.onUpdate&&texture.onUpdate()}else _gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube)}function setCubeTextureDynamic(texture,slot){_gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.__webglTexture)}function setupFrameBuffer(framebuffer,renderTarget,textureTarget){_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer),_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,textureTarget,renderTarget.__webglTexture,0)}function setupRenderBuffer(renderbuffer,renderTarget){_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderbuffer),renderTarget.depthBuffer&&!renderTarget.stencilBuffer?(_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_COMPONENT16,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)):renderTarget.depthBuffer&&renderTarget.stencilBuffer?(_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_STENCIL,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)):_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.RGBA4,renderTarget.width,renderTarget.height)}function updateRenderTargetMipmap(renderTarget){renderTarget instanceof THREE.WebGLRenderTargetCube?(_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture),_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null)):(_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture),_gl.generateMipmap(_gl.TEXTURE_2D),_gl.bindTexture(_gl.TEXTURE_2D,null))}function filterFallback(f){return f===THREE.NearestFilter||f===THREE.NearestMipMapNearestFilter||f===THREE.NearestMipMapLinearFilter?_gl.NEAREST:_gl.LINEAR}function paramThreeToGL(p){if(p===THREE.RepeatWrapping)return _gl.REPEAT;if(p===THREE.ClampToEdgeWrapping)return _gl.CLAMP_TO_EDGE;if(p===THREE.MirroredRepeatWrapping)return _gl.MIRRORED_REPEAT;if(p===THREE.NearestFilter)return _gl.NEAREST;if(p===THREE.NearestMipMapNearestFilter)return _gl.NEAREST_MIPMAP_NEAREST;if(p===THREE.NearestMipMapLinearFilter)return _gl.NEAREST_MIPMAP_LINEAR;if(p===THREE.LinearFilter)return _gl.LINEAR;if(p===THREE.LinearMipMapNearestFilter)return _gl.LINEAR_MIPMAP_NEAREST;if(p===THREE.LinearMipMapLinearFilter)return _gl.LINEAR_MIPMAP_LINEAR;if(p===THREE.UnsignedByteType)return _gl.UNSIGNED_BYTE;if(p===THREE.UnsignedShort4444Type)return _gl.UNSIGNED_SHORT_4_4_4_4;if(p===THREE.UnsignedShort5551Type)return _gl.UNSIGNED_SHORT_5_5_5_1;if(p===THREE.UnsignedShort565Type)return _gl.UNSIGNED_SHORT_5_6_5;if(p===THREE.ByteType)return _gl.BYTE;if(p===THREE.ShortType)return _gl.SHORT;if(p===THREE.UnsignedShortType)return _gl.UNSIGNED_SHORT;if(p===THREE.IntType)return _gl.INT;if(p===THREE.UnsignedIntType)return _gl.UNSIGNED_INT;if(p===THREE.FloatType)return _gl.FLOAT;if(p===THREE.AlphaFormat)return _gl.ALPHA;if(p===THREE.RGBFormat)return _gl.RGB;if(p===THREE.RGBAFormat)return _gl.RGBA;if(p===THREE.LuminanceFormat)return _gl.LUMINANCE;if(p===THREE.LuminanceAlphaFormat)return _gl.LUMINANCE_ALPHA;if(p===THREE.AddEquation)return _gl.FUNC_ADD;if(p===THREE.SubtractEquation)return _gl.FUNC_SUBTRACT;if(p===THREE.ReverseSubtractEquation)return _gl.FUNC_REVERSE_SUBTRACT;if(p===THREE.ZeroFactor)return _gl.ZERO;if(p===THREE.OneFactor)return _gl.ONE;if(p===THREE.SrcColorFactor)return _gl.SRC_COLOR;if(p===THREE.OneMinusSrcColorFactor)return _gl.ONE_MINUS_SRC_COLOR;if(p===THREE.SrcAlphaFactor)return _gl.SRC_ALPHA;if(p===THREE.OneMinusSrcAlphaFactor)return _gl.ONE_MINUS_SRC_ALPHA;if(p===THREE.DstAlphaFactor)return _gl.DST_ALPHA;if(p===THREE.OneMinusDstAlphaFactor)return _gl.ONE_MINUS_DST_ALPHA;if(p===THREE.DstColorFactor)return _gl.DST_COLOR;if(p===THREE.OneMinusDstColorFactor)return _gl.ONE_MINUS_DST_COLOR;if(p===THREE.SrcAlphaSaturateFactor)return _gl.SRC_ALPHA_SATURATE;if(void 0!==_glExtensionCompressedTextureS3TC){if(p===THREE.RGB_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT3_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===THREE.RGBA_S3TC_DXT5_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function allocateBones(object){if(_supportsBoneTextures&&object&&object.useVertexTexture)return 1024;var nVertexUniforms=_gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS),nVertexMatrices=Math.floor((nVertexUniforms-20)/4),maxBones=nVertexMatrices;return void 0!==object&&object instanceof THREE.SkinnedMesh&&(maxBones=Math.min(object.bones.length,maxBones),maxBones<object.bones.length&&console.warn("WebGLRenderer: too many bones - "+object.bones.length+", this GPU supports just "+maxBones+" (try OpenGL instead of ANGLE)")),maxBones}function allocateLights(lights){for(var dirLights=0,pointLights=0,spotLights=0,hemiLights=0,l=0,ll=lights.length;ll>l;l++){var light=lights[l];light.onlyShadow||(light instanceof THREE.DirectionalLight&&dirLights++,light instanceof THREE.PointLight&&pointLights++,light instanceof THREE.SpotLight&&spotLights++,light instanceof THREE.HemisphereLight&&hemiLights++)}return{directional:dirLights,point:pointLights,spot:spotLights,hemi:hemiLights}}function allocateShadows(lights){for(var maxShadows=0,l=0,ll=lights.length;ll>l;l++){var light=lights[l];light.castShadow&&(light instanceof THREE.SpotLight&&maxShadows++,light instanceof THREE.DirectionalLight&&!light.shadowCascade&&maxShadows++)}return maxShadows}function initGL(){try{var attributes={alpha:_alpha,premultipliedAlpha:_premultipliedAlpha,antialias:_antialias,stencil:_stencil,preserveDrawingBuffer:_preserveDrawingBuffer};if(_gl=_canvas.getContext("webgl",attributes)||_canvas.getContext("experimental-webgl",attributes),null===_gl)throw"Error creating WebGL context."}catch(error){console.error(error)}_glExtensionTextureFloat=_gl.getExtension("OES_texture_float"),_glExtensionTextureFloatLinear=_gl.getExtension("OES_texture_float_linear"),_glExtensionStandardDerivatives=_gl.getExtension("OES_standard_derivatives"),_glExtensionTextureFilterAnisotropic=_gl.getExtension("EXT_texture_filter_anisotropic")||_gl.getExtension("MOZ_EXT_texture_filter_anisotropic")||_gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),_glExtensionCompressedTextureS3TC=_gl.getExtension("WEBGL_compressed_texture_s3tc")||_gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||_gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),_glExtensionTextureFloat||console.log("THREE.WebGLRenderer: Float textures not supported."),_glExtensionStandardDerivatives||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),_glExtensionTextureFilterAnisotropic||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),_glExtensionCompressedTextureS3TC||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===_gl.getShaderPrecisionFormat&&(_gl.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}function setDefaultGLState(){_gl.clearColor(0,0,0,1),_gl.clearDepth(1),_gl.clearStencil(0),_gl.enable(_gl.DEPTH_TEST),_gl.depthFunc(_gl.LEQUAL),_gl.frontFace(_gl.CCW),_gl.cullFace(_gl.BACK),_gl.enable(_gl.CULL_FACE),_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA),_gl.viewport(_viewportX,_viewportY,_viewportWidth,_viewportHeight),_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)}console.log("THREE.WebGLRenderer",THREE.REVISION),parameters=parameters||{};var _canvas=void 0!==parameters.canvas?parameters.canvas:document.createElement("canvas"),_precision=void 0!==parameters.precision?parameters.precision:"highp",_alpha=void 0!==parameters.alpha?parameters.alpha:!0,_premultipliedAlpha=void 0!==parameters.premultipliedAlpha?parameters.premultipliedAlpha:!0,_antialias=void 0!==parameters.antialias?parameters.antialias:!1,_stencil=void 0!==parameters.stencil?parameters.stencil:!0,_preserveDrawingBuffer=void 0!==parameters.preserveDrawingBuffer?parameters.preserveDrawingBuffer:!1,_clearColor=new THREE.Color(0),_clearAlpha=0;this.domElement=_canvas,this.context=null,this.devicePixelRatio=void 0!==parameters.devicePixelRatio?parameters.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var _gl,_glExtensionTextureFloat,_glExtensionTextureFloatLinear,_glExtensionStandardDerivatives,_glExtensionTextureFilterAnisotropic,_glExtensionCompressedTextureS3TC,_this=this,_programs=[],_programs_counter=0,_currentProgram=null,_currentFramebuffer=null,_currentMaterialId=-1,_currentGeometryGroupHash=null,_currentCamera=null,_geometryGroupCounter=0,_usedTextureUnits=0,_oldDoubleSided=-1,_oldFlipSided=-1,_oldBlending=-1,_oldBlendEquation=-1,_oldBlendSrc=-1,_oldBlendDst=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldPolygonOffset=null,_oldPolygonOffsetFactor=null,_oldPolygonOffsetUnits=null,_oldLineWidth=null,_viewportX=0,_viewportY=0,_viewportWidth=_canvas.width,_viewportHeight=_canvas.height,_currentWidth=0,_currentHeight=0,_enabledAttributes={},_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4,_projScreenMatrixPS=new THREE.Matrix4,_vector3=new THREE.Vector3,_direction=new THREE.Vector3,_lightsNeedUpdate=!0,_lights={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};initGL(),setDefaultGLState(),this.context=_gl;var _maxTextures=_gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS),_maxVertexTextures=_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_maxCubemapSize=(_gl.getParameter(_gl.MAX_TEXTURE_SIZE),_gl.getParameter(_gl.MAX_CUBE_MAP_TEXTURE_SIZE)),_maxAnisotropy=_glExtensionTextureFilterAnisotropic?_gl.getParameter(_glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,_supportsVertexTextures=_maxVertexTextures>0,_supportsBoneTextures=_supportsVertexTextures&&_glExtensionTextureFloat,_vertexShaderPrecisionHighpFloat=(_glExtensionCompressedTextureS3TC?_gl.getParameter(_gl.COMPRESSED_TEXTURE_FORMATS):[],_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.HIGH_FLOAT)),_vertexShaderPrecisionMediumpFloat=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.MEDIUM_FLOAT),_fragmentShaderPrecisionHighpFloat=(_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.LOW_FLOAT),_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.HIGH_FLOAT)),_fragmentShaderPrecisionMediumpFloat=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.MEDIUM_FLOAT),highpAvailable=(_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.LOW_FLOAT),_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.HIGH_INT),_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.MEDIUM_INT),_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.LOW_INT),_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.HIGH_INT),_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.MEDIUM_INT),_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.LOW_INT),_vertexShaderPrecisionHighpFloat.precision>0&&_fragmentShaderPrecisionHighpFloat.precision>0),mediumpAvailable=_vertexShaderPrecisionMediumpFloat.precision>0&&_fragmentShaderPrecisionMediumpFloat.precision>0;"highp"!==_precision||highpAvailable||(mediumpAvailable?(_precision="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(_precision="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==_precision||mediumpAvailable||(_precision="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return _gl},this.supportsVertexTextures=function(){return _supportsVertexTextures},this.supportsFloatTextures=function(){return _glExtensionTextureFloat},this.supportsStandardDerivatives=function(){return _glExtensionStandardDerivatives},this.supportsCompressedTextureS3TC=function(){return _glExtensionCompressedTextureS3TC},this.getMaxAnisotropy=function(){return _maxAnisotropy},this.getPrecision=function(){return _precision},this.setSize=function(width,height,updateStyle){_canvas.width=width*this.devicePixelRatio,_canvas.height=height*this.devicePixelRatio,1!==this.devicePixelRatio&&updateStyle!==!1&&(_canvas.style.width=width+"px",_canvas.style.height=height+"px"),this.setViewport(0,0,_canvas.width,_canvas.height)},this.setViewport=function(x,y,width,height){_viewportX=void 0!==x?x:0,_viewportY=void 0!==y?y:0,_viewportWidth=void 0!==width?width:_canvas.width,_viewportHeight=void 0!==height?height:_canvas.height,_gl.viewport(_viewportX,_viewportY,_viewportWidth,_viewportHeight)},this.setScissor=function(x,y,width,height){_gl.scissor(x,y,width,height)},this.enableScissorTest=function(enable){enable?_gl.enable(_gl.SCISSOR_TEST):_gl.disable(_gl.SCISSOR_TEST)},this.setClearColor=function(color,alpha){_clearColor.set(color),_clearAlpha=void 0!==alpha?alpha:1,_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)},this.setClearColorHex=function(hex,alpha){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(hex,alpha)},this.getClearColor=function(){return _clearColor},this.getClearAlpha=function(){return _clearAlpha},this.clear=function(color,depth,stencil){var bits=0;(void 0===color||color)&&(bits|=_gl.COLOR_BUFFER_BIT),(void 0===depth||depth)&&(bits|=_gl.DEPTH_BUFFER_BIT),(void 0===stencil||stencil)&&(bits|=_gl.STENCIL_BUFFER_BIT),_gl.clear(bits)},this.clearTarget=function(renderTarget,color,depth,stencil){this.setRenderTarget(renderTarget),this.clear(color,depth,stencil)},this.addPostPlugin=function(plugin){plugin.init(this),this.renderPluginsPost.push(plugin)},this.addPrePlugin=function(plugin){plugin.init(this),this.renderPluginsPre.push(plugin)},this.updateShadowMap=function(scene,camera){_currentProgram=null,_oldBlending=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_currentGeometryGroupHash=-1,_currentMaterialId=-1,_lightsNeedUpdate=!0,_oldDoubleSided=-1,_oldFlipSided=-1,this.shadowMapPlugin.update(scene,camera)};var onGeometryDispose=function(event){var geometry=event.target;geometry.removeEventListener("dispose",onGeometryDispose),deallocateGeometry(geometry)},onTextureDispose=function(event){var texture=event.target;texture.removeEventListener("dispose",onTextureDispose),deallocateTexture(texture),_this.info.memory.textures--},onRenderTargetDispose=function(event){var renderTarget=event.target;renderTarget.removeEventListener("dispose",onRenderTargetDispose),deallocateRenderTarget(renderTarget),_this.info.memory.textures--},onMaterialDispose=function(event){var material=event.target;material.removeEventListener("dispose",onMaterialDispose),deallocateMaterial(material)},deleteBuffers=function(geometry){if(void 0!==geometry.__webglVertexBuffer&&_gl.deleteBuffer(geometry.__webglVertexBuffer),void 0!==geometry.__webglNormalBuffer&&_gl.deleteBuffer(geometry.__webglNormalBuffer),void 0!==geometry.__webglTangentBuffer&&_gl.deleteBuffer(geometry.__webglTangentBuffer),void 0!==geometry.__webglColorBuffer&&_gl.deleteBuffer(geometry.__webglColorBuffer),void 0!==geometry.__webglUVBuffer&&_gl.deleteBuffer(geometry.__webglUVBuffer),void 0!==geometry.__webglUV2Buffer&&_gl.deleteBuffer(geometry.__webglUV2Buffer),void 0!==geometry.__webglSkinIndicesBuffer&&_gl.deleteBuffer(geometry.__webglSkinIndicesBuffer),void 0!==geometry.__webglSkinWeightsBuffer&&_gl.deleteBuffer(geometry.__webglSkinWeightsBuffer),void 0!==geometry.__webglFaceBuffer&&_gl.deleteBuffer(geometry.__webglFaceBuffer),void 0!==geometry.__webglLineBuffer&&_gl.deleteBuffer(geometry.__webglLineBuffer),void 0!==geometry.__webglLineDistanceBuffer&&_gl.deleteBuffer(geometry.__webglLineDistanceBuffer),void 0!==geometry.__webglCustomAttributesList)for(var id in geometry.__webglCustomAttributesList)_gl.deleteBuffer(geometry.__webglCustomAttributesList[id].buffer);_this.info.memory.geometries--},deallocateGeometry=function(geometry){if(geometry.__webglInit=void 0,geometry instanceof THREE.BufferGeometry){var attributes=geometry.attributes;for(var key in attributes)void 0!==attributes[key].buffer&&_gl.deleteBuffer(attributes[key].buffer);_this.info.memory.geometries--}else if(void 0!==geometry.geometryGroups)for(var g in geometry.geometryGroups){var geometryGroup=geometry.geometryGroups[g];if(void 0!==geometryGroup.numMorphTargets)for(var m=0,ml=geometryGroup.numMorphTargets;ml>m;m++)_gl.deleteBuffer(geometryGroup.__webglMorphTargetsBuffers[m]);if(void 0!==geometryGroup.numMorphNormals)for(var m=0,ml=geometryGroup.numMorphNormals;ml>m;m++)_gl.deleteBuffer(geometryGroup.__webglMorphNormalsBuffers[m]);deleteBuffers(geometryGroup)}else deleteBuffers(geometry)},deallocateTexture=function(texture){if(texture.image&&texture.image.__webglTextureCube)_gl.deleteTexture(texture.image.__webglTextureCube);else{if(!texture.__webglInit)return;texture.__webglInit=!1,_gl.deleteTexture(texture.__webglTexture)}},deallocateRenderTarget=function(renderTarget){if(renderTarget&&renderTarget.__webglTexture)if(_gl.deleteTexture(renderTarget.__webglTexture),renderTarget instanceof THREE.WebGLRenderTargetCube)for(var i=0;6>i;i++)_gl.deleteFramebuffer(renderTarget.__webglFramebuffer[i]),_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer[i]);else _gl.deleteFramebuffer(renderTarget.__webglFramebuffer),_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer)},deallocateMaterial=function(material){var program=material.program;if(void 0!==program){material.program=void 0;var i,il,programInfo,deleteProgram=!1;for(i=0,il=_programs.length;il>i;i++)if(programInfo=_programs[i],programInfo.program===program){programInfo.usedTimes--,0===programInfo.usedTimes&&(deleteProgram=!0);break}if(deleteProgram===!0){var newPrograms=[];for(i=0,il=_programs.length;il>i;i++)programInfo=_programs[i],programInfo.program!==program&&newPrograms.push(programInfo);_programs=newPrograms,_gl.deleteProgram(program),_this.info.memory.programs--}}};this.renderBufferImmediate=function(object,program,material){if(object.hasPositions&&!object.__webglVertexBuffer&&(object.__webglVertexBuffer=_gl.createBuffer()),object.hasNormals&&!object.__webglNormalBuffer&&(object.__webglNormalBuffer=_gl.createBuffer()),object.hasUvs&&!object.__webglUvBuffer&&(object.__webglUvBuffer=_gl.createBuffer()),object.hasColors&&!object.__webglColorBuffer&&(object.__webglColorBuffer=_gl.createBuffer()),object.hasPositions&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,object.positionArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.position),_gl.vertexAttribPointer(program.attributes.position,3,_gl.FLOAT,!1,0,0)),object.hasNormals){if(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglNormalBuffer),material.shading===THREE.FlatShading){var nx,ny,nz,nax,nbx,ncx,nay,nby,ncy,naz,nbz,ncz,normalArray,i,il=3*object.count;for(i=0;il>i;i+=9)normalArray=object.normalArray,nax=normalArray[i],nay=normalArray[i+1],naz=normalArray[i+2],nbx=normalArray[i+3],nby=normalArray[i+4],nbz=normalArray[i+5],ncx=normalArray[i+6],ncy=normalArray[i+7],ncz=normalArray[i+8],nx=(nax+nbx+ncx)/3,ny=(nay+nby+ncy)/3,nz=(naz+nbz+ncz)/3,normalArray[i]=nx,normalArray[i+1]=ny,normalArray[i+2]=nz,normalArray[i+3]=nx,normalArray[i+4]=ny,normalArray[i+5]=nz,normalArray[i+6]=nx,normalArray[i+7]=ny,normalArray[i+8]=nz}_gl.bufferData(_gl.ARRAY_BUFFER,object.normalArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.normal),_gl.vertexAttribPointer(program.attributes.normal,3,_gl.FLOAT,!1,0,0)}object.hasUvs&&material.map&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglUvBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,object.uvArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.uv),_gl.vertexAttribPointer(program.attributes.uv,2,_gl.FLOAT,!1,0,0)),object.hasColors&&material.vertexColors!==THREE.NoColors&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,object.colorArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.color),_gl.vertexAttribPointer(program.attributes.color,3,_gl.FLOAT,!1,0,0)),_gl.drawArrays(_gl.TRIANGLES,0,object.count),object.count=0},this.renderBufferDirect=function(camera,lights,fog,material,geometry,object){if(material.visible!==!1){var attributeItem,attributeName,attributePointer,attributeSize,program=setProgram(camera,lights,fog,material,object),programAttributes=program.attributes,geometryAttributes=geometry.attributes,updateBuffers=!1,wireframeBit=material.wireframe?1:0,geometryHash=16777215*geometry.id+2*program.id+wireframeBit;if(geometryHash!==_currentGeometryGroupHash&&(_currentGeometryGroupHash=geometryHash,updateBuffers=!0),updateBuffers&&disableAttributes(),object instanceof THREE.Mesh){var index=geometryAttributes.index;if(index){var offsets=geometry.offsets;offsets.length>1&&(updateBuffers=!0);for(var i=0,il=offsets.length;il>i;i++){var startIndex=offsets[i].index;if(updateBuffers){for(attributeName in programAttributes)attributePointer=programAttributes[attributeName],attributeItem=geometryAttributes[attributeName],attributePointer>=0&&(attributeItem?(attributeSize=attributeItem.itemSize,_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer),enableAttribute(attributePointer),_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,!1,0,startIndex*attributeSize*4)):material.defaultAttributeValues&&(2===material.defaultAttributeValues[attributeName].length?_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]):3===material.defaultAttributeValues[attributeName].length&&_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName])));_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,index.buffer)}_gl.drawElements(_gl.TRIANGLES,offsets[i].count,_gl.UNSIGNED_SHORT,2*offsets[i].start),_this.info.render.calls++,_this.info.render.vertices+=offsets[i].count,_this.info.render.faces+=offsets[i].count/3}}else{if(updateBuffers)for(attributeName in programAttributes)"index"!==attributeName&&(attributePointer=programAttributes[attributeName],attributeItem=geometryAttributes[attributeName],attributePointer>=0&&(attributeItem?(attributeSize=attributeItem.itemSize,_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer),enableAttribute(attributePointer),_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,!1,0,0)):material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]&&(2===material.defaultAttributeValues[attributeName].length?_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]):3===material.defaultAttributeValues[attributeName].length&&_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName]))));var position=geometry.attributes.position;_gl.drawArrays(_gl.TRIANGLES,0,position.numItems/3),_this.info.render.calls++,_this.info.render.vertices+=position.numItems/3,_this.info.render.faces+=position.numItems/3/3}}else if(object instanceof THREE.ParticleSystem){if(updateBuffers){for(attributeName in programAttributes)attributePointer=programAttributes[attributeName],attributeItem=geometryAttributes[attributeName],attributePointer>=0&&(attributeItem?(attributeSize=attributeItem.itemSize,_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer),enableAttribute(attributePointer),_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,!1,0,0)):material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]&&(2===material.defaultAttributeValues[attributeName].length?_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]):3===material.defaultAttributeValues[attributeName].length&&_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName])));var position=geometryAttributes.position;_gl.drawArrays(_gl.POINTS,0,position.numItems/3),_this.info.render.calls++,_this.info.render.points+=position.numItems/3}}else if(object instanceof THREE.Line&&updateBuffers){for(attributeName in programAttributes)attributePointer=programAttributes[attributeName],attributeItem=geometryAttributes[attributeName],attributePointer>=0&&(attributeItem?(attributeSize=attributeItem.itemSize,_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer),enableAttribute(attributePointer),_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,!1,0,0)):material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]&&(2===material.defaultAttributeValues[attributeName].length?_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]):3===material.defaultAttributeValues[attributeName].length&&_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName])));var primitives=object.type===THREE.LineStrip?_gl.LINE_STRIP:_gl.LINES;setLineWidth(material.linewidth);var position=geometryAttributes.position;_gl.drawArrays(primitives,0,position.numItems/3),_this.info.render.calls++,_this.info.render.points+=position.numItems}}},this.renderBuffer=function(camera,lights,fog,material,geometryGroup,object){if(material.visible!==!1){var attribute,i,il,program=setProgram(camera,lights,fog,material,object),attributes=program.attributes,updateBuffers=!1,wireframeBit=material.wireframe?1:0,geometryGroupHash=16777215*geometryGroup.id+2*program.id+wireframeBit;if(geometryGroupHash!==_currentGeometryGroupHash&&(_currentGeometryGroupHash=geometryGroupHash,updateBuffers=!0),updateBuffers&&disableAttributes(),!material.morphTargets&&attributes.position>=0?updateBuffers&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer),enableAttribute(attributes.position),_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,!1,0,0)):object.morphTargetBase&&setupMorphTargets(material,geometryGroup,object),updateBuffers){if(geometryGroup.__webglCustomAttributesList)for(i=0,il=geometryGroup.__webglCustomAttributesList.length;il>i;i++)attribute=geometryGroup.__webglCustomAttributesList[i],attributes[attribute.buffer.belongsToAttribute]>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,attribute.buffer),enableAttribute(attributes[attribute.buffer.belongsToAttribute]),_gl.vertexAttribPointer(attributes[attribute.buffer.belongsToAttribute],attribute.size,_gl.FLOAT,!1,0,0));attributes.color>=0&&(object.geometry.colors.length>0||object.geometry.faces.length>0?(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer),enableAttribute(attributes.color),_gl.vertexAttribPointer(attributes.color,3,_gl.FLOAT,!1,0,0)):material.defaultAttributeValues&&_gl.vertexAttrib3fv(attributes.color,material.defaultAttributeValues.color)),attributes.normal>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer),enableAttribute(attributes.normal),_gl.vertexAttribPointer(attributes.normal,3,_gl.FLOAT,!1,0,0)),attributes.tangent>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglTangentBuffer),enableAttribute(attributes.tangent),_gl.vertexAttribPointer(attributes.tangent,4,_gl.FLOAT,!1,0,0)),attributes.uv>=0&&(object.geometry.faceVertexUvs[0]?(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUVBuffer),enableAttribute(attributes.uv),_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,!1,0,0)):material.defaultAttributeValues&&_gl.vertexAttrib2fv(attributes.uv,material.defaultAttributeValues.uv)),attributes.uv2>=0&&(object.geometry.faceVertexUvs[1]?(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUV2Buffer),enableAttribute(attributes.uv2),_gl.vertexAttribPointer(attributes.uv2,2,_gl.FLOAT,!1,0,0)):material.defaultAttributeValues&&_gl.vertexAttrib2fv(attributes.uv2,material.defaultAttributeValues.uv2)),material.skinning&&attributes.skinIndex>=0&&attributes.skinWeight>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinIndicesBuffer),enableAttribute(attributes.skinIndex),_gl.vertexAttribPointer(attributes.skinIndex,4,_gl.FLOAT,!1,0,0),_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinWeightsBuffer),enableAttribute(attributes.skinWeight),_gl.vertexAttribPointer(attributes.skinWeight,4,_gl.FLOAT,!1,0,0)),attributes.lineDistance>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglLineDistanceBuffer),enableAttribute(attributes.lineDistance),_gl.vertexAttribPointer(attributes.lineDistance,1,_gl.FLOAT,!1,0,0))}if(object instanceof THREE.Mesh)material.wireframe?(setLineWidth(material.wireframeLinewidth),updateBuffers&&_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer),_gl.drawElements(_gl.LINES,geometryGroup.__webglLineCount,_gl.UNSIGNED_SHORT,0)):(updateBuffers&&_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer),_gl.drawElements(_gl.TRIANGLES,geometryGroup.__webglFaceCount,_gl.UNSIGNED_SHORT,0)),_this.info.render.calls++,_this.info.render.vertices+=geometryGroup.__webglFaceCount,_this.info.render.faces+=geometryGroup.__webglFaceCount/3;else if(object instanceof THREE.Line){var primitives=object.type===THREE.LineStrip?_gl.LINE_STRIP:_gl.LINES;setLineWidth(material.linewidth),_gl.drawArrays(primitives,0,geometryGroup.__webglLineCount),_this.info.render.calls++}else object instanceof THREE.ParticleSystem&&(_gl.drawArrays(_gl.POINTS,0,geometryGroup.__webglParticleCount),_this.info.render.calls++,_this.info.render.points+=geometryGroup.__webglParticleCount)}},this.render=function(scene,camera,renderTarget,forceClear){if(camera instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var i,il,webglObject,object,renderList,lights=scene.__lights,fog=scene.fog;for(_currentMaterialId=-1,_lightsNeedUpdate=!0,scene.autoUpdate===!0&&scene.updateMatrixWorld(),void 0===camera.parent&&camera.updateMatrixWorld(),camera.matrixWorldInverse.getInverse(camera.matrixWorld),_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),this.autoUpdateObjects&&this.initWebGLObjects(scene),renderPlugins(this.renderPluginsPre,scene,camera),_this.info.render.calls=0,_this.info.render.vertices=0,_this.info.render.faces=0,_this.info.render.points=0,this.setRenderTarget(renderTarget),(this.autoClear||forceClear)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),renderList=scene.__webglObjects,i=0,il=renderList.length;il>i;i++)webglObject=renderList[i],object=webglObject.object,webglObject.id=i,webglObject.render=!1,object.visible&&((object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)&&object.frustumCulled&&!_frustum.intersectsObject(object)||(setupMatrices(object,camera),unrollBufferMaterial(webglObject),webglObject.render=!0,this.sortObjects===!0&&(null!==object.renderDepth?webglObject.z=object.renderDepth:(_vector3.getPositionFromMatrix(object.matrixWorld),_vector3.applyProjection(_projScreenMatrix),webglObject.z=_vector3.z))));
for(this.sortObjects&&renderList.sort(painterSortStable),renderList=scene.__webglObjectsImmediate,i=0,il=renderList.length;il>i;i++)webglObject=renderList[i],object=webglObject.object,object.visible&&(setupMatrices(object,camera),unrollImmediateBufferMaterial(webglObject));if(scene.overrideMaterial){var material=scene.overrideMaterial;this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst),this.setDepthTest(material.depthTest),this.setDepthWrite(material.depthWrite),setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits),renderObjects(scene.__webglObjects,!1,"",camera,lights,fog,!0,material),renderObjectsImmediate(scene.__webglObjectsImmediate,"",camera,lights,fog,!1,material)}else{var material=null;this.setBlending(THREE.NoBlending),renderObjects(scene.__webglObjects,!0,"opaque",camera,lights,fog,!1,material),renderObjectsImmediate(scene.__webglObjectsImmediate,"opaque",camera,lights,fog,!1,material),renderObjects(scene.__webglObjects,!1,"transparent",camera,lights,fog,!0,material),renderObjectsImmediate(scene.__webglObjectsImmediate,"transparent",camera,lights,fog,!0,material)}renderPlugins(this.renderPluginsPost,scene,camera),renderTarget&&renderTarget.generateMipmaps&&renderTarget.minFilter!==THREE.NearestFilter&&renderTarget.minFilter!==THREE.LinearFilter&&updateRenderTargetMipmap(renderTarget),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(camera,lights,fog,material,object){var program=setProgram(camera,lights,fog,material,object);_currentGeometryGroupHash=-1,_this.setMaterialFaces(material),object.immediateRenderCallback?object.immediateRenderCallback(program,_gl,_frustum):object.render(function(object){_this.renderBufferImmediate(object,program,material)})},this.initWebGLObjects=function(scene){for(scene.__webglObjects||(scene.__webglObjects=[],scene.__webglObjectsImmediate=[],scene.__webglSprites=[],scene.__webglFlares=[]);scene.__objectsAdded.length;)addObject(scene.__objectsAdded[0],scene),scene.__objectsAdded.splice(0,1);for(;scene.__objectsRemoved.length;)removeObject(scene.__objectsRemoved[0],scene),scene.__objectsRemoved.splice(0,1);for(var o=0,ol=scene.__webglObjects.length;ol>o;o++){var object=scene.__webglObjects[o].object;void 0===object.__webglInit&&(void 0!==object.__webglActive&&removeObject(object,scene),addObject(object,scene)),updateObject(object)}},this.initMaterial=function(material,lights,fog,object){material.addEventListener("dispose",onMaterialDispose);var u,i,parameters,maxLightCount,maxBones,maxShadows,shaderID;material instanceof THREE.MeshDepthMaterial?shaderID="depth":material instanceof THREE.MeshNormalMaterial?shaderID="normal":material instanceof THREE.MeshBasicMaterial?shaderID="basic":material instanceof THREE.MeshLambertMaterial?shaderID="lambert":material instanceof THREE.MeshPhongMaterial?shaderID="phong":material instanceof THREE.LineBasicMaterial?shaderID="basic":material instanceof THREE.LineDashedMaterial?shaderID="dashed":material instanceof THREE.ParticleSystemMaterial&&(shaderID="particle_basic"),shaderID&&setMaterialShaders(material,THREE.ShaderLib[shaderID]),maxLightCount=allocateLights(lights),maxShadows=allocateShadows(lights),maxBones=allocateBones(object),parameters={map:!!material.map,envMap:!!material.envMap,lightMap:!!material.lightMap,bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,specularMap:!!material.specularMap,vertexColors:material.vertexColors,fog:fog,useFog:material.fog,fogExp:fog instanceof THREE.FogExp2,sizeAttenuation:material.sizeAttenuation,skinning:material.skinning,maxBones:maxBones,useVertexTexture:_supportsBoneTextures&&object&&object.useVertexTexture,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:maxLightCount.directional,maxPointLights:maxLightCount.point,maxSpotLights:maxLightCount.spot,maxHemiLights:maxLightCount.hemi,maxShadows:maxShadows,shadowMapEnabled:this.shadowMapEnabled&&object.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:material.alphaTest,metal:material.metal,perPixel:material.perPixel,wrapAround:material.wrapAround,doubleSided:material.side===THREE.DoubleSide,flipSided:material.side===THREE.BackSide},material.program=buildProgram(shaderID,material.fragmentShader,material.vertexShader,material.uniforms,material.attributes,material.defines,parameters,material.index0AttributeName);var attributes=material.program.attributes;if(material.morphTargets){material.numSupportedMorphTargets=0;var id,base="morphTarget";for(i=0;i<this.maxMorphTargets;i++)id=base+i,attributes[id]>=0&&material.numSupportedMorphTargets++}if(material.morphNormals){material.numSupportedMorphNormals=0;var id,base="morphNormal";for(i=0;i<this.maxMorphNormals;i++)id=base+i,attributes[id]>=0&&material.numSupportedMorphNormals++}material.uniformsList=[];for(u in material.uniforms)material.uniformsList.push([material.uniforms[u],u])},this.setFaceCulling=function(cullFace,frontFaceDirection){cullFace===THREE.CullFaceNone?_gl.disable(_gl.CULL_FACE):(_gl.frontFace(frontFaceDirection===THREE.FrontFaceDirectionCW?_gl.CW:_gl.CCW),_gl.cullFace(cullFace===THREE.CullFaceBack?_gl.BACK:cullFace===THREE.CullFaceFront?_gl.FRONT:_gl.FRONT_AND_BACK),_gl.enable(_gl.CULL_FACE))},this.setMaterialFaces=function(material){var doubleSided=material.side===THREE.DoubleSide,flipSided=material.side===THREE.BackSide;_oldDoubleSided!==doubleSided&&(doubleSided?_gl.disable(_gl.CULL_FACE):_gl.enable(_gl.CULL_FACE),_oldDoubleSided=doubleSided),_oldFlipSided!==flipSided&&(_gl.frontFace(flipSided?_gl.CW:_gl.CCW),_oldFlipSided=flipSided)},this.setDepthTest=function(depthTest){_oldDepthTest!==depthTest&&(depthTest?_gl.enable(_gl.DEPTH_TEST):_gl.disable(_gl.DEPTH_TEST),_oldDepthTest=depthTest)},this.setDepthWrite=function(depthWrite){_oldDepthWrite!==depthWrite&&(_gl.depthMask(depthWrite),_oldDepthWrite=depthWrite)},this.setBlending=function(blending,blendEquation,blendSrc,blendDst){blending!==_oldBlending&&(blending===THREE.NoBlending?_gl.disable(_gl.BLEND):blending===THREE.AdditiveBlending?(_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE)):blending===THREE.SubtractiveBlending?(_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.ZERO,_gl.ONE_MINUS_SRC_COLOR)):blending===THREE.MultiplyBlending?(_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.ZERO,_gl.SRC_COLOR)):blending===THREE.CustomBlending?_gl.enable(_gl.BLEND):(_gl.enable(_gl.BLEND),_gl.blendEquationSeparate(_gl.FUNC_ADD,_gl.FUNC_ADD),_gl.blendFuncSeparate(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA,_gl.ONE,_gl.ONE_MINUS_SRC_ALPHA)),_oldBlending=blending),blending===THREE.CustomBlending?(blendEquation!==_oldBlendEquation&&(_gl.blendEquation(paramThreeToGL(blendEquation)),_oldBlendEquation=blendEquation),(blendSrc!==_oldBlendSrc||blendDst!==_oldBlendDst)&&(_gl.blendFunc(paramThreeToGL(blendSrc),paramThreeToGL(blendDst)),_oldBlendSrc=blendSrc,_oldBlendDst=blendDst)):(_oldBlendEquation=null,_oldBlendSrc=null,_oldBlendDst=null)},this.setTexture=function(texture,slot){if(texture.needsUpdate){texture.__webglInit||(texture.__webglInit=!0,texture.addEventListener("dispose",onTextureDispose),texture.__webglTexture=_gl.createTexture(),_this.info.memory.textures++),_gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture),_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY),_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha),_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment);var image=texture.image,isImagePowerOfTwo=isPowerOfTwo(image.width)&&isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);setTextureParameters(_gl.TEXTURE_2D,texture,isImagePowerOfTwo);var mipmap,mipmaps=texture.mipmaps;if(texture instanceof THREE.DataTexture)if(mipmaps.length>0&&isImagePowerOfTwo){for(var i=0,il=mipmaps.length;il>i;i++)mipmap=mipmaps[i],_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);texture.generateMipmaps=!1}else _gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,image.width,image.height,0,glFormat,glType,image.data);else if(texture instanceof THREE.CompressedTexture)for(var i=0,il=mipmaps.length;il>i;i++)mipmap=mipmaps[i],texture.format!==THREE.RGBAFormat?_gl.compressedTexImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,mipmap.data):_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);else if(mipmaps.length>0&&isImagePowerOfTwo){for(var i=0,il=mipmaps.length;il>i;i++)mipmap=mipmaps[i],_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,glFormat,glType,mipmap);texture.generateMipmaps=!1}else _gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,glFormat,glType,texture.image);texture.generateMipmaps&&isImagePowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_2D),texture.needsUpdate=!1,texture.onUpdate&&texture.onUpdate()}else _gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture)},this.setRenderTarget=function(renderTarget){var isCube=renderTarget instanceof THREE.WebGLRenderTargetCube;if(renderTarget&&!renderTarget.__webglFramebuffer){void 0===renderTarget.depthBuffer&&(renderTarget.depthBuffer=!0),void 0===renderTarget.stencilBuffer&&(renderTarget.stencilBuffer=!0),renderTarget.addEventListener("dispose",onRenderTargetDispose),renderTarget.__webglTexture=_gl.createTexture(),_this.info.memory.textures++;var isTargetPowerOfTwo=isPowerOfTwo(renderTarget.width)&&isPowerOfTwo(renderTarget.height),glFormat=paramThreeToGL(renderTarget.format),glType=paramThreeToGL(renderTarget.type);if(isCube){renderTarget.__webglFramebuffer=[],renderTarget.__webglRenderbuffer=[],_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture),setTextureParameters(_gl.TEXTURE_CUBE_MAP,renderTarget,isTargetPowerOfTwo);for(var i=0;6>i;i++)renderTarget.__webglFramebuffer[i]=_gl.createFramebuffer(),renderTarget.__webglRenderbuffer[i]=_gl.createRenderbuffer(),_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null),setupFrameBuffer(renderTarget.__webglFramebuffer[i],renderTarget,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i),setupRenderBuffer(renderTarget.__webglRenderbuffer[i],renderTarget);isTargetPowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP)}else renderTarget.__webglFramebuffer=_gl.createFramebuffer(),renderTarget.__webglRenderbuffer=renderTarget.shareDepthFrom?renderTarget.shareDepthFrom.__webglRenderbuffer:_gl.createRenderbuffer(),_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture),setTextureParameters(_gl.TEXTURE_2D,renderTarget,isTargetPowerOfTwo),_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null),setupFrameBuffer(renderTarget.__webglFramebuffer,renderTarget,_gl.TEXTURE_2D),renderTarget.shareDepthFrom?renderTarget.depthBuffer&&!renderTarget.stencilBuffer?_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderTarget.__webglRenderbuffer):renderTarget.depthBuffer&&renderTarget.stencilBuffer&&_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderTarget.__webglRenderbuffer):setupRenderBuffer(renderTarget.__webglRenderbuffer,renderTarget),isTargetPowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_2D);isCube?_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null):_gl.bindTexture(_gl.TEXTURE_2D,null),_gl.bindRenderbuffer(_gl.RENDERBUFFER,null),_gl.bindFramebuffer(_gl.FRAMEBUFFER,null)}var framebuffer,width,height,vx,vy;renderTarget?(framebuffer=isCube?renderTarget.__webglFramebuffer[renderTarget.activeCubeFace]:renderTarget.__webglFramebuffer,width=renderTarget.width,height=renderTarget.height,vx=0,vy=0):(framebuffer=null,width=_viewportWidth,height=_viewportHeight,vx=_viewportX,vy=_viewportY),framebuffer!==_currentFramebuffer&&(_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer),_gl.viewport(vx,vy,width,height),_currentFramebuffer=framebuffer),_currentWidth=width,_currentHeight=height},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(width,height,options){this.width=width,this.height=height,options=options||{},this.wrapS=void 0!==options.wrapS?options.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==options.wrapT?options.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==options.magFilter?options.magFilter:THREE.LinearFilter,this.minFilter=void 0!==options.minFilter?options.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==options.anisotropy?options.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==options.format?options.format:THREE.RGBAFormat,this.type=void 0!==options.type?options.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==options.depthBuffer?options.depthBuffer:!0,this.stencilBuffer=void 0!==options.stencilBuffer?options.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var tmp=new THREE.WebGLRenderTarget(this.width,this.height);return tmp.wrapS=this.wrapS,tmp.wrapT=this.wrapT,tmp.magFilter=this.magFilter,tmp.minFilter=this.minFilter,tmp.anisotropy=this.anisotropy,tmp.offset.copy(this.offset),tmp.repeat.copy(this.repeat),tmp.format=this.format,tmp.type=this.type,tmp.depthBuffer=this.depthBuffer,tmp.stencilBuffer=this.stencilBuffer,tmp.generateMipmaps=this.generateMipmaps,tmp.shareDepthFrom=this.shareDepthFrom,tmp},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(width,height,options){THREE.WebGLRenderTarget.call(this,width,height,options),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(vertex){this.positionWorld.copy(vertex.positionWorld),this.positionScreen.copy(vertex.positionScreen)},THREE.RenderableFace3=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(geometry1,object2,materialIndexOffset){var matrix,normalMatrix,vertexOffset=geometry1.vertices.length,geometry2=(geometry1.faceVertexUvs[0].length,object2 instanceof THREE.Mesh?object2.geometry:object2),vertices1=geometry1.vertices,vertices2=geometry2.vertices,faces1=geometry1.faces,faces2=geometry2.faces,uvs1=geometry1.faceVertexUvs[0],uvs2=geometry2.faceVertexUvs[0];void 0===materialIndexOffset&&(materialIndexOffset=0),object2 instanceof THREE.Mesh&&(object2.matrixAutoUpdate&&object2.updateMatrix(),matrix=object2.matrix,normalMatrix=(new THREE.Matrix3).getNormalMatrix(matrix));for(var i=0,il=vertices2.length;il>i;i++){var vertex=vertices2[i],vertexCopy=vertex.clone();matrix&&vertexCopy.applyMatrix4(matrix),vertices1.push(vertexCopy)}for(i=0,il=faces2.length;il>i;i++){var faceCopy,normal,color,face=faces2[i],faceVertexNormals=face.vertexNormals,faceVertexColors=face.vertexColors;faceCopy=new THREE.Face3(face.a+vertexOffset,face.b+vertexOffset,face.c+vertexOffset),faceCopy.normal.copy(face.normal),normalMatrix&&faceCopy.normal.applyMatrix3(normalMatrix).normalize();for(var j=0,jl=faceVertexNormals.length;jl>j;j++)normal=faceVertexNormals[j].clone(),normalMatrix&&normal.applyMatrix3(normalMatrix).normalize(),faceCopy.vertexNormals.push(normal);faceCopy.color.copy(face.color);for(var j=0,jl=faceVertexColors.length;jl>j;j++)color=faceVertexColors[j],faceCopy.vertexColors.push(color.clone());faceCopy.materialIndex=face.materialIndex+materialIndexOffset,faceCopy.centroid.copy(face.centroid),matrix&&faceCopy.centroid.applyMatrix4(matrix),faces1.push(faceCopy)}for(i=0,il=uvs2.length;il>i;i++){for(var uv=uvs2[i],uvCopy=[],j=0,jl=uv.length;jl>j;j++)uvCopy.push(new THREE.Vector2(uv[j].x,uv[j].y));uvs1.push(uvCopy)}},randomPointInTriangle:function(){var vector=new THREE.Vector3;return function(vectorA,vectorB,vectorC){var point=new THREE.Vector3,a=THREE.Math.random16(),b=THREE.Math.random16();a+b>1&&(a=1-a,b=1-b);var c=1-a-b;return point.copy(vectorA),point.multiplyScalar(a),vector.copy(vectorB),vector.multiplyScalar(b),point.add(vector),vector.copy(vectorC),vector.multiplyScalar(c),point.add(vector),point}}(),randomPointInFace:function(face,geometry){var vA,vB,vC;return vA=geometry.vertices[face.a],vB=geometry.vertices[face.b],vC=geometry.vertices[face.c],THREE.GeometryUtils.randomPointInTriangle(vA,vB,vC)},randomPointsInGeometry:function(geometry,n){function binarySearchIndices(value){function binarySearch(start,end){if(start>end)return start;var mid=start+Math.floor((end-start)/2);return cumulativeAreas[mid]>value?binarySearch(start,mid-1):cumulativeAreas[mid]<value?binarySearch(mid+1,end):mid}var result=binarySearch(0,cumulativeAreas.length-1);return result}var face,i,vA,vB,vC,faces=geometry.faces,vertices=geometry.vertices,il=faces.length,totalArea=0,cumulativeAreas=[];for(i=0;il>i;i++)face=faces[i],vA=vertices[face.a],vB=vertices[face.b],vC=vertices[face.c],face._area=THREE.GeometryUtils.triangleArea(vA,vB,vC),totalArea+=face._area,cumulativeAreas[i]=totalArea;var r,index,result=[],stats={};for(i=0;n>i;i++)r=THREE.Math.random16()*totalArea,index=binarySearchIndices(r),result[i]=THREE.GeometryUtils.randomPointInFace(faces[index],geometry,!0),stats[index]?stats[index]+=1:stats[index]=1;return result},triangleArea:function(){var vector1=new THREE.Vector3,vector2=new THREE.Vector3;return function(vectorA,vectorB,vectorC){return vector1.subVectors(vectorB,vectorA),vector2.subVectors(vectorC,vectorA),vector1.cross(vector2),.5*vector1.length()}}(),center:function(geometry){geometry.computeBoundingBox();var bb=geometry.boundingBox,offset=new THREE.Vector3;return offset.addVectors(bb.min,bb.max),offset.multiplyScalar(-.5),geometry.applyMatrix((new THREE.Matrix4).makeTranslation(offset.x,offset.y,offset.z)),geometry.computeBoundingBox(),offset},triangulateQuads:function(geometry){var i,il,j,jl,faces=[],faceVertexUvs=[];for(i=0,il=geometry.faceVertexUvs.length;il>i;i++)faceVertexUvs[i]=[];for(i=0,il=geometry.faces.length;il>i;i++){var face=geometry.faces[i];for(faces.push(face),j=0,jl=geometry.faceVertexUvs.length;jl>j;j++)faceVertexUvs[j].push(geometry.faceVertexUvs[j][i])}geometry.faces=faces,geometry.faceVertexUvs=faceVertexUvs,geometry.computeCentroids(),geometry.computeFaceNormals(),geometry.computeVertexNormals(),geometry.hasTangents&&geometry.computeTangents()}},THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(url,mapping,onLoad){var loader=new THREE.ImageLoader;loader.crossOrigin=this.crossOrigin;var texture=new THREE.Texture(void 0,mapping),image=loader.load(url,function(){texture.needsUpdate=!0,onLoad&&onLoad(texture)});return texture.image=image,texture.sourceFile=url,texture},loadCompressedTexture:function(url,mapping,onLoad,onError){var texture=new THREE.CompressedTexture;texture.mapping=mapping;var request=new XMLHttpRequest;return request.onload=function(){var buffer=request.response,dds=THREE.ImageUtils.parseDDS(buffer,!0);texture.format=dds.format,texture.mipmaps=dds.mipmaps,texture.image.width=dds.width,texture.image.height=dds.height,texture.generateMipmaps=!1,texture.needsUpdate=!0,onLoad&&onLoad(texture)},request.onerror=onError,request.open("GET",url,!0),request.responseType="arraybuffer",request.send(null),texture},loadTextureCube:function(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.Texture;texture.image=images,void 0!==mapping&&(texture.mapping=mapping),texture.flipY=!1;for(var i=0,il=array.length;il>i;++i){var cubeImage=new Image;images[i]=cubeImage,cubeImage.onload=function(){images.loadCount+=1,6===images.loadCount&&(texture.needsUpdate=!0,onLoad&&onLoad(texture))},cubeImage.onerror=onError,cubeImage.crossOrigin=this.crossOrigin,cubeImage.src=array[i]}return texture},loadCompressedTextureCube:function(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.CompressedTexture;texture.image=images,void 0!==mapping&&(texture.mapping=mapping),texture.flipY=!1,texture.generateMipmaps=!1;var generateCubeFaceCallback=function(rq,img){return function(){var buffer=rq.response,dds=THREE.ImageUtils.parseDDS(buffer,!0);img.format=dds.format,img.mipmaps=dds.mipmaps,img.width=dds.width,img.height=dds.height,images.loadCount+=1,6===images.loadCount&&(texture.format=dds.format,texture.needsUpdate=!0,onLoad&&onLoad(texture))}};if(array instanceof Array)for(var i=0,il=array.length;il>i;++i){var cubeImage={};images[i]=cubeImage;var request=new XMLHttpRequest;request.onload=generateCubeFaceCallback(request,cubeImage),request.onerror=onError;var url=array[i];request.open("GET",url,!0),request.responseType="arraybuffer",request.send(null)}else{var url=array,request=new XMLHttpRequest;request.onload=function(){var buffer=request.response,dds=THREE.ImageUtils.parseDDS(buffer,!0);if(dds.isCubemap){for(var faces=dds.mipmaps.length/dds.mipmapCount,f=0;faces>f;f++){images[f]={mipmaps:[]};for(var i=0;i<dds.mipmapCount;i++)images[f].mipmaps.push(dds.mipmaps[f*dds.mipmapCount+i]),images[f].format=dds.format,images[f].width=dds.width,images[f].height=dds.height}texture.format=dds.format,texture.needsUpdate=!0,onLoad&&onLoad(texture)}},request.onerror=onError,request.open("GET",url,!0),request.responseType="arraybuffer",request.send(null)}return texture},loadDDSTexture:function(url,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.CompressedTexture;texture.image=images,void 0!==mapping&&(texture.mapping=mapping),texture.flipY=!1,texture.generateMipmaps=!1;var request=new XMLHttpRequest;return request.onload=function(){var buffer=request.response,dds=THREE.ImageUtils.parseDDS(buffer,!0);if(dds.isCubemap)for(var faces=dds.mipmaps.length/dds.mipmapCount,f=0;faces>f;f++){images[f]={mipmaps:[]};for(var i=0;i<dds.mipmapCount;i++)images[f].mipmaps.push(dds.mipmaps[f*dds.mipmapCount+i]),images[f].format=dds.format,images[f].width=dds.width,images[f].height=dds.height}else texture.image.width=dds.width,texture.image.height=dds.height,texture.mipmaps=dds.mipmaps;texture.format=dds.format,texture.needsUpdate=!0,onLoad&&onLoad(texture)},request.onerror=onError,request.open("GET",url,!0),request.responseType="arraybuffer",request.send(null),texture},parseDDS:function(buffer,loadMipmaps){function fourCCToInt32(value){return value.charCodeAt(0)+(value.charCodeAt(1)<<8)+(value.charCodeAt(2)<<16)+(value.charCodeAt(3)<<24)}function int32ToFourCC(value){return String.fromCharCode(255&value,value>>8&255,value>>16&255,value>>24&255)}function loadARGBMip(buffer,dataOffset,width,height){for(var dataLength=width*height*4,srcBuffer=new Uint8Array(buffer,dataOffset,dataLength),byteArray=new Uint8Array(dataLength),dst=0,src=0,y=0;height>y;y++)for(var x=0;width>x;x++){var b=srcBuffer[src];src++;var g=srcBuffer[src];src++;var r=srcBuffer[src];src++;var a=srcBuffer[src];src++,byteArray[dst]=r,dst++,byteArray[dst]=g,dst++,byteArray[dst]=b,dst++,byteArray[dst]=a,dst++}return byteArray}var dds={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},DDS_MAGIC=542327876,DDSD_MIPMAPCOUNT=131072,DDSCAPS2_CUBEMAP=512,DDPF_FOURCC=4,FOURCC_DXT1=fourCCToInt32("DXT1"),FOURCC_DXT3=fourCCToInt32("DXT3"),FOURCC_DXT5=fourCCToInt32("DXT5"),headerLengthInt=31,off_magic=0,off_size=1,off_flags=2,off_height=3,off_width=4,off_mipmapCount=7,off_pfFlags=20,off_pfFourCC=21,off_RGBBitCount=22,off_RBitMask=23,off_GBitMask=24,off_BBitMask=25,off_ABitMask=26,off_caps2=28,header=new Int32Array(buffer,0,headerLengthInt);if(header[off_magic]!==DDS_MAGIC)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),dds;if(!header[off_pfFlags]&DDPF_FOURCC)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),dds;var blockBytes,fourCC=header[off_pfFourCC],isRGBAUncompressed=!1;switch(fourCC){case FOURCC_DXT1:blockBytes=8,dds.format=THREE.RGB_S3TC_DXT1_Format;break;case FOURCC_DXT3:blockBytes=16,dds.format=THREE.RGBA_S3TC_DXT3_Format;break;case FOURCC_DXT5:blockBytes=16,dds.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==header[off_RGBBitCount]&&16711680&header[off_RBitMask]&&65280&header[off_GBitMask]&&255&header[off_BBitMask]&&4278190080&header[off_ABitMask]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",int32ToFourCC(fourCC)),dds;isRGBAUncompressed=!0,blockBytes=64,dds.format=THREE.RGBAFormat}dds.mipmapCount=1,header[off_flags]&DDSD_MIPMAPCOUNT&&loadMipmaps!==!1&&(dds.mipmapCount=Math.max(1,header[off_mipmapCount])),dds.isCubemap=header[off_caps2]&DDSCAPS2_CUBEMAP?!0:!1,dds.width=header[off_width],dds.height=header[off_height];for(var dataOffset=header[off_size]+4,width=dds.width,height=dds.height,faces=dds.isCubemap?6:1,face=0;faces>face;face++){for(var i=0;i<dds.mipmapCount;i++){if(isRGBAUncompressed)var byteArray=loadARGBMip(buffer,dataOffset,width,height),dataLength=byteArray.length;else var dataLength=Math.max(4,width)/4*Math.max(4,height)/4*blockBytes,byteArray=new Uint8Array(buffer,dataOffset,dataLength);var mipmap={data:byteArray,width:width,height:height};dds.mipmaps.push(mipmap),dataOffset+=dataLength,width=Math.max(.5*width,1),height=Math.max(.5*height,1)}width=dds.width,height=dds.height}return dds},getNormalMap:function(image,depth){var cross=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},subtract=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},normalize=function(a){var l=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/l,a[1]/l,a[2]/l]};depth=1|depth;var width=image.width,height=image.height,canvas=document.createElement("canvas");canvas.width=width,canvas.height=height;var context=canvas.getContext("2d");context.drawImage(image,0,0);for(var data=context.getImageData(0,0,width,height).data,imageData=context.createImageData(width,height),output=imageData.data,x=0;width>x;x++)for(var y=0;height>y;y++){var ly=0>y-1?0:y-1,uy=y+1>height-1?height-1:y+1,lx=0>x-1?0:x-1,ux=x+1>width-1?width-1:x+1,points=[],origin=[0,0,data[4*(y*width+x)]/255*depth];points.push([-1,0,data[4*(y*width+lx)]/255*depth]),points.push([-1,-1,data[4*(ly*width+lx)]/255*depth]),points.push([0,-1,data[4*(ly*width+x)]/255*depth]),points.push([1,-1,data[4*(ly*width+ux)]/255*depth]),points.push([1,0,data[4*(y*width+ux)]/255*depth]),points.push([1,1,data[4*(uy*width+ux)]/255*depth]),points.push([0,1,data[4*(uy*width+x)]/255*depth]),points.push([-1,1,data[4*(uy*width+lx)]/255*depth]);for(var normals=[],num_points=points.length,i=0;num_points>i;i++){var v1=points[i],v2=points[(i+1)%num_points];v1=subtract(v1,origin),v2=subtract(v2,origin),normals.push(normalize(cross(v1,v2)))}for(var normal=[0,0,0],i=0;i<normals.length;i++)normal[0]+=normals[i][0],normal[1]+=normals[i][1],normal[2]+=normals[i][2];normal[0]/=normals.length,normal[1]/=normals.length,normal[2]/=normals.length;var idx=4*(y*width+x);output[idx]=(normal[0]+1)/2*255|0,output[idx+1]=(normal[1]+1)/2*255|0,output[idx+2]=255*normal[2]|0,output[idx+3]=255}return context.putImageData(imageData,0,0),canvas},generateDataTexture:function(width,height,color){for(var size=width*height,data=new Uint8Array(3*size),r=Math.floor(255*color.r),g=Math.floor(255*color.g),b=Math.floor(255*color.b),i=0;size>i;i++)data[3*i]=r,data[3*i+1]=g,data[3*i+2]=b;var texture=new THREE.DataTexture(data,width,height,THREE.RGBFormat);return texture.needsUpdate=!0,texture}},THREE.SceneUtils={createMultiMaterialObject:function(geometry,materials){for(var group=new THREE.Object3D,i=0,l=materials.length;l>i;i++)group.add(new THREE.Mesh(geometry,materials[i]));return group},detach:function(child,parent,scene){child.applyMatrix(parent.matrixWorld),parent.remove(child),scene.add(child)},attach:function(child,scene,parent){var matrixWorldInverse=new THREE.Matrix4;matrixWorldInverse.getInverse(parent.matrixWorld),child.applyMatrix(matrixWorldInverse),scene.remove(child),parent.add(child)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(data){var family=data.familyName.toLowerCase(),ThreeFont=this;ThreeFont.faces[family]=ThreeFont.faces[family]||{},ThreeFont.faces[family][data.cssFontWeight]=ThreeFont.faces[family][data.cssFontWeight]||{},ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data;ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data;return data},drawText:function(text){var i,face=this.getFace(),scale=this.size/face.resolution,offset=0,chars=String(text).split(""),length=chars.length,fontPaths=[];for(i=0;length>i;i++){var path=new THREE.Path,ret=this.extractGlyphPoints(chars[i],face,scale,offset,path);offset+=ret.offset,fontPaths.push(ret.path)}var width=offset/2;return{paths:fontPaths,offset:width}},extractGlyphPoints:function(c,face,scale,offset,path){var i,i2,divisions,outline,action,length,scaleX,scaleY,x,y,cpx,cpy,cpx0,cpy0,cpx1,cpy1,cpx2,cpy2,laste,pts=[],glyph=face.glyphs[c]||face.glyphs["?"];if(glyph){if(glyph.o)for(outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(" ")),length=outline.length,scaleX=scale,scaleY=scale,i=0;length>i;)switch(action=outline[i++]){case"m":x=outline[i++]*scaleX+offset,y=outline[i++]*scaleY,path.moveTo(x,y);break;case"l":x=outline[i++]*scaleX+offset,y=outline[i++]*scaleY,path.lineTo(x,y);break;case"q":if(cpx=outline[i++]*scaleX+offset,cpy=outline[i++]*scaleY,cpx1=outline[i++]*scaleX+offset,cpy1=outline[i++]*scaleY,path.quadraticCurveTo(cpx1,cpy1,cpx,cpy),laste=pts[pts.length-1])for(cpx0=laste.x,cpy0=laste.y,i2=1,divisions=this.divisions;divisions>=i2;i2++){var t=i2/divisions;THREE.Shape.Utils.b2(t,cpx0,cpx1,cpx),THREE.Shape.Utils.b2(t,cpy0,cpy1,cpy)}break;case"b":if(cpx=outline[i++]*scaleX+offset,cpy=outline[i++]*scaleY,cpx1=outline[i++]*scaleX+offset,cpy1=outline[i++]*-scaleY,cpx2=outline[i++]*scaleX+offset,cpy2=outline[i++]*-scaleY,path.bezierCurveTo(cpx,cpy,cpx1,cpy1,cpx2,cpy2),laste=pts[pts.length-1])for(cpx0=laste.x,cpy0=laste.y,i2=1,divisions=this.divisions;divisions>=i2;i2++){var t=i2/divisions;THREE.Shape.Utils.b3(t,cpx0,cpx1,cpx2,cpx),THREE.Shape.Utils.b3(t,cpy0,cpy1,cpy2,cpy)}}return{offset:glyph.ha*scale,path:path}}}},THREE.FontUtils.generateShapes=function(text,parameters){parameters=parameters||{};var size=void 0!==parameters.size?parameters.size:100,curveSegments=void 0!==parameters.curveSegments?parameters.curveSegments:4,font=void 0!==parameters.font?parameters.font:"helvetiker",weight=void 0!==parameters.weight?parameters.weight:"normal",style=void 0!==parameters.style?parameters.style:"normal";THREE.FontUtils.size=size,THREE.FontUtils.divisions=curveSegments,THREE.FontUtils.face=font,THREE.FontUtils.weight=weight,THREE.FontUtils.style=style;
for(var data=THREE.FontUtils.drawText(text),paths=data.paths,shapes=[],p=0,pl=paths.length;pl>p;p++)Array.prototype.push.apply(shapes,paths[p].toShapes());return shapes},function(namespace){var EPSILON=1e-10,process=function(contour,indices){var n=contour.length;if(3>n)return null;var u,v,w,result=[],verts=[],vertIndices=[];if(area(contour)>0)for(v=0;n>v;v++)verts[v]=v;else for(v=0;n>v;v++)verts[v]=n-1-v;var nv=n,count=2*nv;for(v=nv-1;nv>2;){if(count--<=0)return console.log("Warning, unable to triangulate polygon!"),indices?vertIndices:result;if(u=v,u>=nv&&(u=0),v=u+1,v>=nv&&(v=0),w=v+1,w>=nv&&(w=0),snip(contour,u,v,w,nv,verts)){var a,b,c,s,t;for(a=verts[u],b=verts[v],c=verts[w],result.push([contour[a],contour[b],contour[c]]),vertIndices.push([verts[u],verts[v],verts[w]]),s=v,t=v+1;nv>t;s++,t++)verts[s]=verts[t];nv--,count=2*nv}}return indices?vertIndices:result},area=function(contour){for(var n=contour.length,a=0,p=n-1,q=0;n>q;p=q++)a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;return.5*a},snip=function(contour,u,v,w,n,verts){var p,ax,ay,bx,by,cx,cy,px,py;if(ax=contour[verts[u]].x,ay=contour[verts[u]].y,bx=contour[verts[v]].x,by=contour[verts[v]].y,cx=contour[verts[w]].x,cy=contour[verts[w]].y,EPSILON>(bx-ax)*(cy-ay)-(by-ay)*(cx-ax))return!1;var aX,aY,bX,bY,cX,cY,apx,apy,bpx,bpy,cpx,cpy,cCROSSap,bCROSScp,aCROSSbp;for(aX=cx-bx,aY=cy-by,bX=ax-cx,bY=ay-cy,cX=bx-ax,cY=by-ay,p=0;n>p;p++)if(p!==u&&p!==v&&p!==w&&(px=contour[verts[p]].x,py=contour[verts[p]].y,apx=px-ax,apy=py-ay,bpx=px-bx,bpy=py-by,cpx=px-cx,cpy=py-cy,aCROSSbp=aX*bpy-aY*bpx,cCROSSap=cX*apy-cY*apx,bCROSScp=bX*cpy-bY*cpx,aCROSSbp>=-EPSILON&&bCROSScp>=-EPSILON&&cCROSSap>=-EPSILON))return!1;return!0};return namespace.Triangulate=process,namespace.Triangulate.area=area,namespace}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(u){var t=this.getUtoTmapping(u);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(divisions){divisions||(divisions=5);var d,pts=[];for(d=0;divisions>=d;d++)pts.push(this.getPoint(d/divisions));return pts},THREE.Curve.prototype.getSpacedPoints=function(divisions){divisions||(divisions=5);var d,pts=[];for(d=0;divisions>=d;d++)pts.push(this.getPointAt(d/divisions));return pts},THREE.Curve.prototype.getLength=function(){var lengths=this.getLengths();return lengths[lengths.length-1]},THREE.Curve.prototype.getLengths=function(divisions){if(divisions||(divisions=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==divisions+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var current,p,cache=[],last=this.getPoint(0),sum=0;for(cache.push(0),p=1;divisions>=p;p++)current=this.getPoint(p/divisions),sum+=current.distanceTo(last),cache.push(sum),last=current;return this.cacheArcLengths=cache,cache},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(u,distance){var targetArcLength,arcLengths=this.getLengths(),i=0,il=arcLengths.length;targetArcLength=distance?distance:u*arcLengths[il-1];for(var comparison,low=0,high=il-1;high>=low;)if(i=Math.floor(low+(high-low)/2),comparison=arcLengths[i]-targetArcLength,0>comparison)low=i+1;else{if(!(comparison>0)){high=i;break}high=i-1}if(i=high,arcLengths[i]==targetArcLength){var t=i/(il-1);return t}var lengthBefore=arcLengths[i],lengthAfter=arcLengths[i+1],segmentLength=lengthAfter-lengthBefore,segmentFraction=(targetArcLength-lengthBefore)/segmentLength,t=(i+segmentFraction)/(il-1);return t},THREE.Curve.prototype.getTangent=function(t){var delta=1e-4,t1=t-delta,t2=t+delta;0>t1&&(t1=0),t2>1&&(t2=1);var pt1=this.getPoint(t1),pt2=this.getPoint(t2),vec=pt2.clone().sub(pt1);return vec.normalize()},THREE.Curve.prototype.getTangentAt=function(u){var t=this.getUtoTmapping(u);return this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(t,p0,p1,p2){return 2*(1-t)*(p1-p0)+2*t*(p2-p1)},tangentCubicBezier:function(t,p0,p1,p2,p3){return-3*p0*(1-t)*(1-t)+3*p1*(1-t)*(1-t)-6*t*p1*(1-t)+6*t*p2*(1-t)-3*t*t*p2+3*t*t*p3},tangentSpline:function(t){var h00=6*t*t-6*t,h10=3*t*t-4*t+1,h01=-6*t*t+6*t,h11=3*t*t-2*t;return h00+h10+h01+h11},interpolate:function(p0,p1,p2,p3,t){var v0=.5*(p2-p0),v1=.5*(p3-p1),t2=t*t,t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1}},THREE.Curve.create=function(constructor,getPointFunc){return constructor.prototype=Object.create(THREE.Curve.prototype),constructor.prototype.getPoint=getPointFunc,constructor},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(curve){this.curves.push(curve)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var startPoint=this.curves[0].getPoint(0),endPoint=this.curves[this.curves.length-1].getPoint(1);startPoint.equals(endPoint)||this.curves.push(new THREE.LineCurve(endPoint,startPoint))},THREE.CurvePath.prototype.getPoint=function(t){for(var diff,curve,d=t*this.getLength(),curveLengths=this.getCurveLengths(),i=0;i<curveLengths.length;){if(curveLengths[i]>=d){diff=curveLengths[i]-d,curve=this.curves[i];var u=1-diff/curve.getLength();return curve.getPointAt(u)}i++}return null},THREE.CurvePath.prototype.getLength=function(){var lens=this.getCurveLengths();return lens[lens.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var i,lengths=[],sums=0,il=this.curves.length;for(i=0;il>i;i++)sums+=this.curves[i].getLength(),lengths.push(sums);return this.cacheLengths=lengths,lengths},THREE.CurvePath.prototype.getBoundingBox=function(){var maxX,maxY,maxZ,minX,minY,minZ,points=this.getPoints();maxX=maxY=Number.NEGATIVE_INFINITY,minX=minY=Number.POSITIVE_INFINITY;var p,i,il,sum,v3=points[0]instanceof THREE.Vector3;for(sum=v3?new THREE.Vector3:new THREE.Vector2,i=0,il=points.length;il>i;i++)p=points[i],p.x>maxX?maxX=p.x:p.x<minX&&(minX=p.x),p.y>maxY?maxY=p.y:p.y<minY&&(minY=p.y),v3&&(p.z>maxZ?maxZ=p.z:p.z<minZ&&(minZ=p.z)),sum.add(p);var ret={minX:minX,minY:minY,maxX:maxX,maxY:maxY,centroid:sum.divideScalar(il)};return v3&&(ret.maxZ=maxZ,ret.minZ=minZ),ret},THREE.CurvePath.prototype.createPointsGeometry=function(divisions){var pts=this.getPoints(divisions,!0);return this.createGeometry(pts)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(divisions){var pts=this.getSpacedPoints(divisions,!0);return this.createGeometry(pts)},THREE.CurvePath.prototype.createGeometry=function(points){for(var geometry=new THREE.Geometry,i=0;i<points.length;i++)geometry.vertices.push(new THREE.Vector3(points[i].x,points[i].y,points[i].z||0));return geometry},THREE.CurvePath.prototype.addWrapPath=function(bendpath){this.bends.push(bendpath)},THREE.CurvePath.prototype.getTransformedPoints=function(segments,bends){var i,il,oldPts=this.getPoints(segments);for(bends||(bends=this.bends),i=0,il=bends.length;il>i;i++)oldPts=this.getWrapPoints(oldPts,bends[i]);return oldPts},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(segments,bends){var i,il,oldPts=this.getSpacedPoints(segments);for(bends||(bends=this.bends),i=0,il=bends.length;il>i;i++)oldPts=this.getWrapPoints(oldPts,bends[i]);return oldPts},THREE.CurvePath.prototype.getWrapPoints=function(oldPts,path){var i,il,p,oldX,oldY,xNorm,bounds=this.getBoundingBox();for(i=0,il=oldPts.length;il>i;i++){p=oldPts[i],oldX=p.x,oldY=p.y,xNorm=oldX/bounds.maxX,xNorm=path.getUtoTmapping(xNorm,oldX);var pathPt=path.getPoint(xNorm),normal=path.getNormalVector(xNorm).multiplyScalar(oldY);p.x=pathPt.x+normal.x,p.y=pathPt.y+normal.y}return oldPts},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(force){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||force)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0);for(var i=0,l=this.children.length;l>i;i++)this.children[i].updateMatrixWorld(force)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(points){THREE.CurvePath.call(this),this.actions=[],points&&this.fromPoints(points)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(vectors){this.moveTo(vectors[0].x,vectors[0].y);for(var v=1,vlen=vectors.length;vlen>v;v++)this.lineTo(vectors[v].x,vectors[v].y)},THREE.Path.prototype.moveTo=function(){var args=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:args})},THREE.Path.prototype.lineTo=function(x,y){var args=Array.prototype.slice.call(arguments),lastargs=this.actions[this.actions.length-1].args,x0=lastargs[lastargs.length-2],y0=lastargs[lastargs.length-1],curve=new THREE.LineCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(x,y));this.curves.push(curve),this.actions.push({action:THREE.PathActions.LINE_TO,args:args})},THREE.Path.prototype.quadraticCurveTo=function(aCPx,aCPy,aX,aY){var args=Array.prototype.slice.call(arguments),lastargs=this.actions[this.actions.length-1].args,x0=lastargs[lastargs.length-2],y0=lastargs[lastargs.length-1],curve=new THREE.QuadraticBezierCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(aCPx,aCPy),new THREE.Vector2(aX,aY));this.curves.push(curve),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:args})},THREE.Path.prototype.bezierCurveTo=function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){var args=Array.prototype.slice.call(arguments),lastargs=this.actions[this.actions.length-1].args,x0=lastargs[lastargs.length-2],y0=lastargs[lastargs.length-1],curve=new THREE.CubicBezierCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(aCP1x,aCP1y),new THREE.Vector2(aCP2x,aCP2y),new THREE.Vector2(aX,aY));this.curves.push(curve),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:args})},THREE.Path.prototype.splineThru=function(pts){var args=Array.prototype.slice.call(arguments),lastargs=this.actions[this.actions.length-1].args,x0=lastargs[lastargs.length-2],y0=lastargs[lastargs.length-1],npts=[new THREE.Vector2(x0,y0)];Array.prototype.push.apply(npts,pts);var curve=new THREE.SplineCurve(npts);this.curves.push(curve),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:args})},THREE.Path.prototype.arc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){var lastargs=this.actions[this.actions.length-1].args,x0=lastargs[lastargs.length-2],y0=lastargs[lastargs.length-1];this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise)},THREE.Path.prototype.absarc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise)},THREE.Path.prototype.ellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){var lastargs=this.actions[this.actions.length-1].args,x0=lastargs[lastargs.length-2],y0=lastargs[lastargs.length-1];this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise)},THREE.Path.prototype.absellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){var args=Array.prototype.slice.call(arguments),curve=new THREE.EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise);this.curves.push(curve);var lastPoint=curve.getPoint(1);args.push(lastPoint.x),args.push(lastPoint.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:args})},THREE.Path.prototype.getSpacedPoints=function(divisions){divisions||(divisions=40);for(var points=[],i=0;divisions>i;i++)points.push(this.getPoint(i/divisions));return points},THREE.Path.prototype.getPoints=function(divisions,closedPath){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(divisions,closedPath);divisions=divisions||12;var i,il,item,action,args,cpx,cpy,cpx2,cpy2,cpx1,cpy1,cpx0,cpy0,laste,j,t,tx,ty,points=[];for(i=0,il=this.actions.length;il>i;i++)switch(item=this.actions[i],action=item.action,args=item.args,action){case THREE.PathActions.MOVE_TO:points.push(new THREE.Vector2(args[0],args[1]));break;case THREE.PathActions.LINE_TO:points.push(new THREE.Vector2(args[0],args[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(cpx=args[2],cpy=args[3],cpx1=args[0],cpy1=args[1],points.length>0?(laste=points[points.length-1],cpx0=laste.x,cpy0=laste.y):(laste=this.actions[i-1].args,cpx0=laste[laste.length-2],cpy0=laste[laste.length-1]),j=1;divisions>=j;j++)t=j/divisions,tx=THREE.Shape.Utils.b2(t,cpx0,cpx1,cpx),ty=THREE.Shape.Utils.b2(t,cpy0,cpy1,cpy),points.push(new THREE.Vector2(tx,ty));break;case THREE.PathActions.BEZIER_CURVE_TO:for(cpx=args[4],cpy=args[5],cpx1=args[0],cpy1=args[1],cpx2=args[2],cpy2=args[3],points.length>0?(laste=points[points.length-1],cpx0=laste.x,cpy0=laste.y):(laste=this.actions[i-1].args,cpx0=laste[laste.length-2],cpy0=laste[laste.length-1]),j=1;divisions>=j;j++)t=j/divisions,tx=THREE.Shape.Utils.b3(t,cpx0,cpx1,cpx2,cpx),ty=THREE.Shape.Utils.b3(t,cpy0,cpy1,cpy2,cpy),points.push(new THREE.Vector2(tx,ty));break;case THREE.PathActions.CSPLINE_THRU:laste=this.actions[i-1].args;var last=new THREE.Vector2(laste[laste.length-2],laste[laste.length-1]),spts=[last],n=divisions*args[0].length;spts=spts.concat(args[0]);var spline=new THREE.SplineCurve(spts);for(j=1;n>=j;j++)points.push(spline.getPointAt(j/n));break;case THREE.PathActions.ARC:var angle,aX=args[0],aY=args[1],aRadius=args[2],aStartAngle=args[3],aEndAngle=args[4],aClockwise=!!args[5],deltaAngle=aEndAngle-aStartAngle,tdivisions=2*divisions;for(j=1;tdivisions>=j;j++)t=j/tdivisions,aClockwise||(t=1-t),angle=aStartAngle+t*deltaAngle,tx=aX+aRadius*Math.cos(angle),ty=aY+aRadius*Math.sin(angle),points.push(new THREE.Vector2(tx,ty));break;case THREE.PathActions.ELLIPSE:var angle,aX=args[0],aY=args[1],xRadius=args[2],yRadius=args[3],aStartAngle=args[4],aEndAngle=args[5],aClockwise=!!args[6],deltaAngle=aEndAngle-aStartAngle,tdivisions=2*divisions;for(j=1;tdivisions>=j;j++)t=j/tdivisions,aClockwise||(t=1-t),angle=aStartAngle+t*deltaAngle,tx=aX+xRadius*Math.cos(angle),ty=aY+yRadius*Math.sin(angle),points.push(new THREE.Vector2(tx,ty))}var lastPoint=points[points.length-1],EPSILON=1e-10;return Math.abs(lastPoint.x-points[0].x)<EPSILON&&Math.abs(lastPoint.y-points[0].y)<EPSILON&&points.splice(points.length-1,1),closedPath&&points.push(points[0]),points},THREE.Path.prototype.toShapes=function(isCCW){var i,il,item,action,args,subPaths=[],lastPath=new THREE.Path;for(i=0,il=this.actions.length;il>i;i++)item=this.actions[i],args=item.args,action=item.action,action==THREE.PathActions.MOVE_TO&&0!=lastPath.actions.length&&(subPaths.push(lastPath),lastPath=new THREE.Path),lastPath[action].apply(lastPath,args);if(0!=lastPath.actions.length&&subPaths.push(lastPath),0==subPaths.length)return[];var solid,tmpPath,tmpShape,shapes=[];if(1==subPaths.length)return tmpPath=subPaths[0],tmpShape=new THREE.Shape,tmpShape.actions=tmpPath.actions,tmpShape.curves=tmpPath.curves,shapes.push(tmpShape),shapes;var holesFirst=!THREE.Shape.Utils.isClockWise(subPaths[0].getPoints());if(holesFirst=isCCW?!holesFirst:holesFirst)for(tmpShape=new THREE.Shape,i=0,il=subPaths.length;il>i;i++)tmpPath=subPaths[i],solid=THREE.Shape.Utils.isClockWise(tmpPath.getPoints()),solid=isCCW?!solid:solid,solid?(tmpShape.actions=tmpPath.actions,tmpShape.curves=tmpPath.curves,shapes.push(tmpShape),tmpShape=new THREE.Shape):tmpShape.holes.push(tmpPath);else{for(tmpShape=void 0,i=0,il=subPaths.length;il>i;i++)tmpPath=subPaths[i],solid=THREE.Shape.Utils.isClockWise(tmpPath.getPoints()),solid=isCCW?!solid:solid,solid?(tmpShape&&shapes.push(tmpShape),tmpShape=new THREE.Shape,tmpShape.actions=tmpPath.actions,tmpShape.curves=tmpPath.curves):tmpShape.holes.push(tmpPath);shapes.push(tmpShape)}return shapes},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(options){var extruded=new THREE.ExtrudeGeometry(this,options);return extruded},THREE.Shape.prototype.makeGeometry=function(options){var geometry=new THREE.ShapeGeometry(this,options);return geometry},THREE.Shape.prototype.getPointsHoles=function(divisions){var i,il=this.holes.length,holesPts=[];for(i=0;il>i;i++)holesPts[i]=this.holes[i].getTransformedPoints(divisions,this.bends);return holesPts},THREE.Shape.prototype.getSpacedPointsHoles=function(divisions){var i,il=this.holes.length,holesPts=[];for(i=0;il>i;i++)holesPts[i]=this.holes[i].getTransformedSpacedPoints(divisions,this.bends);return holesPts},THREE.Shape.prototype.extractAllPoints=function(divisions){return{shape:this.getTransformedPoints(divisions),holes:this.getPointsHoles(divisions)}},THREE.Shape.prototype.extractPoints=function(divisions){return this.useSpacedPoints?this.extractAllSpacedPoints(divisions):this.extractAllPoints(divisions)},THREE.Shape.prototype.extractAllSpacedPoints=function(divisions){return{shape:this.getTransformedSpacedPoints(divisions),holes:this.getSpacedPointsHoles(divisions)}},THREE.Shape.Utils={removeHoles:function(contour,holes){var prevShapeVert,prevHoleVert,holeIndex,shapeIndex,h,h2,hole,shortest,d,p,pts1,pts2,tmpShape1,tmpShape2,tmpHole1,tmpHole2,shape=contour.concat(),allpoints=shape.concat(),verts=[];for(h=0;h<holes.length;h++){for(hole=holes[h],Array.prototype.push.apply(allpoints,hole),shortest=Number.POSITIVE_INFINITY,h2=0;h2<hole.length;h2++){pts1=hole[h2];var dist=[];for(p=0;p<shape.length;p++)pts2=shape[p],d=pts1.distanceToSquared(pts2),dist.push(d),shortest>d&&(shortest=d,holeIndex=h2,shapeIndex=p)}prevShapeVert=shapeIndex-1>=0?shapeIndex-1:shape.length-1,prevHoleVert=holeIndex-1>=0?holeIndex-1:hole.length-1;var areaapts=[hole[holeIndex],shape[shapeIndex],shape[prevShapeVert]],areaa=THREE.FontUtils.Triangulate.area(areaapts),areabpts=[hole[holeIndex],hole[prevHoleVert],shape[shapeIndex]],areab=THREE.FontUtils.Triangulate.area(areabpts),shapeOffset=1,holeOffset=-1,oldShapeIndex=shapeIndex,oldHoleIndex=holeIndex;shapeIndex+=shapeOffset,holeIndex+=holeOffset,0>shapeIndex&&(shapeIndex+=shape.length),shapeIndex%=shape.length,0>holeIndex&&(holeIndex+=hole.length),holeIndex%=hole.length,prevShapeVert=shapeIndex-1>=0?shapeIndex-1:shape.length-1,prevHoleVert=holeIndex-1>=0?holeIndex-1:hole.length-1,areaapts=[hole[holeIndex],shape[shapeIndex],shape[prevShapeVert]];var areaa2=THREE.FontUtils.Triangulate.area(areaapts);areabpts=[hole[holeIndex],hole[prevHoleVert],shape[shapeIndex]];var areab2=THREE.FontUtils.Triangulate.area(areabpts);areaa+areab>areaa2+areab2&&(shapeIndex=oldShapeIndex,holeIndex=oldHoleIndex,0>shapeIndex&&(shapeIndex+=shape.length),shapeIndex%=shape.length,0>holeIndex&&(holeIndex+=hole.length),holeIndex%=hole.length,prevShapeVert=shapeIndex-1>=0?shapeIndex-1:shape.length-1,prevHoleVert=holeIndex-1>=0?holeIndex-1:hole.length-1),tmpShape1=shape.slice(0,shapeIndex),tmpShape2=shape.slice(shapeIndex),tmpHole1=hole.slice(holeIndex),tmpHole2=hole.slice(0,holeIndex);var trianglea=[hole[holeIndex],shape[shapeIndex],shape[prevShapeVert]],triangleb=[hole[holeIndex],hole[prevHoleVert],shape[shapeIndex]];verts.push(trianglea),verts.push(triangleb),shape=tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2)}return{shape:shape,isolatedPts:verts,allpoints:allpoints}},triangulateShape:function(contour,holes){var i,il,f,face,key,index,shapeWithoutHoles=THREE.Shape.Utils.removeHoles(contour,holes),shape=shapeWithoutHoles.shape,allpoints=shapeWithoutHoles.allpoints,isolatedPts=shapeWithoutHoles.isolatedPts,triangles=THREE.FontUtils.Triangulate(shape,!1),allPointsMap={};for(i=0,il=allpoints.length;il>i;i++)key=allpoints[i].x+":"+allpoints[i].y,void 0!==allPointsMap[key]&&console.log("Duplicate point",key),allPointsMap[key]=i;for(i=0,il=triangles.length;il>i;i++)for(face=triangles[i],f=0;3>f;f++)key=face[f].x+":"+face[f].y,index=allPointsMap[key],void 0!==index&&(face[f]=index);for(i=0,il=isolatedPts.length;il>i;i++)for(face=isolatedPts[i],f=0;3>f;f++)key=face[f].x+":"+face[f].y,index=allPointsMap[key],void 0!==index&&(face[f]=index);return triangles.concat(isolatedPts)},isClockWise:function(pts){return THREE.FontUtils.Triangulate.area(pts)<0},b2p0:function(t,p){var k=1-t;return k*k*p},b2p1:function(t,p){return 2*(1-t)*t*p},b2p2:function(t,p){return t*t*p},b2:function(t,p0,p1,p2){return this.b2p0(t,p0)+this.b2p1(t,p1)+this.b2p2(t,p2)},b3p0:function(t,p){var k=1-t;return k*k*k*p},b3p1:function(t,p){var k=1-t;return 3*k*k*t*p},b3p2:function(t,p){var k=1-t;return 3*k*t*t*p},b3p3:function(t,p){return t*t*t*p},b3:function(t,p0,p1,p2,p3){return this.b3p0(t,p0)+this.b3p1(t,p1)+this.b3p2(t,p2)+this.b3p3(t,p3)}},THREE.LineCurve=function(v1,v2){this.v1=v1,this.v2=v2},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(t){var point=this.v2.clone().sub(this.v1);return point.multiplyScalar(t).add(this.v1),point},THREE.LineCurve.prototype.getPointAt=function(u){return this.getPoint(u)},THREE.LineCurve.prototype.getTangent=function(){var tangent=this.v2.clone().sub(this.v1);return tangent.normalize()},THREE.QuadraticBezierCurve=function(v0,v1,v2){this.v0=v0,this.v1=v1,this.v2=v2},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var tx,ty;return tx=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),ty=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(tx,ty)},THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var tx,ty;tx=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.x,this.v1.x,this.v2.x),ty=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.y,this.v1.y,this.v2.y);var tangent=new THREE.Vector2(tx,ty);return tangent.normalize(),tangent},THREE.CubicBezierCurve=function(v0,v1,v2,v3){this.v0=v0,this.v1=v1,this.v2=v2,this.v3=v3},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(t){var tx,ty;return tx=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),ty=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(tx,ty)},THREE.CubicBezierCurve.prototype.getTangent=function(t){var tx,ty;tx=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),ty=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var tangent=new THREE.Vector2(tx,ty);return tangent.normalize(),tangent},THREE.SplineCurve=function(points){this.points=void 0==points?[]:points},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(t){var point,intPoint,weight,v=new THREE.Vector2,c=[],points=this.points;return point=(points.length-1)*t,intPoint=Math.floor(point),weight=point-intPoint,c[0]=0==intPoint?intPoint:intPoint-1,c[1]=intPoint,c[2]=intPoint>points.length-2?points.length-1:intPoint+1,c[3]=intPoint>points.length-3?points.length-1:intPoint+2,v.x=THREE.Curve.Utils.interpolate(points[c[0]].x,points[c[1]].x,points[c[2]].x,points[c[3]].x,weight),v.y=THREE.Curve.Utils.interpolate(points[c[0]].y,points[c[1]].y,points[c[2]].y,points[c[3]].y,weight),v},THREE.EllipseCurve=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){this.aX=aX,this.aY=aY,this.xRadius=xRadius,this.yRadius=yRadius,this.aStartAngle=aStartAngle,this.aEndAngle=aEndAngle,this.aClockwise=aClockwise},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(t){var angle,deltaAngle=this.aEndAngle-this.aStartAngle;0>deltaAngle&&(deltaAngle+=2*Math.PI),deltaAngle>2*Math.PI&&(deltaAngle-=2*Math.PI),angle=this.aClockwise===!0?this.aEndAngle+(1-t)*(2*Math.PI-deltaAngle):this.aStartAngle+t*deltaAngle;var tx=this.aX+this.xRadius*Math.cos(angle),ty=this.aY+this.yRadius*Math.sin(angle);return new THREE.Vector2(tx,ty)},THREE.ArcCurve=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){THREE.EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(v1,v2){this.v1=v1,this.v2=v2},function(t){var r=new THREE.Vector3;return r.subVectors(this.v2,this.v1),r.multiplyScalar(t),r.add(this.v1),r}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(v0,v1,v2){this.v0=v0,this.v1=v1,this.v2=v2},function(t){var tx,ty,tz;return tx=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),ty=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),tz=THREE.Shape.Utils.b2(t,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(tx,ty,tz)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(v0,v1,v2,v3){this.v0=v0,this.v1=v1,this.v2=v2,this.v3=v3},function(t){var tx,ty,tz;return tx=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),ty=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),tz=THREE.Shape.Utils.b3(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(tx,ty,tz)}),THREE.SplineCurve3=THREE.Curve.create(function(points){this.points=void 0==points?[]:points},function(t){var point,intPoint,weight,v=new THREE.Vector3,c=[],points=this.points;point=(points.length-1)*t,intPoint=Math.floor(point),weight=point-intPoint,c[0]=0==intPoint?intPoint:intPoint-1,c[1]=intPoint,c[2]=intPoint>points.length-2?points.length-1:intPoint+1,c[3]=intPoint>points.length-3?points.length-1:intPoint+2;var pt0=points[c[0]],pt1=points[c[1]],pt2=points[c[2]],pt3=points[c[3]];return v.x=THREE.Curve.Utils.interpolate(pt0.x,pt1.x,pt2.x,pt3.x,weight),v.y=THREE.Curve.Utils.interpolate(pt0.y,pt1.y,pt2.y,pt3.y,weight),v.z=THREE.Curve.Utils.interpolate(pt0.z,pt1.z,pt2.z,pt3.z,weight),v}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(points){this.points=void 0==points?[]:points},function(t){var point,intPoint,weight,v=new THREE.Vector3,c=[],points=this.points;return point=(points.length-0)*t,intPoint=Math.floor(point),weight=point-intPoint,intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/points.length)+1)*points.length,c[0]=(intPoint-1)%points.length,c[1]=intPoint%points.length,c[2]=(intPoint+1)%points.length,c[3]=(intPoint+2)%points.length,v.x=THREE.Curve.Utils.interpolate(points[c[0]].x,points[c[1]].x,points[c[2]].x,points[c[3]].x,weight),v.y=THREE.Curve.Utils.interpolate(points[c[0]].y,points[c[1]].y,points[c[2]].y,points[c[3]].y,weight),v.z=THREE.Curve.Utils.interpolate(points[c[0]].z,points[c[1]].z,points[c[2]].z,points[c[3]].z,weight),v}),THREE.AnimationHandler=function(){var playing=[],library={},that={};that.update=function(deltaTimeMS){for(var i=0;i<playing.length;i++)playing[i].update(deltaTimeMS)},that.addToUpdate=function(animation){-1===playing.indexOf(animation)&&playing.push(animation)},that.removeFromUpdate=function(animation){var index=playing.indexOf(animation);-1!==index&&playing.splice(index,1)},that.add=function(data){void 0!==library[data.name]&&console.log("THREE.AnimationHandler.add: Warning! "+data.name+" already exists in library. Overwriting."),library[data.name]=data,initData(data)},that.get=function(name){return"string"==typeof name?library[name]?library[name]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+name),null):void 0},that.parse=function(root){var hierarchy=[];if(root instanceof THREE.SkinnedMesh)for(var b=0;b<root.bones.length;b++)hierarchy.push(root.bones[b]);else parseRecurseHierarchy(root,hierarchy);return hierarchy};var parseRecurseHierarchy=function(root,hierarchy){hierarchy.push(root);for(var c=0;c<root.children.length;c++)parseRecurseHierarchy(root.children[c],hierarchy)},initData=function(data){if(data.initialized!==!0){for(var h=0;h<data.hierarchy.length;h++){for(var k=0;k<data.hierarchy[h].keys.length;k++)if(data.hierarchy[h].keys[k].time<0&&(data.hierarchy[h].keys[k].time=0),void 0!==data.hierarchy[h].keys[k].rot&&!(data.hierarchy[h].keys[k].rot instanceof THREE.Quaternion)){var quat=data.hierarchy[h].keys[k].rot;data.hierarchy[h].keys[k].rot=new THREE.Quaternion(quat[0],quat[1],quat[2],quat[3])}if(data.hierarchy[h].keys.length&&void 0!==data.hierarchy[h].keys[0].morphTargets){for(var usedMorphTargets={},k=0;k<data.hierarchy[h].keys.length;k++)for(var m=0;m<data.hierarchy[h].keys[k].morphTargets.length;m++){var morphTargetName=data.hierarchy[h].keys[k].morphTargets[m];usedMorphTargets[morphTargetName]=-1}data.hierarchy[h].usedMorphTargets=usedMorphTargets;for(var k=0;k<data.hierarchy[h].keys.length;k++){var influences={};for(var morphTargetName in usedMorphTargets){for(var m=0;m<data.hierarchy[h].keys[k].morphTargets.length;m++)if(data.hierarchy[h].keys[k].morphTargets[m]===morphTargetName){influences[morphTargetName]=data.hierarchy[h].keys[k].morphTargetsInfluences[m];break}m===data.hierarchy[h].keys[k].morphTargets.length&&(influences[morphTargetName]=0)}data.hierarchy[h].keys[k].morphTargetsInfluences=influences}}for(var k=1;k<data.hierarchy[h].keys.length;k++)data.hierarchy[h].keys[k].time===data.hierarchy[h].keys[k-1].time&&(data.hierarchy[h].keys.splice(k,1),k--);for(var k=0;k<data.hierarchy[h].keys.length;k++)data.hierarchy[h].keys[k].index=k}var lengthInFrames=parseInt(data.length*data.fps,10);data.JIT={},data.JIT.hierarchy=[];for(var h=0;h<data.hierarchy.length;h++)data.JIT.hierarchy.push(new Array(lengthInFrames));data.initialized=!0}};return that.LINEAR=0,that.CATMULLROM=1,that.CATMULLROM_FORWARD=2,that}(),THREE.Animation=function(root,name,interpolationType){this.root=root,this.data=THREE.AnimationHandler.get(name),this.hierarchy=THREE.AnimationHandler.parse(root),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==interpolationType?interpolationType:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(loop,startTimeMS){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0!==loop?loop:!0,this.currentTime=void 0!==startTimeMS?startTimeMS:0;var h,object,hl=this.hierarchy.length;for(h=0;hl>h;h++){object=this.hierarchy[h],object.matrixAutoUpdate=!0,void 0===object.animationCache&&(object.animationCache={},object.animationCache.prevKey={pos:0,rot:0,scl:0},object.animationCache.nextKey={pos:0,rot:0,scl:0},object.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix);var prevKey=object.animationCache.prevKey,nextKey=object.animationCache.nextKey;prevKey.pos=this.data.hierarchy[h].keys[0],prevKey.rot=this.data.hierarchy[h].keys[0],prevKey.scl=this.data.hierarchy[h].keys[0],nextKey.pos=this.getNextKeyWith("pos",h,1),nextKey.rot=this.getNextKeyWith("rot",h,1),nextKey.scl=this.getNextKeyWith("scl",h,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused
},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(deltaTimeMS){if(this.isPlaying!==!1){{var type,scale,vector,prevXYZ,nextXYZ,prevKey,nextKey,object,animationCache,frame,currentTime,unloopedCurrentTime,currentPoint,forwardPoint,angle,types=["pos","rot","scl"];this.data.JIT.hierarchy}this.currentTime+=deltaTimeMS*this.timeScale,unloopedCurrentTime=this.currentTime,currentTime=this.currentTime=this.currentTime%this.data.length,frame=parseInt(Math.min(currentTime*this.data.fps,this.data.length*this.data.fps),10);for(var h=0,hl=this.hierarchy.length;hl>h;h++){object=this.hierarchy[h],animationCache=object.animationCache;for(var t=0;3>t;t++){if(type=types[t],prevKey=animationCache.prevKey[type],nextKey=animationCache.nextKey[type],nextKey.time<=unloopedCurrentTime){if(unloopedCurrentTime>currentTime){if(!this.loop)return void this.stop();for(prevKey=this.data.hierarchy[h].keys[0],nextKey=this.getNextKeyWith(type,h,1);nextKey.time<currentTime;)prevKey=nextKey,nextKey=this.getNextKeyWith(type,h,nextKey.index+1)}else do prevKey=nextKey,nextKey=this.getNextKeyWith(type,h,nextKey.index+1);while(nextKey.time<currentTime);animationCache.prevKey[type]=prevKey,animationCache.nextKey[type]=nextKey}object.matrixAutoUpdate=!0,object.matrixWorldNeedsUpdate=!0,scale=(currentTime-prevKey.time)/(nextKey.time-prevKey.time),prevXYZ=prevKey[type],nextXYZ=nextKey[type],(0>scale||scale>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+scale+" on bone "+h),scale=0>scale?0:1),"pos"===type?(vector=object.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale,vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale,vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",h,prevKey.index-1).pos,this.points[1]=prevXYZ,this.points[2]=nextXYZ,this.points[3]=this.getNextKeyWith("pos",h,nextKey.index+1).pos,scale=.33*scale+.33,currentPoint=this.interpolateCatmullRom(this.points,scale),vector.x=currentPoint[0],vector.y=currentPoint[1],vector.z=currentPoint[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(forwardPoint=this.interpolateCatmullRom(this.points,1.01*scale),this.target.set(forwardPoint[0],forwardPoint[1],forwardPoint[2]),this.target.sub(vector),this.target.y=0,this.target.normalize(),angle=Math.atan2(this.target.x,this.target.z),object.rotation.set(0,angle,0)))):"rot"===type?THREE.Quaternion.slerp(prevXYZ,nextXYZ,object.quaternion,scale):"scl"===type&&(vector=object.scale,vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale,vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale,vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(points,scale){var point,intPoint,weight,w2,w3,pa,pb,pc,pd,c=[],v3=[];return point=(points.length-1)*scale,intPoint=Math.floor(point),weight=point-intPoint,c[0]=0===intPoint?intPoint:intPoint-1,c[1]=intPoint,c[2]=intPoint>points.length-2?intPoint:intPoint+1,c[3]=intPoint>points.length-3?intPoint:intPoint+2,pa=points[c[0]],pb=points[c[1]],pc=points[c[2]],pd=points[c[3]],w2=weight*weight,w3=weight*w2,v3[0]=this.interpolate(pa[0],pb[0],pc[0],pd[0],weight,w2,w3),v3[1]=this.interpolate(pa[1],pb[1],pc[1],pd[1],weight,w2,w3),v3[2]=this.interpolate(pa[2],pb[2],pc[2],pd[2],weight,w2,w3),v3},THREE.Animation.prototype.interpolate=function(p0,p1,p2,p3,t,t2,t3){var v0=.5*(p2-p0),v1=.5*(p3-p1);return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1},THREE.Animation.prototype.getNextKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?key=key<keys.length-1?key:keys.length-1:key%=keys.length;key<keys.length;key++)if(void 0!==keys[key][type])return keys[key];return this.data.hierarchy[h].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;for(key=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?key>0?key:0:key>=0?key:key+keys.length;key>=0;key--)if(void 0!==keys[key][type])return keys[key];return this.data.hierarchy[h].keys[keys.length-1]},THREE.KeyFrameAnimation=function(root,data,JITCompile){this.root=root,this.data=THREE.AnimationHandler.get(data),this.hierarchy=THREE.AnimationHandler.parse(root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0!==JITCompile?JITCompile:!0;for(var h=0,hl=this.hierarchy.length;hl>h;h++){var keys=this.data.hierarchy[h].keys,sids=this.data.hierarchy[h].sids,obj=this.hierarchy[h];if(keys.length&&sids){for(var s=0;s<sids.length;s++){var sid=sids[s],next=this.getNextKeyWith(sid,h,0);next&&next.apply(sid)}obj.matrixAutoUpdate=!1,this.data.hierarchy[h].node.updateMatrix(),obj.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(loop,startTimeMS){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==loop?loop:!0,this.currentTime=void 0!==startTimeMS?startTimeMS:0,this.startTimeMs=startTimeMS,this.startTime=1e7,this.endTime=-this.startTime;var h,object,node,hl=this.hierarchy.length;for(h=0;hl>h;h++){object=this.hierarchy[h],node=this.data.hierarchy[h],void 0===node.animationCache&&(node.animationCache={},node.animationCache.prevKey=null,node.animationCache.nextKey=null,node.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix);var keys=this.data.hierarchy[h].keys;keys.length&&(node.animationCache.prevKey=keys[0],node.animationCache.nextKey=keys[1],this.startTime=Math.min(keys[0].time,this.startTime),this.endTime=Math.max(keys[keys.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var h=0;h<this.data.hierarchy.length;h++){var obj=this.hierarchy[h],node=this.data.hierarchy[h];if(void 0!==node.animationCache){var original=node.animationCache.originalMatrix;obj instanceof THREE.Bone?(original.copy(obj.skinMatrix),obj.skinMatrix=original):(original.copy(obj.matrix),obj.matrix=original),delete node.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(deltaTimeMS){if(this.isPlaying){var prevKey,nextKey,object,node,frame,currentTime,unloopedCurrentTime,looped,JIThierarchy=this.data.JIT.hierarchy;if(this.currentTime+=deltaTimeMS*this.timeScale,unloopedCurrentTime=this.currentTime,currentTime=this.currentTime=this.currentTime%this.data.length,currentTime<this.startTimeMs&&(currentTime=this.currentTime=this.startTimeMs+currentTime),frame=parseInt(Math.min(currentTime*this.data.fps,this.data.length*this.data.fps),10),looped=unloopedCurrentTime>currentTime,looped&&!this.loop){for(var h=0,hl=this.hierarchy.length;hl>h;h++){var keys=this.data.hierarchy[h].keys,sids=this.data.hierarchy[h].sids,end=keys.length-1,obj=this.hierarchy[h];if(keys.length){for(var s=0;s<sids.length;s++){var sid=sids[s],prev=this.getPrevKeyWith(sid,h,end);prev&&prev.apply(sid)}this.data.hierarchy[h].node.updateMatrix(),obj.matrixWorldNeedsUpdate=!0}}return void this.stop()}if(!(currentTime<this.startTime)){for(var h=0,hl=this.hierarchy.length;hl>h;h++){object=this.hierarchy[h],node=this.data.hierarchy[h];var keys=node.keys,animationCache=node.animationCache;if(this.JITCompile&&void 0!==JIThierarchy[h][frame])object instanceof THREE.Bone?(object.skinMatrix=JIThierarchy[h][frame],object.matrixWorldNeedsUpdate=!1):(object.matrix=JIThierarchy[h][frame],object.matrixWorldNeedsUpdate=!0);else if(keys.length){if(this.JITCompile&&animationCache&&(object instanceof THREE.Bone?object.skinMatrix=animationCache.originalMatrix:object.matrix=animationCache.originalMatrix),prevKey=animationCache.prevKey,nextKey=animationCache.nextKey,prevKey&&nextKey){if(nextKey.time<=unloopedCurrentTime){if(looped&&this.loop)for(prevKey=keys[0],nextKey=keys[1];nextKey.time<currentTime;)prevKey=nextKey,nextKey=keys[prevKey.index+1];else if(!looped)for(var lastIndex=keys.length-1;nextKey.time<currentTime&&nextKey.index!==lastIndex;)prevKey=nextKey,nextKey=keys[prevKey.index+1];animationCache.prevKey=prevKey,animationCache.nextKey=nextKey}nextKey.time>=currentTime?prevKey.interpolate(nextKey,currentTime):prevKey.interpolate(nextKey,nextKey.time)}this.data.hierarchy[h].node.updateMatrix(),object.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===JIThierarchy[0][frame]){this.hierarchy[0].updateMatrixWorld(!0);for(var h=0;h<this.hierarchy.length;h++)JIThierarchy[h][frame]=this.hierarchy[h]instanceof THREE.Bone?this.hierarchy[h].skinMatrix.clone():this.hierarchy[h].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;for(key%=keys.length;key<keys.length;key++)if(keys[key].hasTarget(sid))return keys[key];return keys[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;for(key=key>=0?key:key+keys.length;key>=0;key--)if(keys[key].hasTarget(sid))return keys[key];return keys[keys.length-1]},THREE.CubeCamera=function(near,far,cubeResolution){THREE.Object3D.call(this);var fov=90,aspect=1,cameraPX=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPX.up.set(0,-1,0),cameraPX.lookAt(new THREE.Vector3(1,0,0)),this.add(cameraPX);var cameraNX=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNX.up.set(0,-1,0),cameraNX.lookAt(new THREE.Vector3(-1,0,0)),this.add(cameraNX);var cameraPY=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPY.up.set(0,0,1),cameraPY.lookAt(new THREE.Vector3(0,1,0)),this.add(cameraPY);var cameraNY=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNY.up.set(0,0,-1),cameraNY.lookAt(new THREE.Vector3(0,-1,0)),this.add(cameraNY);var cameraPZ=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPZ.up.set(0,-1,0),cameraPZ.lookAt(new THREE.Vector3(0,0,1)),this.add(cameraPZ);var cameraNZ=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNZ.up.set(0,-1,0),cameraNZ.lookAt(new THREE.Vector3(0,0,-1)),this.add(cameraNZ),this.renderTarget=new THREE.WebGLRenderTargetCube(cubeResolution,cubeResolution,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(renderer,scene){var renderTarget=this.renderTarget,generateMipmaps=renderTarget.generateMipmaps;renderTarget.generateMipmaps=!1,renderTarget.activeCubeFace=0,renderer.render(scene,cameraPX,renderTarget),renderTarget.activeCubeFace=1,renderer.render(scene,cameraNX,renderTarget),renderTarget.activeCubeFace=2,renderer.render(scene,cameraPY,renderTarget),renderTarget.activeCubeFace=3,renderer.render(scene,cameraNY,renderTarget),renderTarget.activeCubeFace=4,renderer.render(scene,cameraPZ,renderTarget),renderTarget.generateMipmaps=generateMipmaps,renderTarget.activeCubeFace=5,renderer.render(scene,cameraNZ,renderTarget)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(width,height,fov,near,far,orthoNear,orthoFar){THREE.Camera.call(this),this.fov=fov,this.left=-width/2,this.right=width/2,this.top=height/2,this.bottom=-height/2,this.cameraO=new THREE.OrthographicCamera(width/-2,width/2,height/2,height/-2,orthoNear,orthoFar),this.cameraP=new THREE.PerspectiveCamera(fov,width/height,near,far),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var fov=this.fov,aspect=this.cameraP.aspect,near=this.cameraP.near,far=this.cameraP.far,hyperfocus=(near+far)/2,halfHeight=Math.tan(fov/2)*hyperfocus,planeHeight=2*halfHeight,planeWidth=planeHeight*aspect,halfWidth=planeWidth/2;halfHeight/=this.zoom,halfWidth/=this.zoom,this.cameraO.left=-halfWidth,this.cameraO.right=halfWidth,this.cameraO.top=halfHeight,this.cameraO.bottom=-halfHeight,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(width,height){this.cameraP.aspect=width/height,this.left=-width/2,this.right=width/2,this.top=height/2,this.bottom=-height/2},THREE.CombinedCamera.prototype.setFov=function(fov){this.fov=fov,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(focalLength,frameHeight){void 0===frameHeight&&(frameHeight=24);var fov=2*THREE.Math.radToDeg(Math.atan(frameHeight/(2*focalLength)));return this.setFov(fov),fov},THREE.CombinedCamera.prototype.setZoom=function(zoom){this.zoom=zoom,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CircleGeometry=function(radius,segments,thetaStart,thetaLength){THREE.Geometry.call(this),this.radius=radius=radius||50,this.segments=segments=void 0!==segments?Math.max(3,segments):8,this.thetaStart=thetaStart=void 0!==thetaStart?thetaStart:0,this.thetaLength=thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI;var i,uvs=[],center=new THREE.Vector3,centerUV=new THREE.Vector2(.5,.5);for(this.vertices.push(center),uvs.push(centerUV),i=0;segments>=i;i++){var vertex=new THREE.Vector3,segment=thetaStart+i/segments*thetaLength;vertex.x=radius*Math.cos(segment),vertex.y=radius*Math.sin(segment),this.vertices.push(vertex),uvs.push(new THREE.Vector2((vertex.x/radius+1)/2,(vertex.y/radius+1)/2))}var n=new THREE.Vector3(0,0,1);for(i=1;segments>=i;i++){var v1=i,v2=i+1,v3=0;this.faces.push(new THREE.Face3(v1,v2,v3,[n,n,n])),this.faceVertexUvs[0].push([uvs[i],uvs[i+1],centerUV])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(width,height,depth,widthSegments,heightSegments,depthSegments){function buildPlane(u,v,udir,vdir,width,height,depth,materialIndex){var w,ix,iy,gridX=scope.widthSegments,gridY=scope.heightSegments,width_half=width/2,height_half=height/2,offset=scope.vertices.length;"x"===u&&"y"===v||"y"===u&&"x"===v?w="z":"x"===u&&"z"===v||"z"===u&&"x"===v?(w="y",gridY=scope.depthSegments):("z"===u&&"y"===v||"y"===u&&"z"===v)&&(w="x",gridX=scope.depthSegments);var gridX1=gridX+1,gridY1=gridY+1,segment_width=width/gridX,segment_height=height/gridY,normal=new THREE.Vector3;for(normal[w]=depth>0?1:-1,iy=0;gridY1>iy;iy++)for(ix=0;gridX1>ix;ix++){var vector=new THREE.Vector3;vector[u]=(ix*segment_width-width_half)*udir,vector[v]=(iy*segment_height-height_half)*vdir,vector[w]=depth,scope.vertices.push(vector)}for(iy=0;gridY>iy;iy++)for(ix=0;gridX>ix;ix++){var a=ix+gridX1*iy,b=ix+gridX1*(iy+1),c=ix+1+gridX1*(iy+1),d=ix+1+gridX1*iy,uva=new THREE.Vector2(ix/gridX,1-iy/gridY),uvb=new THREE.Vector2(ix/gridX,1-(iy+1)/gridY),uvc=new THREE.Vector2((ix+1)/gridX,1-(iy+1)/gridY),uvd=new THREE.Vector2((ix+1)/gridX,1-iy/gridY),face=new THREE.Face3(a+offset,b+offset,d+offset);face.normal.copy(normal),face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone()),face.materialIndex=materialIndex,scope.faces.push(face),scope.faceVertexUvs[0].push([uva,uvb,uvd]),face=new THREE.Face3(b+offset,c+offset,d+offset),face.normal.copy(normal),face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone()),face.materialIndex=materialIndex,scope.faces.push(face),scope.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()])}}THREE.Geometry.call(this);var scope=this;this.width=width,this.height=height,this.depth=depth,this.widthSegments=widthSegments||1,this.heightSegments=heightSegments||1,this.depthSegments=depthSegments||1;var width_half=this.width/2,height_half=this.height/2,depth_half=this.depth/2;buildPlane("z","y",-1,-1,this.depth,this.height,width_half,0),buildPlane("z","y",1,-1,this.depth,this.height,-width_half,1),buildPlane("x","z",1,1,this.width,this.depth,height_half,2),buildPlane("x","z",1,-1,this.width,this.depth,-height_half,3),buildPlane("x","y",1,-1,this.width,this.height,depth_half,4),buildPlane("x","y",-1,-1,this.width,this.height,-depth_half,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded){THREE.Geometry.call(this),this.radiusTop=radiusTop=void 0!==radiusTop?radiusTop:20,this.radiusBottom=radiusBottom=void 0!==radiusBottom?radiusBottom:20,this.height=height=void 0!==height?height:100,this.radialSegments=radialSegments=radialSegments||8,this.heightSegments=heightSegments=heightSegments||1,this.openEnded=openEnded=void 0!==openEnded?openEnded:!1;var x,y,heightHalf=height/2,vertices=[],uvs=[];for(y=0;heightSegments>=y;y++){var verticesRow=[],uvsRow=[],v=y/heightSegments,radius=v*(radiusBottom-radiusTop)+radiusTop;for(x=0;radialSegments>=x;x++){var u=x/radialSegments,vertex=new THREE.Vector3;vertex.x=radius*Math.sin(u*Math.PI*2),vertex.y=-v*height+heightHalf,vertex.z=radius*Math.cos(u*Math.PI*2),this.vertices.push(vertex),verticesRow.push(this.vertices.length-1),uvsRow.push(new THREE.Vector2(u,1-v))}vertices.push(verticesRow),uvs.push(uvsRow)}var na,nb,tanTheta=(radiusBottom-radiusTop)/height;for(x=0;radialSegments>x;x++)for(0!==radiusTop?(na=this.vertices[vertices[0][x]].clone(),nb=this.vertices[vertices[0][x+1]].clone()):(na=this.vertices[vertices[1][x]].clone(),nb=this.vertices[vertices[1][x+1]].clone()),na.setY(Math.sqrt(na.x*na.x+na.z*na.z)*tanTheta).normalize(),nb.setY(Math.sqrt(nb.x*nb.x+nb.z*nb.z)*tanTheta).normalize(),y=0;heightSegments>y;y++){var v1=vertices[y][x],v2=vertices[y+1][x],v3=vertices[y+1][x+1],v4=vertices[y][x+1],n1=na.clone(),n2=na.clone(),n3=nb.clone(),n4=nb.clone(),uv1=uvs[y][x].clone(),uv2=uvs[y+1][x].clone(),uv3=uvs[y+1][x+1].clone(),uv4=uvs[y][x+1].clone();this.faces.push(new THREE.Face3(v1,v2,v4,[n1,n2,n4])),this.faceVertexUvs[0].push([uv1,uv2,uv4]),this.faces.push(new THREE.Face3(v2,v3,v4,[n2,n3,n4])),this.faceVertexUvs[0].push([uv2,uv3,uv4])}if(openEnded===!1&&radiusTop>0)for(this.vertices.push(new THREE.Vector3(0,heightHalf,0)),x=0;radialSegments>x;x++){var v1=vertices[0][x],v2=vertices[0][x+1],v3=this.vertices.length-1,n1=new THREE.Vector3(0,1,0),n2=new THREE.Vector3(0,1,0),n3=new THREE.Vector3(0,1,0),uv1=uvs[0][x].clone(),uv2=uvs[0][x+1].clone(),uv3=new THREE.Vector2(uv2.u,0);this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3])),this.faceVertexUvs[0].push([uv1,uv2,uv3])}if(openEnded===!1&&radiusBottom>0)for(this.vertices.push(new THREE.Vector3(0,-heightHalf,0)),x=0;radialSegments>x;x++){var v1=vertices[y][x+1],v2=vertices[y][x],v3=this.vertices.length-1,n1=new THREE.Vector3(0,-1,0),n2=new THREE.Vector3(0,-1,0),n3=new THREE.Vector3(0,-1,0),uv1=uvs[y][x+1].clone(),uv2=uvs[y][x].clone(),uv3=new THREE.Vector2(uv2.u,1);this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3])),this.faceVertexUvs[0].push([uv1,uv2,uv3])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(shapes,options){return"undefined"==typeof shapes?void(shapes=[]):(THREE.Geometry.call(this),shapes=shapes instanceof Array?shapes:[shapes],this.shapebb=shapes[shapes.length-1].getBoundingBox(),this.addShapeList(shapes,options),this.computeCentroids(),void this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(shapes,options){for(var sl=shapes.length,s=0;sl>s;s++){var shape=shapes[s];this.addShape(shape,options)}},THREE.ExtrudeGeometry.prototype.addShape=function(shape,options){function scalePt2(pt,vec,size){return vec||console.log("die"),vec.clone().multiplyScalar(size).add(pt)}function getBevelVec(pt_i,pt_j,pt_k){return getBevelVec2(pt_i,pt_j,pt_k)}function getBevelVec1(pt_i,pt_j,pt_k){var anglea=Math.atan2(pt_j.y-pt_i.y,pt_j.x-pt_i.x),angleb=Math.atan2(pt_k.y-pt_i.y,pt_k.x-pt_i.x);anglea>angleb&&(angleb+=2*Math.PI);var anglec=(anglea+angleb)/2,x=-Math.cos(anglec),y=-Math.sin(anglec),vec=new THREE.Vector2(x,y);return vec}function getBevelVec2(pt_i,pt_j,pt_k){var v,w,v_dot_w_hat,q_sub_p_dot_w_hat,s,intersection,a=THREE.ExtrudeGeometry.__v1,b=THREE.ExtrudeGeometry.__v2,v_hat=THREE.ExtrudeGeometry.__v3,w_hat=THREE.ExtrudeGeometry.__v4,p=THREE.ExtrudeGeometry.__v5,q=THREE.ExtrudeGeometry.__v6;return a.set(pt_i.x-pt_j.x,pt_i.y-pt_j.y),b.set(pt_i.x-pt_k.x,pt_i.y-pt_k.y),v=a.normalize(),w=b.normalize(),v_hat.set(-v.y,v.x),w_hat.set(w.y,-w.x),p.copy(pt_i).add(v_hat),q.copy(pt_i).add(w_hat),p.equals(q)?w_hat.clone():(p.copy(pt_j).add(v_hat),q.copy(pt_k).add(w_hat),v_dot_w_hat=v.dot(w_hat),q_sub_p_dot_w_hat=q.sub(p).dot(w_hat),0===v_dot_w_hat&&(console.log("Either infinite or no solutions!"),console.log(0===q_sub_p_dot_w_hat?"Its finite solutions.":"Too bad, no solutions.")),s=q_sub_p_dot_w_hat/v_dot_w_hat,0>s?getBevelVec1(pt_i,pt_j,pt_k):(intersection=v.multiplyScalar(s).add(p),intersection.sub(pt_i).clone()))}function buildLidFaces(){if(bevelEnabled){var layer=0,offset=vlen*layer;for(i=0;flen>i;i++)face=faces[i],f3(face[2]+offset,face[1]+offset,face[0]+offset,!0);for(layer=steps+2*bevelSegments,offset=vlen*layer,i=0;flen>i;i++)face=faces[i],f3(face[0]+offset,face[1]+offset,face[2]+offset,!1)}else{for(i=0;flen>i;i++)face=faces[i],f3(face[2],face[1],face[0],!0);for(i=0;flen>i;i++)face=faces[i],f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps,!1)}}function buildSideFaces(){var layeroffset=0;for(sidewalls(contour,layeroffset),layeroffset+=contour.length,h=0,hl=holes.length;hl>h;h++)ahole=holes[h],sidewalls(ahole,layeroffset),layeroffset+=ahole.length}function sidewalls(contour,layeroffset){var j,k;for(i=contour.length;--i>=0;){j=i,k=i-1,0>k&&(k=contour.length-1);var s=0,sl=steps+2*bevelSegments;for(s=0;sl>s;s++){var slen1=vlen*s,slen2=vlen*(s+1),a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d,contour,s,sl,j,k)}}}function v(x,y,z){scope.vertices.push(new THREE.Vector3(x,y,z))}function f3(a,b,c,isBottom){a+=shapesOffset,b+=shapesOffset,c+=shapesOffset,scope.faces.push(new THREE.Face3(a,b,c,null,null,material));var uvs=isBottom?uvgen.generateBottomUV(scope,shape,options,a,b,c):uvgen.generateTopUV(scope,shape,options,a,b,c);scope.faceVertexUvs[0].push(uvs)}function f4(a,b,c,d,wallContour,stepIndex,stepsLength,contourIndex1,contourIndex2){a+=shapesOffset,b+=shapesOffset,c+=shapesOffset,d+=shapesOffset,scope.faces.push(new THREE.Face3(a,b,d,null,null,extrudeMaterial)),scope.faces.push(new THREE.Face3(b,c,d,null,null,extrudeMaterial));var uvs=uvgen.generateSideWallUV(scope,shape,wallContour,options,a,b,c,d,stepIndex,stepsLength,contourIndex1,contourIndex2);scope.faceVertexUvs[0].push([uvs[0],uvs[1],uvs[3]]),scope.faceVertexUvs[0].push([uvs[1],uvs[2],uvs[3]])}{var extrudePts,splineTube,binormal,normal,position2,amount=void 0!==options.amount?options.amount:100,bevelThickness=void 0!==options.bevelThickness?options.bevelThickness:6,bevelSize=void 0!==options.bevelSize?options.bevelSize:bevelThickness-2,bevelSegments=void 0!==options.bevelSegments?options.bevelSegments:3,bevelEnabled=void 0!==options.bevelEnabled?options.bevelEnabled:!0,curveSegments=void 0!==options.curveSegments?options.curveSegments:12,steps=void 0!==options.steps?options.steps:1,extrudePath=options.extrudePath,extrudeByPath=!1,material=options.material,extrudeMaterial=options.extrudeMaterial,uvgen=void 0!==options.UVGenerator?options.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb}extrudePath&&(extrudePts=extrudePath.getSpacedPoints(steps),extrudeByPath=!0,bevelEnabled=!1,splineTube=void 0!==options.frames?options.frames:new THREE.TubeGeometry.FrenetFrames(extrudePath,steps,!1),binormal=new THREE.Vector3,normal=new THREE.Vector3,position2=new THREE.Vector3),bevelEnabled||(bevelSegments=0,bevelThickness=0,bevelSize=0);var ahole,h,hl,scope=this,shapesOffset=this.vertices.length,shapePoints=shape.extractPoints(curveSegments),vertices=shapePoints.shape,holes=shapePoints.holes,reverse=!THREE.Shape.Utils.isClockWise(vertices);if(reverse){for(vertices=vertices.reverse(),h=0,hl=holes.length;hl>h;h++)ahole=holes[h],THREE.Shape.Utils.isClockWise(ahole)&&(holes[h]=ahole.reverse());reverse=!1}var faces=THREE.Shape.Utils.triangulateShape(vertices,holes),contour=vertices;for(h=0,hl=holes.length;hl>h;h++)ahole=holes[h],vertices=vertices.concat(ahole);for(var b,bs,t,z,vert,face,vlen=vertices.length,flen=faces.length,contourMovements=(contour.length,180/Math.PI,[]),i=0,il=contour.length,j=il-1,k=i+1;il>i;i++,j++,k++){j===il&&(j=0),k===il&&(k=0);{contour[i],contour[j],contour[k]}contourMovements[i]=getBevelVec(contour[i],contour[j],contour[k])}var oneHoleMovements,holesMovements=[],verticesMovements=contourMovements.concat();for(h=0,hl=holes.length;hl>h;h++){for(ahole=holes[h],oneHoleMovements=[],i=0,il=ahole.length,j=il-1,k=i+1;il>i;i++,j++,k++)j===il&&(j=0),k===il&&(k=0),oneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);holesMovements.push(oneHoleMovements),verticesMovements=verticesMovements.concat(oneHoleMovements)}for(b=0;bevelSegments>b;b++){for(t=b/bevelSegments,z=bevelThickness*(1-t),bs=bevelSize*Math.sin(t*Math.PI/2),i=0,il=contour.length;il>i;i++)vert=scalePt2(contour[i],contourMovements[i],bs),v(vert.x,vert.y,-z);for(h=0,hl=holes.length;hl>h;h++)for(ahole=holes[h],oneHoleMovements=holesMovements[h],i=0,il=ahole.length;il>i;i++)vert=scalePt2(ahole[i],oneHoleMovements[i],bs),v(vert.x,vert.y,-z)}for(bs=bevelSize,i=0;vlen>i;i++)vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i],extrudeByPath?(normal.copy(splineTube.normals[0]).multiplyScalar(vert.x),binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y),position2.copy(extrudePts[0]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(vert.x,vert.y,0);var s;for(s=1;steps>=s;s++)for(i=0;vlen>i;i++)vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i],extrudeByPath?(normal.copy(splineTube.normals[s]).multiplyScalar(vert.x),binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y),position2.copy(extrudePts[s]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(vert.x,vert.y,amount/steps*s);for(b=bevelSegments-1;b>=0;b--){for(t=b/bevelSegments,z=bevelThickness*(1-t),bs=bevelSize*Math.sin(t*Math.PI/2),i=0,il=contour.length;il>i;i++)vert=scalePt2(contour[i],contourMovements[i],bs),v(vert.x,vert.y,amount+z);for(h=0,hl=holes.length;hl>h;h++)for(ahole=holes[h],oneHoleMovements=holesMovements[h],i=0,il=ahole.length;il>i;i++)vert=scalePt2(ahole[i],oneHoleMovements[i],bs),extrudeByPath?v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z):v(vert.x,vert.y,amount+z)}buildLidFaces(),buildSideFaces()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC){var ax=geometry.vertices[indexA].x,ay=geometry.vertices[indexA].y,bx=geometry.vertices[indexB].x,by=geometry.vertices[indexB].y,cx=geometry.vertices[indexC].x,cy=geometry.vertices[indexC].y;return[new THREE.Vector2(ax,ay),new THREE.Vector2(bx,by),new THREE.Vector2(cx,cy)]},generateBottomUV:function(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC){return this.generateTopUV(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC)},generateSideWallUV:function(geometry,extrudedShape,wallContour,extrudeOptions,indexA,indexB,indexC,indexD){var ax=geometry.vertices[indexA].x,ay=geometry.vertices[indexA].y,az=geometry.vertices[indexA].z,bx=geometry.vertices[indexB].x,by=geometry.vertices[indexB].y,bz=geometry.vertices[indexB].z,cx=geometry.vertices[indexC].x,cy=geometry.vertices[indexC].y,cz=geometry.vertices[indexC].z,dx=geometry.vertices[indexD].x,dy=geometry.vertices[indexD].y,dz=geometry.vertices[indexD].z;return Math.abs(ay-by)<.01?[new THREE.Vector2(ax,1-az),new THREE.Vector2(bx,1-bz),new THREE.Vector2(cx,1-cz),new THREE.Vector2(dx,1-dz)]:[new THREE.Vector2(ay,1-az),new THREE.Vector2(by,1-bz),new THREE.Vector2(cy,1-cz),new THREE.Vector2(dy,1-dz)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(shapes,options){THREE.Geometry.call(this),shapes instanceof Array==!1&&(shapes=[shapes]),this.shapebb=shapes[shapes.length-1].getBoundingBox(),this.addShapeList(shapes,options),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(shapes,options){for(var i=0,l=shapes.length;l>i;i++)this.addShape(shapes[i],options);return this},THREE.ShapeGeometry.prototype.addShape=function(shape,options){void 0===options&&(options={});var i,l,hole,curveSegments=void 0!==options.curveSegments?options.curveSegments:12,material=options.material,uvgen=void 0===options.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:options.UVGenerator,shapesOffset=(this.shapebb,this.vertices.length),shapePoints=shape.extractPoints(curveSegments),vertices=shapePoints.shape,holes=shapePoints.holes,reverse=!THREE.Shape.Utils.isClockWise(vertices);if(reverse){for(vertices=vertices.reverse(),i=0,l=holes.length;l>i;i++)hole=holes[i],THREE.Shape.Utils.isClockWise(hole)&&(holes[i]=hole.reverse());reverse=!1}var faces=THREE.Shape.Utils.triangulateShape(vertices,holes),contour=vertices;for(i=0,l=holes.length;l>i;i++)hole=holes[i],vertices=vertices.concat(hole);{var vert,face,vlen=vertices.length,flen=faces.length;contour.length}for(i=0;vlen>i;i++)vert=vertices[i],this.vertices.push(new THREE.Vector3(vert.x,vert.y,0));for(i=0;flen>i;i++){face=faces[i];var a=face[0]+shapesOffset,b=face[1]+shapesOffset,c=face[2]+shapesOffset;this.faces.push(new THREE.Face3(a,b,c,null,null,material)),this.faceVertexUvs[0].push(uvgen.generateBottomUV(this,shape,options,a,b,c))}},THREE.LatheGeometry=function(points,segments,phiStart,phiLength){THREE.Geometry.call(this),segments=segments||12,phiStart=phiStart||0,phiLength=phiLength||2*Math.PI;
for(var inversePointLength=1/(points.length-1),inverseSegments=1/segments,i=0,il=segments;il>=i;i++)for(var phi=phiStart+i*inverseSegments*phiLength,c=Math.cos(phi),s=Math.sin(phi),j=0,jl=points.length;jl>j;j++){var pt=points[j],vertex=new THREE.Vector3;vertex.x=c*pt.x-s*pt.y,vertex.y=s*pt.x+c*pt.y,vertex.z=pt.z,this.vertices.push(vertex)}for(var np=points.length,i=0,il=segments;il>i;i++)for(var j=0,jl=points.length-1;jl>j;j++){var base=j+np*i,a=base,b=base+np,c=base+1+np,d=base+1,u0=i*inverseSegments,v0=j*inversePointLength,u1=u0+inverseSegments,v1=v0+inversePointLength;this.faces.push(new THREE.Face3(a,b,d)),this.faceVertexUvs[0].push([new THREE.Vector2(u0,v0),new THREE.Vector2(u1,v0),new THREE.Vector2(u0,v1)]),this.faces.push(new THREE.Face3(b,c,d)),this.faceVertexUvs[0].push([new THREE.Vector2(u1,v0),new THREE.Vector2(u1,v1),new THREE.Vector2(u0,v1)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(width,height,widthSegments,heightSegments){THREE.Geometry.call(this),this.width=width,this.height=height,this.widthSegments=widthSegments||1,this.heightSegments=heightSegments||1;var ix,iz,width_half=width/2,height_half=height/2,gridX=this.widthSegments,gridZ=this.heightSegments,gridX1=gridX+1,gridZ1=gridZ+1,segment_width=this.width/gridX,segment_height=this.height/gridZ,normal=new THREE.Vector3(0,0,1);for(iz=0;gridZ1>iz;iz++)for(ix=0;gridX1>ix;ix++){var x=ix*segment_width-width_half,y=iz*segment_height-height_half;this.vertices.push(new THREE.Vector3(x,-y,0))}for(iz=0;gridZ>iz;iz++)for(ix=0;gridX>ix;ix++){var a=ix+gridX1*iz,b=ix+gridX1*(iz+1),c=ix+1+gridX1*(iz+1),d=ix+1+gridX1*iz,uva=new THREE.Vector2(ix/gridX,1-iz/gridZ),uvb=new THREE.Vector2(ix/gridX,1-(iz+1)/gridZ),uvc=new THREE.Vector2((ix+1)/gridX,1-(iz+1)/gridZ),uvd=new THREE.Vector2((ix+1)/gridX,1-iz/gridZ),face=new THREE.Face3(a,b,d);face.normal.copy(normal),face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone()),this.faces.push(face),this.faceVertexUvs[0].push([uva,uvb,uvd]),face=new THREE.Face3(b,c,d),face.normal.copy(normal),face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone()),this.faces.push(face),this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){THREE.Geometry.call(this),innerRadius=innerRadius||0,outerRadius=outerRadius||50,thetaStart=void 0!==thetaStart?thetaStart:0,thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI,thetaSegments=void 0!==thetaSegments?Math.max(3,thetaSegments):8,phiSegments=void 0!==phiSegments?Math.max(3,phiSegments):8;var i,o,uvs=[],radius=innerRadius,radiusStep=(outerRadius-innerRadius)/phiSegments;for(i=0;phiSegments>=i;i++){for(o=0;thetaSegments>=o;o++){var vertex=new THREE.Vector3,segment=thetaStart+o/thetaSegments*thetaLength;vertex.x=radius*Math.cos(segment),vertex.y=radius*Math.sin(segment),this.vertices.push(vertex),uvs.push(new THREE.Vector2((vertex.x/radius+1)/2,-(vertex.y/radius+1)/2+1))}radius+=radiusStep}var n=new THREE.Vector3(0,0,1);for(i=0;phiSegments>i;i++){var thetaSegment=i*thetaSegments;for(o=0;thetaSegments>=o;o++){var segment=o+thetaSegment,v1=segment+i,v2=segment+thetaSegments+i,v3=segment+thetaSegments+1+i;this.faces.push(new THREE.Face3(v1,v2,v3,[n,n,n])),this.faceVertexUvs[0].push([uvs[v1],uvs[v2],uvs[v3]]),v1=segment+i,v2=segment+thetaSegments+1+i,v3=segment+1+i,this.faces.push(new THREE.Face3(v1,v2,v3,[n,n,n])),this.faceVertexUvs[0].push([uvs[v1],uvs[v2],uvs[v3]])}}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){THREE.Geometry.call(this),this.radius=radius=radius||50,this.widthSegments=widthSegments=Math.max(3,Math.floor(widthSegments)||8),this.heightSegments=heightSegments=Math.max(2,Math.floor(heightSegments)||6),this.phiStart=phiStart=void 0!==phiStart?phiStart:0,this.phiLength=phiLength=void 0!==phiLength?phiLength:2*Math.PI,this.thetaStart=thetaStart=void 0!==thetaStart?thetaStart:0,this.thetaLength=thetaLength=void 0!==thetaLength?thetaLength:Math.PI;var x,y,vertices=[],uvs=[];for(y=0;heightSegments>=y;y++){var verticesRow=[],uvsRow=[];for(x=0;widthSegments>=x;x++){var u=x/widthSegments,v=y/heightSegments,vertex=new THREE.Vector3;vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength),vertex.y=radius*Math.cos(thetaStart+v*thetaLength),vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength),this.vertices.push(vertex),verticesRow.push(this.vertices.length-1),uvsRow.push(new THREE.Vector2(u,1-v))}vertices.push(verticesRow),uvs.push(uvsRow)}for(y=0;y<this.heightSegments;y++)for(x=0;x<this.widthSegments;x++){var v1=vertices[y][x+1],v2=vertices[y][x],v3=vertices[y+1][x],v4=vertices[y+1][x+1],n1=this.vertices[v1].clone().normalize(),n2=this.vertices[v2].clone().normalize(),n3=this.vertices[v3].clone().normalize(),n4=this.vertices[v4].clone().normalize(),uv1=uvs[y][x+1].clone(),uv2=uvs[y][x].clone(),uv3=uvs[y+1][x].clone(),uv4=uvs[y+1][x+1].clone();Math.abs(this.vertices[v1].y)===this.radius?(this.faces.push(new THREE.Face3(v1,v3,v4,[n1,n3,n4])),this.faceVertexUvs[0].push([uv1,uv3,uv4])):Math.abs(this.vertices[v3].y)===this.radius?(this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3])),this.faceVertexUvs[0].push([uv1,uv2,uv3])):(this.faces.push(new THREE.Face3(v1,v2,v4,[n1,n2,n4])),this.faceVertexUvs[0].push([uv1,uv2,uv4]),this.faces.push(new THREE.Face3(v2,v3,v4,[n2,n3,n4])),this.faceVertexUvs[0].push([uv2.clone(),uv3,uv4.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(text,parameters){parameters=parameters||{};var textShapes=THREE.FontUtils.generateShapes(text,parameters);parameters.amount=void 0!==parameters.height?parameters.height:50,void 0===parameters.bevelThickness&&(parameters.bevelThickness=10),void 0===parameters.bevelSize&&(parameters.bevelSize=8),void 0===parameters.bevelEnabled&&(parameters.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,textShapes,parameters)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(radius,tube,radialSegments,tubularSegments,arc){THREE.Geometry.call(this);this.radius=radius||100,this.tube=tube||40,this.radialSegments=radialSegments||8,this.tubularSegments=tubularSegments||6,this.arc=arc||2*Math.PI;for(var center=new THREE.Vector3,uvs=[],normals=[],j=0;j<=this.radialSegments;j++)for(var i=0;i<=this.tubularSegments;i++){var u=i/this.tubularSegments*this.arc,v=j/this.radialSegments*Math.PI*2;center.x=this.radius*Math.cos(u),center.y=this.radius*Math.sin(u);var vertex=new THREE.Vector3;vertex.x=(this.radius+this.tube*Math.cos(v))*Math.cos(u),vertex.y=(this.radius+this.tube*Math.cos(v))*Math.sin(u),vertex.z=this.tube*Math.sin(v),this.vertices.push(vertex),uvs.push(new THREE.Vector2(i/this.tubularSegments,j/this.radialSegments)),normals.push(vertex.clone().sub(center).normalize())}for(var j=1;j<=this.radialSegments;j++)for(var i=1;i<=this.tubularSegments;i++){var a=(this.tubularSegments+1)*j+i-1,b=(this.tubularSegments+1)*(j-1)+i-1,c=(this.tubularSegments+1)*(j-1)+i,d=(this.tubularSegments+1)*j+i,face=new THREE.Face3(a,b,d,[normals[a],normals[b],normals[d]]);face.normal.add(normals[a]),face.normal.add(normals[b]),face.normal.add(normals[d]),face.normal.normalize(),this.faces.push(face),this.faceVertexUvs[0].push([uvs[a].clone(),uvs[b].clone(),uvs[d].clone()]),face=new THREE.Face3(b,c,d,[normals[b],normals[c],normals[d]]),face.normal.add(normals[b]),face.normal.add(normals[c]),face.normal.add(normals[d]),face.normal.normalize(),this.faces.push(face),this.faceVertexUvs[0].push([uvs[b].clone(),uvs[c].clone(),uvs[d].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(radius,tube,radialSegments,tubularSegments,p,q,heightScale){function getPos(u,in_q,in_p,radius,heightScale){var cu=Math.cos(u),su=Math.sin(u),quOverP=in_q/in_p*u,cs=Math.cos(quOverP),tx=radius*(2+cs)*.5*cu,ty=radius*(2+cs)*su*.5,tz=heightScale*radius*Math.sin(quOverP)*.5;return new THREE.Vector3(tx,ty,tz)}THREE.Geometry.call(this);var scope=this;this.radius=radius||100,this.tube=tube||40,this.radialSegments=radialSegments||64,this.tubularSegments=tubularSegments||8,this.p=p||2,this.q=q||3,this.heightScale=heightScale||1,this.grid=new Array(this.radialSegments);for(var tang=new THREE.Vector3,n=new THREE.Vector3,bitan=new THREE.Vector3,i=0;i<this.radialSegments;++i){this.grid[i]=new Array(this.tubularSegments);var u=i/this.radialSegments*2*this.p*Math.PI,p1=getPos(u,this.q,this.p,this.radius,this.heightScale),p2=getPos(u+.01,this.q,this.p,this.radius,this.heightScale);tang.subVectors(p2,p1),n.addVectors(p2,p1),bitan.crossVectors(tang,n),n.crossVectors(bitan,tang),bitan.normalize(),n.normalize();for(var j=0;j<this.tubularSegments;++j){var v=j/this.tubularSegments*2*Math.PI,cx=-this.tube*Math.cos(v),cy=this.tube*Math.sin(v),pos=new THREE.Vector3;pos.x=p1.x+cx*n.x+cy*bitan.x,pos.y=p1.y+cx*n.y+cy*bitan.y,pos.z=p1.z+cx*n.z+cy*bitan.z,this.grid[i][j]=scope.vertices.push(pos)-1}}for(var i=0;i<this.radialSegments;++i)for(var j=0;j<this.tubularSegments;++j){var ip=(i+1)%this.radialSegments,jp=(j+1)%this.tubularSegments,a=this.grid[i][j],b=this.grid[ip][j],c=this.grid[ip][jp],d=this.grid[i][jp],uva=new THREE.Vector2(i/this.radialSegments,j/this.tubularSegments),uvb=new THREE.Vector2((i+1)/this.radialSegments,j/this.tubularSegments),uvc=new THREE.Vector2((i+1)/this.radialSegments,(j+1)/this.tubularSegments),uvd=new THREE.Vector2(i/this.radialSegments,(j+1)/this.tubularSegments);this.faces.push(new THREE.Face3(a,b,d)),this.faceVertexUvs[0].push([uva,uvb,uvd]),this.faces.push(new THREE.Face3(b,c,d)),this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(path,segments,radius,radialSegments,closed){function vert(x,y,z){return scope.vertices.push(new THREE.Vector3(x,y,z))-1}THREE.Geometry.call(this),this.path=path,this.segments=segments||64,this.radius=radius||1,this.radialSegments=radialSegments||8,this.closed=closed||!1,this.grid=[];var tangent,normal,binormal,u,v,cx,cy,pos,i,j,ip,jp,a,b,c,d,uva,uvb,uvc,uvd,scope=this,numpoints=this.segments+1,pos2=new THREE.Vector3,frames=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),tangents=frames.tangents,normals=frames.normals,binormals=frames.binormals;for(this.tangents=tangents,this.normals=normals,this.binormals=binormals,i=0;numpoints>i;i++)for(this.grid[i]=[],u=i/(numpoints-1),pos=path.getPointAt(u),tangent=tangents[i],normal=normals[i],binormal=binormals[i],j=0;j<this.radialSegments;j++)v=j/this.radialSegments*2*Math.PI,cx=-this.radius*Math.cos(v),cy=this.radius*Math.sin(v),pos2.copy(pos),pos2.x+=cx*normal.x+cy*binormal.x,pos2.y+=cx*normal.y+cy*binormal.y,pos2.z+=cx*normal.z+cy*binormal.z,this.grid[i][j]=vert(pos2.x,pos2.y,pos2.z);for(i=0;i<this.segments;i++)for(j=0;j<this.radialSegments;j++)ip=this.closed?(i+1)%this.segments:i+1,jp=(j+1)%this.radialSegments,a=this.grid[i][j],b=this.grid[ip][j],c=this.grid[ip][jp],d=this.grid[i][jp],uva=new THREE.Vector2(i/this.segments,j/this.radialSegments),uvb=new THREE.Vector2((i+1)/this.segments,j/this.radialSegments),uvc=new THREE.Vector2((i+1)/this.segments,(j+1)/this.radialSegments),uvd=new THREE.Vector2(i/this.segments,(j+1)/this.radialSegments),this.faces.push(new THREE.Face3(a,b,d)),this.faceVertexUvs[0].push([uva,uvb,uvd]),this.faces.push(new THREE.Face3(b,c,d)),this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(path,segments,closed){function initialNormal3(){normals[0]=new THREE.Vector3,binormals[0]=new THREE.Vector3,smallest=Number.MAX_VALUE,tx=Math.abs(tangents[0].x),ty=Math.abs(tangents[0].y),tz=Math.abs(tangents[0].z),smallest>=tx&&(smallest=tx,normal.set(1,0,0)),smallest>=ty&&(smallest=ty,normal.set(0,1,0)),smallest>=tz&&normal.set(0,0,1),vec.crossVectors(tangents[0],normal).normalize(),normals[0].crossVectors(tangents[0],vec),binormals[0].crossVectors(tangents[0],normals[0])}var theta,smallest,tx,ty,tz,i,u,normal=(new THREE.Vector3,new THREE.Vector3),tangents=(new THREE.Vector3,[]),normals=[],binormals=[],vec=new THREE.Vector3,mat=new THREE.Matrix4,numpoints=segments+1,epsilon=1e-4;for(this.tangents=tangents,this.normals=normals,this.binormals=binormals,i=0;numpoints>i;i++)u=i/(numpoints-1),tangents[i]=path.getTangentAt(u),tangents[i].normalize();for(initialNormal3(),i=1;numpoints>i;i++)normals[i]=normals[i-1].clone(),binormals[i]=binormals[i-1].clone(),vec.crossVectors(tangents[i-1],tangents[i]),vec.length()>epsilon&&(vec.normalize(),theta=Math.acos(THREE.Math.clamp(tangents[i-1].dot(tangents[i]),-1,1)),normals[i].applyMatrix4(mat.makeRotationAxis(vec,theta))),binormals[i].crossVectors(tangents[i],normals[i]);if(closed)for(theta=Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints-1]),-1,1)),theta/=numpoints-1,tangents[0].dot(vec.crossVectors(normals[0],normals[numpoints-1]))>0&&(theta=-theta),i=1;numpoints>i;i++)normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i)),binormals[i].crossVectors(tangents[i],normals[i])},THREE.PolyhedronGeometry=function(vertices,faces,radius,detail){function prepare(vector){var vertex=vector.normalize().clone();vertex.index=that.vertices.push(vertex)-1;var u=azimuth(vector)/2/Math.PI+.5,v=inclination(vector)/Math.PI+.5;return vertex.uv=new THREE.Vector2(u,1-v),vertex}function make(v1,v2,v3){var face=new THREE.Face3(v1.index,v2.index,v3.index,[v1.clone(),v2.clone(),v3.clone()]);face.centroid.add(v1).add(v2).add(v3).divideScalar(3),that.faces.push(face);var azi=azimuth(face.centroid);that.faceVertexUvs[0].push([correctUV(v1.uv,v1,azi),correctUV(v2.uv,v2,azi),correctUV(v3.uv,v3,azi)])}function subdivide(face,detail){for(var cols=Math.pow(2,detail),a=(Math.pow(4,detail),prepare(that.vertices[face.a])),b=prepare(that.vertices[face.b]),c=prepare(that.vertices[face.c]),v=[],i=0;cols>=i;i++){v[i]=[];for(var aj=prepare(a.clone().lerp(c,i/cols)),bj=prepare(b.clone().lerp(c,i/cols)),rows=cols-i,j=0;rows>=j;j++)v[i][j]=0==j&&i==cols?aj:prepare(aj.clone().lerp(bj,j/rows))}for(var i=0;cols>i;i++)for(var j=0;2*(cols-i)-1>j;j++){var k=Math.floor(j/2);j%2==0?make(v[i][k+1],v[i+1][k],v[i][k]):make(v[i][k+1],v[i+1][k+1],v[i+1][k])}}function azimuth(vector){return Math.atan2(vector.z,-vector.x)}function inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z))}function correctUV(uv,vector,azimuth){return 0>azimuth&&1===uv.x&&(uv=new THREE.Vector2(uv.x-1,uv.y)),0===vector.x&&0===vector.z&&(uv=new THREE.Vector2(azimuth/2/Math.PI+.5,uv.y)),uv.clone()}THREE.Geometry.call(this),radius=radius||1,detail=detail||0;for(var that=this,i=0,l=vertices.length;l>i;i++)prepare(new THREE.Vector3(vertices[i][0],vertices[i][1],vertices[i][2]));for(var p=this.vertices,f=[],i=0,l=faces.length;l>i;i++){var v1=p[faces[i][0]],v2=p[faces[i][1]],v3=p[faces[i][2]];f[i]=new THREE.Face3(v1.index,v2.index,v3.index,[v1.clone(),v2.clone(),v3.clone()])}for(var i=0,l=f.length;l>i;i++)subdivide(f[i],detail);for(var i=0,l=this.faceVertexUvs[0].length;l>i;i++){var uvs=this.faceVertexUvs[0][i],x0=uvs[0].x,x1=uvs[1].x,x2=uvs[2].x,max=Math.max(x0,Math.max(x1,x2)),min=Math.min(x0,Math.min(x1,x2));max>.9&&.1>min&&(.2>x0&&(uvs[0].x+=1),.2>x1&&(uvs[1].x+=1),.2>x2&&(uvs[2].x+=1))}for(var i=0,l=this.vertices.length;l>i;i++)this.vertices[i].multiplyScalar(radius);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(radius,detail){this.radius=radius,this.detail=detail;var t=(1+Math.sqrt(5))/2,vertices=[[-1,t,0],[1,t,0],[-1,-t,0],[1,-t,0],[0,-1,t],[0,1,t],[0,-1,-t],[0,1,-t],[t,0,-1],[t,0,1],[-t,0,-1],[-t,0,1]],faces=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(radius,detail){var vertices=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],faces=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(radius,detail){var vertices=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],faces=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(func,slices,stacks){THREE.Geometry.call(this);var i,j,p,u,v,verts=this.vertices,faces=this.faces,uvs=this.faceVertexUvs[0],sliceCount=slices+1;for(i=0;stacks>=i;i++)for(v=i/stacks,j=0;slices>=j;j++)u=j/slices,p=func(u,v),verts.push(p);var a,b,c,d,uva,uvb,uvc,uvd;for(i=0;stacks>i;i++)for(j=0;slices>j;j++)a=i*sliceCount+j,b=i*sliceCount+j+1,c=(i+1)*sliceCount+j+1,d=(i+1)*sliceCount+j,uva=new THREE.Vector2(j/slices,i/stacks),uvb=new THREE.Vector2((j+1)/slices,i/stacks),uvc=new THREE.Vector2((j+1)/slices,(i+1)/stacks),uvd=new THREE.Vector2(j/slices,(i+1)/stacks),faces.push(new THREE.Face3(a,b,d)),uvs.push([uva,uvb,uvd]),faces.push(new THREE.Face3(b,c,d)),uvs.push([uvb.clone(),uvc,uvd.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(size){size=size||1;var geometry=new THREE.Geometry;geometry.vertices.push(new THREE.Vector3,new THREE.Vector3(size,0,0),new THREE.Vector3,new THREE.Vector3(0,size,0),new THREE.Vector3,new THREE.Vector3(0,0,size)),geometry.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,geometry,material,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(dir,origin,length,hex){THREE.Object3D.call(this),void 0===hex&&(hex=16776960),void 0===length&&(length=1),this.position=origin;var lineGeometry=new THREE.Geometry;lineGeometry.vertices.push(new THREE.Vector3(0,0,0)),lineGeometry.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(lineGeometry,new THREE.LineBasicMaterial({color:hex})),this.line.matrixAutoUpdate=!1,this.add(this.line);var coneGeometry=new THREE.CylinderGeometry(0,.05,.25,5,1);coneGeometry.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0)),this.cone=new THREE.Mesh(coneGeometry,new THREE.MeshBasicMaterial({color:hex})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(dir),this.setLength(length)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var radians,axis=new THREE.Vector3;return function(dir){dir.y>.99999?this.quaternion.set(0,0,0,1):dir.y<-.99999?this.quaternion.set(1,0,0,0):(axis.set(dir.z,0,-dir.x).normalize(),radians=Math.acos(dir.y),this.quaternion.setFromAxisAngle(axis,radians))}}(),THREE.ArrowHelper.prototype.setLength=function(length){this.scale.set(length,length,length)},THREE.ArrowHelper.prototype.setColor=function(hex){this.line.material.color.setHex(hex),this.cone.material.color.setHex(hex)},THREE.BoxHelper=function(object){var vertices=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=vertices;var geometry=new THREE.Geometry;geometry.vertices.push(vertices[0],vertices[1],vertices[1],vertices[2],vertices[2],vertices[3],vertices[3],vertices[0],vertices[4],vertices[5],vertices[5],vertices[6],vertices[6],vertices[7],vertices[7],vertices[4],vertices[0],vertices[4],vertices[1],vertices[5],vertices[2],vertices[6],vertices[3],vertices[7]),THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==object&&this.update(object)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(object){var geometry=object.geometry;null===geometry.boundingBox&&geometry.computeBoundingBox();var min=geometry.boundingBox.min,max=geometry.boundingBox.max,vertices=this.vertices;vertices[0].set(max.x,max.y,max.z),vertices[1].set(min.x,max.y,max.z),vertices[2].set(min.x,min.y,max.z),vertices[3].set(max.x,min.y,max.z),vertices[4].set(max.x,max.y,min.z),vertices[5].set(min.x,max.y,min.z),vertices[6].set(min.x,min.y,min.z),vertices[7].set(max.x,min.y,min.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=object.matrixWorld},THREE.BoundingBoxHelper=function(object,hex){var color=hex||8947848;this.object=object,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:color,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(camera){function addLine(a,b,hex){addPoint(a,hex),addPoint(b,hex)}function addPoint(id,hex){geometry.vertices.push(new THREE.Vector3),geometry.colors.push(new THREE.Color(hex)),void 0===pointMap[id]&&(pointMap[id]=[]),pointMap[id].push(geometry.vertices.length-1)}var geometry=new THREE.Geometry,material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),pointMap={},hexFrustum=16755200,hexCone=16711680,hexUp=43775,hexTarget=16777215,hexCross=3355443;addLine("n1","n2",hexFrustum),addLine("n2","n4",hexFrustum),addLine("n4","n3",hexFrustum),addLine("n3","n1",hexFrustum),addLine("f1","f2",hexFrustum),addLine("f2","f4",hexFrustum),addLine("f4","f3",hexFrustum),addLine("f3","f1",hexFrustum),addLine("n1","f1",hexFrustum),addLine("n2","f2",hexFrustum),addLine("n3","f3",hexFrustum),addLine("n4","f4",hexFrustum),addLine("p","n1",hexCone),addLine("p","n2",hexCone),addLine("p","n3",hexCone),addLine("p","n4",hexCone),addLine("u1","u2",hexUp),addLine("u2","u3",hexUp),addLine("u3","u1",hexUp),addLine("c","t",hexTarget),addLine("p","c",hexCross),addLine("cn1","cn2",hexCross),addLine("cn3","cn4",hexCross),addLine("cf1","cf2",hexCross),addLine("cf3","cf4",hexCross),THREE.Line.call(this,geometry,material,THREE.LinePieces),this.camera=camera,this.matrixWorld=camera.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=pointMap,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var vector=new THREE.Vector3,camera=new THREE.Camera,projector=new THREE.Projector;return function(){function setPoint(point,x,y,z){vector.set(x,y,z),projector.unprojectVector(vector,camera);var points=scope.pointMap[point];if(void 0!==points)for(var i=0,il=points.length;il>i;i++)scope.geometry.vertices[points[i]].copy(vector)}var scope=this,w=1,h=1;camera.projectionMatrix.copy(this.camera.projectionMatrix),setPoint("c",0,0,-1),setPoint("t",0,0,1),setPoint("n1",-w,-h,-1),setPoint("n2",w,-h,-1),setPoint("n3",-w,h,-1),setPoint("n4",w,h,-1),setPoint("f1",-w,-h,1),setPoint("f2",w,-h,1),setPoint("f3",-w,h,1),setPoint("f4",w,h,1),setPoint("u1",.7*w,1.1*h,-1),setPoint("u2",.7*-w,1.1*h,-1),setPoint("u3",0,2*h,-1),setPoint("cf1",-w,0,1),setPoint("cf2",w,0,1),setPoint("cf3",0,-h,1),setPoint("cf4",0,h,1),setPoint("cn1",-w,0,-1),setPoint("cn2",w,0,-1),setPoint("cn3",0,-h,-1),setPoint("cn4",0,h,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(light,size){THREE.Object3D.call(this),this.light=light,this.light.updateMatrixWorld(),this.matrixWorld=light.matrixWorld,this.matrixAutoUpdate=!1;var geometry=new THREE.PlaneGeometry(size,size),material=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(geometry,material),this.add(this.lightPlane),geometry=new THREE.Geometry,geometry.vertices.push(new THREE.Vector3),geometry.vertices.push(new THREE.Vector3),geometry.computeLineDistances(),material=new THREE.LineBasicMaterial({fog:!1}),material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(geometry,material),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var vector=new THREE.Vector3;return function(){vector.getPositionFromMatrix(this.light.matrixWorld).negate(),this.lightPlane.lookAt(vector),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(vector),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.FaceNormalsHelper=function(object,size,hex,linewidth){this.object=object,this.size=size||1;for(var color=hex||16776960,width=linewidth||1,geometry=new THREE.Geometry,faces=this.object.geometry.faces,i=0,l=faces.length;l>i;i++)geometry.vertices.push(new THREE.Vector3),geometry.vertices.push(new THREE.Vector3);THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var v1=new THREE.Vector3;return function(){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var vertices=this.geometry.vertices,faces=this.object.geometry.faces,worldMatrix=this.object.matrixWorld,i=0,l=faces.length;l>i;i++){var face=faces[i];v1.copy(face.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var idx=2*i;vertices[idx].copy(face.centroid).applyMatrix4(worldMatrix),vertices[idx+1].addVectors(vertices[idx],v1)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(size,step){var geometry=new THREE.Geometry,material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var i=-size;size>=i;i+=step){geometry.vertices.push(new THREE.Vector3(-size,0,i),new THREE.Vector3(size,0,i),new THREE.Vector3(i,0,-size),new THREE.Vector3(i,0,size));var color=0===i?this.color1:this.color2;geometry.colors.push(color,color,color,color)}THREE.Line.call(this,geometry,material,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(colorCenterLine,colorGrid){this.color1.set(colorCenterLine),this.color2.set(colorGrid),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(light,sphereSize){THREE.Object3D.call(this),this.light=light,this.light.updateMatrixWorld(),this.matrixWorld=light.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var geometry=new THREE.SphereGeometry(sphereSize,4,2);geometry.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var i=0,il=8;il>i;i++)geometry.faces[i].color=this.colors[4>i?0:1];var material=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(geometry,material),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var vector=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(vector.getPositionFromMatrix(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(light,sphereSize){this.light=light,this.light.updateMatrixWorld();var geometry=new THREE.SphereGeometry(sphereSize,4,2),material=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});material.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,geometry,material),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(light){THREE.Object3D.call(this),this.light=light,this.light.updateMatrixWorld(),this.matrixWorld=light.matrixWorld,this.matrixAutoUpdate=!1;var geometry=new THREE.CylinderGeometry(0,1,1,8,1,!0);geometry.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),geometry.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var material=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(geometry,material),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var vector=new THREE.Vector3,vector2=new THREE.Vector3;return function(){var coneLength=this.light.distance?this.light.distance:1e4,coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength),vector.getPositionFromMatrix(this.light.matrixWorld),vector2.getPositionFromMatrix(this.light.target.matrixWorld),this.cone.lookAt(vector2.sub(vector)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(object,size,hex,linewidth){this.object=object,this.size=size||1;for(var color=hex||16711680,width=linewidth||1,geometry=new THREE.Geometry,faces=(object.geometry.vertices,object.geometry.faces),i=0,l=faces.length;l>i;i++)for(var face=faces[i],j=0,jl=face.vertexNormals.length;jl>j;j++)geometry.vertices.push(new THREE.Vector3),geometry.vertices.push(new THREE.Vector3);THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(){var v1=new THREE.Vector3;
return function(){var keys=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var vertices=this.geometry.vertices,verts=this.object.geometry.vertices,faces=this.object.geometry.faces,worldMatrix=this.object.matrixWorld,idx=0,i=0,l=faces.length;l>i;i++)for(var face=faces[i],j=0,jl=face.vertexNormals.length;jl>j;j++){var vertexId=face[keys[j]],vertex=verts[vertexId],normal=face.vertexNormals[j];vertices[idx].copy(vertex).applyMatrix4(worldMatrix),v1.copy(normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),v1.add(vertices[idx]),idx+=1,vertices[idx].copy(v1),idx+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(object,size,hex,linewidth){this.object=object,this.size=size||1;for(var color=hex||255,width=linewidth||1,geometry=new THREE.Geometry,faces=(object.geometry.vertices,object.geometry.faces),i=0,l=faces.length;l>i;i++)for(var face=faces[i],j=0,jl=face.vertexTangents.length;jl>j;j++)geometry.vertices.push(new THREE.Vector3),geometry.vertices.push(new THREE.Vector3);THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(){var v1=new THREE.Vector3;return function(){var keys=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var vertices=this.geometry.vertices,verts=this.object.geometry.vertices,faces=this.object.geometry.faces,worldMatrix=this.object.matrixWorld,idx=0,i=0,l=faces.length;l>i;i++)for(var face=faces[i],j=0,jl=face.vertexTangents.length;jl>j;j++){var vertexId=face[keys[j]],vertex=verts[vertexId],tangent=face.vertexTangents[j];vertices[idx].copy(vertex).applyMatrix4(worldMatrix),v1.copy(tangent).transformDirection(worldMatrix).multiplyScalar(this.size),v1.add(vertices[idx]),idx+=1,vertices[idx].copy(v1),idx+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(object){for(var edge=[0,0],hash={},sortFunction=function(a,b){return a-b},keys=["a","b","c","d"],geometry=new THREE.Geometry,vertices=object.geometry.vertices,faces=object.geometry.faces,i=0,l=faces.length;l>i;i++)for(var face=faces[i],j=0;3>j;j++){edge[0]=face[keys[j]],edge[1]=face[keys[(j+1)%3]],edge.sort(sortFunction);var key=edge.toString();void 0===hash[key]&&(geometry.vertices.push(vertices[edge[0]]),geometry.vertices.push(vertices[edge[1]]),hash[key]=!0)}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=object.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(texture,size,distance,blending,color){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==texture&&this.add(texture,size,distance,blending,color)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(texture,size,distance,blending,color,opacity){void 0===size&&(size=-1),void 0===distance&&(distance=0),void 0===opacity&&(opacity=1),void 0===color&&(color=new THREE.Color(16777215)),void 0===blending&&(blending=THREE.NormalBlending),distance=Math.min(distance,Math.max(0,distance)),this.lensFlares.push({texture:texture,size:size,distance:distance,x:0,y:0,z:0,scale:1,rotation:1,opacity:opacity,color:color,blending:blending})},THREE.LensFlare.prototype.updateLensFlares=function(){var f,flare,fl=this.lensFlares.length,vecX=2*-this.positionScreen.x,vecY=2*-this.positionScreen.y;for(f=0;fl>f;f++)flare=this.lensFlares[f],flare.x=this.positionScreen.x+vecX*flare.distance,flare.y=this.positionScreen.y+vecY*flare.distance,flare.wantedRotation=flare.x*Math.PI*.25,flare.rotation+=.25*(flare.wantedRotation-flare.rotation)},THREE.MorphBlendMesh=function(geometry,material){THREE.Mesh.call(this,geometry,material),this.animationsMap={},this.animationsList=[];var numFrames=this.geometry.morphTargets.length,name="__default",startFrame=0,endFrame=numFrames-1,fps=numFrames/1;this.createAnimation(name,startFrame,endFrame,fps),this.setAnimationWeight(name,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(name,start,end,fps){var animation={startFrame:start,endFrame:end,length:end-start+1,fps:fps,duration:(end-start)/fps,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[name]=animation,this.animationsList.push(animation)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(fps){for(var firstAnimation,pattern=/([a-z]+)(\d+)/,frameRanges={},geometry=this.geometry,i=0,il=geometry.morphTargets.length;il>i;i++){var morph=geometry.morphTargets[i],chunks=morph.name.match(pattern);if(chunks&&chunks.length>1){{var name=chunks[1];chunks[2]}frameRanges[name]||(frameRanges[name]={start:1/0,end:-1/0});var range=frameRanges[name];i<range.start&&(range.start=i),i>range.end&&(range.end=i),firstAnimation||(firstAnimation=name)}}for(var name in frameRanges){var range=frameRanges[name];this.createAnimation(name,range.start,range.end,fps)}this.firstAnimation=firstAnimation},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(name){var animation=this.animationsMap[name];animation&&(animation.direction=1,animation.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(name){var animation=this.animationsMap[name];animation&&(animation.direction=-1,animation.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(name,fps){var animation=this.animationsMap[name];animation&&(animation.fps=fps,animation.duration=(animation.end-animation.start)/animation.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(name,duration){var animation=this.animationsMap[name];animation&&(animation.duration=duration,animation.fps=(animation.end-animation.start)/animation.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(name,weight){var animation=this.animationsMap[name];animation&&(animation.weight=weight)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(name,time){var animation=this.animationsMap[name];animation&&(animation.time=time)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(name){var time=0,animation=this.animationsMap[name];return animation&&(time=animation.time),time},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(name){var duration=-1,animation=this.animationsMap[name];return animation&&(duration=animation.duration),duration},THREE.MorphBlendMesh.prototype.playAnimation=function(name){var animation=this.animationsMap[name];animation?(animation.time=0,animation.active=!0):console.warn("animation["+name+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(name){var animation=this.animationsMap[name];animation&&(animation.active=!1)},THREE.MorphBlendMesh.prototype.update=function(delta){for(var i=0,il=this.animationsList.length;il>i;i++){var animation=this.animationsList[i];if(animation.active){var frameTime=animation.duration/animation.length;animation.time+=animation.direction*delta,animation.mirroredLoop?(animation.time>animation.duration||animation.time<0)&&(animation.direction*=-1,animation.time>animation.duration&&(animation.time=animation.duration,animation.directionBackwards=!0),animation.time<0&&(animation.time=0,animation.directionBackwards=!1)):(animation.time=animation.time%animation.duration,animation.time<0&&(animation.time+=animation.duration));var keyframe=animation.startFrame+THREE.Math.clamp(Math.floor(animation.time/frameTime),0,animation.length-1),weight=animation.weight;keyframe!==animation.currentFrame&&(this.morphTargetInfluences[animation.lastFrame]=0,this.morphTargetInfluences[animation.currentFrame]=1*weight,this.morphTargetInfluences[keyframe]=0,animation.lastFrame=animation.currentFrame,animation.currentFrame=keyframe);var mix=animation.time%frameTime/frameTime;animation.directionBackwards&&(mix=1-mix),this.morphTargetInfluences[animation.currentFrame]=mix*weight,this.morphTargetInfluences[animation.lastFrame]=(1-mix)*weight}}},THREE.LensFlarePlugin=function(){function createProgram(shader,precision){var program=_gl.createProgram(),fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER),vertexShader=_gl.createShader(_gl.VERTEX_SHADER),prefix="precision "+precision+" float;\n";return _gl.shaderSource(fragmentShader,prefix+shader.fragmentShader),_gl.shaderSource(vertexShader,prefix+shader.vertexShader),_gl.compileShader(fragmentShader),_gl.compileShader(vertexShader),_gl.attachShader(program,fragmentShader),_gl.attachShader(program,vertexShader),_gl.linkProgram(program),program}var _gl,_renderer,_precision,_lensFlare={};this.init=function(renderer){_gl=renderer.context,_renderer=renderer,_precision=renderer.getPrecision(),_lensFlare.vertices=new Float32Array(16),_lensFlare.faces=new Uint16Array(6);var i=0;_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=1,i=0,_lensFlare.faces[i++]=0,_lensFlare.faces[i++]=1,_lensFlare.faces[i++]=2,_lensFlare.faces[i++]=0,_lensFlare.faces[i++]=2,_lensFlare.faces[i++]=3,_lensFlare.vertexBuffer=_gl.createBuffer(),_lensFlare.elementBuffer=_gl.createBuffer(),_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,_lensFlare.vertices,_gl.STATIC_DRAW),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.faces,_gl.STATIC_DRAW),_lensFlare.tempTexture=_gl.createTexture(),_lensFlare.occlusionTexture=_gl.createTexture(),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture),_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGB,16,16,0,_gl.RGB,_gl.UNSIGNED_BYTE,null),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture),_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,16,16,0,_gl.RGBA,_gl.UNSIGNED_BYTE,null),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST),_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(_lensFlare.hasVertexTexture=!1,_lensFlare.program=createProgram(THREE.ShaderFlares.lensFlare,_precision)):(_lensFlare.hasVertexTexture=!0,_lensFlare.program=createProgram(THREE.ShaderFlares.lensFlareVertexTexture,_precision)),_lensFlare.attributes={},_lensFlare.uniforms={},_lensFlare.attributes.vertex=_gl.getAttribLocation(_lensFlare.program,"position"),_lensFlare.attributes.uv=_gl.getAttribLocation(_lensFlare.program,"uv"),_lensFlare.uniforms.renderType=_gl.getUniformLocation(_lensFlare.program,"renderType"),_lensFlare.uniforms.map=_gl.getUniformLocation(_lensFlare.program,"map"),_lensFlare.uniforms.occlusionMap=_gl.getUniformLocation(_lensFlare.program,"occlusionMap"),_lensFlare.uniforms.opacity=_gl.getUniformLocation(_lensFlare.program,"opacity"),_lensFlare.uniforms.color=_gl.getUniformLocation(_lensFlare.program,"color"),_lensFlare.uniforms.scale=_gl.getUniformLocation(_lensFlare.program,"scale"),_lensFlare.uniforms.rotation=_gl.getUniformLocation(_lensFlare.program,"rotation"),_lensFlare.uniforms.screenPosition=_gl.getUniformLocation(_lensFlare.program,"screenPosition")},this.render=function(scene,camera,viewportWidth,viewportHeight){var flares=scene.__webglFlares,nFlares=flares.length;if(nFlares){var tempPosition=new THREE.Vector3,invAspect=viewportHeight/viewportWidth,halfViewportWidth=.5*viewportWidth,halfViewportHeight=.5*viewportHeight,size=16/viewportHeight,scale=new THREE.Vector2(size*invAspect,size),screenPosition=new THREE.Vector3(1,1,0),screenPositionPixels=new THREE.Vector2(1,1),uniforms=_lensFlare.uniforms,attributes=_lensFlare.attributes;_gl.useProgram(_lensFlare.program),_gl.enableVertexAttribArray(_lensFlare.attributes.vertex),_gl.enableVertexAttribArray(_lensFlare.attributes.uv),_gl.uniform1i(uniforms.occlusionMap,0),_gl.uniform1i(uniforms.map,1),_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer),_gl.vertexAttribPointer(attributes.vertex,2,_gl.FLOAT,!1,16,0),_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,!1,16,8),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer),_gl.disable(_gl.CULL_FACE),_gl.depthMask(!1);var i,j,jl,flare,sprite;for(i=0;nFlares>i;i++)if(size=16/viewportHeight,scale.set(size*invAspect,size),flare=flares[i],tempPosition.set(flare.matrixWorld.elements[12],flare.matrixWorld.elements[13],flare.matrixWorld.elements[14]),tempPosition.applyMatrix4(camera.matrixWorldInverse),tempPosition.applyProjection(camera.projectionMatrix),screenPosition.copy(tempPosition),screenPositionPixels.x=screenPosition.x*halfViewportWidth+halfViewportWidth,screenPositionPixels.y=screenPosition.y*halfViewportHeight+halfViewportHeight,_lensFlare.hasVertexTexture||screenPositionPixels.x>0&&screenPositionPixels.x<viewportWidth&&screenPositionPixels.y>0&&screenPositionPixels.y<viewportHeight)for(_gl.activeTexture(_gl.TEXTURE1),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture),_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGB,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0),_gl.uniform1i(uniforms.renderType,0),_gl.uniform2f(uniforms.scale,scale.x,scale.y),_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z),_gl.disable(_gl.BLEND),_gl.enable(_gl.DEPTH_TEST),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0),_gl.activeTexture(_gl.TEXTURE0),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture),_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0),_gl.uniform1i(uniforms.renderType,1),_gl.disable(_gl.DEPTH_TEST),_gl.activeTexture(_gl.TEXTURE1),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0),flare.positionScreen.copy(screenPosition),flare.customUpdateCallback?flare.customUpdateCallback(flare):flare.updateLensFlares(),_gl.uniform1i(uniforms.renderType,2),_gl.enable(_gl.BLEND),j=0,jl=flare.lensFlares.length;jl>j;j++)sprite=flare.lensFlares[j],sprite.opacity>.001&&sprite.scale>.001&&(screenPosition.x=sprite.x,screenPosition.y=sprite.y,screenPosition.z=sprite.z,size=sprite.size*sprite.scale/viewportHeight,scale.x=size*invAspect,scale.y=size,_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z),_gl.uniform2f(uniforms.scale,scale.x,scale.y),_gl.uniform1f(uniforms.rotation,sprite.rotation),_gl.uniform1f(uniforms.opacity,sprite.opacity),_gl.uniform3f(uniforms.color,sprite.color.r,sprite.color.g,sprite.color.b),_renderer.setBlending(sprite.blending,sprite.blendEquation,sprite.blendSrc,sprite.blendDst),_renderer.setTexture(sprite.texture,1),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0));_gl.enable(_gl.CULL_FACE),_gl.enable(_gl.DEPTH_TEST),_gl.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function createVirtualLight(light,cascade){var virtualLight=new THREE.DirectionalLight;virtualLight.isVirtual=!0,virtualLight.onlyShadow=!0,virtualLight.castShadow=!0,virtualLight.shadowCameraNear=light.shadowCameraNear,virtualLight.shadowCameraFar=light.shadowCameraFar,virtualLight.shadowCameraLeft=light.shadowCameraLeft,virtualLight.shadowCameraRight=light.shadowCameraRight,virtualLight.shadowCameraBottom=light.shadowCameraBottom,virtualLight.shadowCameraTop=light.shadowCameraTop,virtualLight.shadowCameraVisible=light.shadowCameraVisible,virtualLight.shadowDarkness=light.shadowDarkness,virtualLight.shadowBias=light.shadowCascadeBias[cascade],virtualLight.shadowMapWidth=light.shadowCascadeWidth[cascade],virtualLight.shadowMapHeight=light.shadowCascadeHeight[cascade],virtualLight.pointsWorld=[],virtualLight.pointsFrustum=[];for(var pointsWorld=virtualLight.pointsWorld,pointsFrustum=virtualLight.pointsFrustum,i=0;8>i;i++)pointsWorld[i]=new THREE.Vector3,pointsFrustum[i]=new THREE.Vector3;var nearZ=light.shadowCascadeNearZ[cascade],farZ=light.shadowCascadeFarZ[cascade];return pointsFrustum[0].set(-1,-1,nearZ),pointsFrustum[1].set(1,-1,nearZ),pointsFrustum[2].set(-1,1,nearZ),pointsFrustum[3].set(1,1,nearZ),pointsFrustum[4].set(-1,-1,farZ),pointsFrustum[5].set(1,-1,farZ),pointsFrustum[6].set(-1,1,farZ),pointsFrustum[7].set(1,1,farZ),virtualLight}function updateVirtualLight(light,cascade){var virtualLight=light.shadowCascadeArray[cascade];virtualLight.position.copy(light.position),virtualLight.target.position.copy(light.target.position),virtualLight.lookAt(virtualLight.target),virtualLight.shadowCameraVisible=light.shadowCameraVisible,virtualLight.shadowDarkness=light.shadowDarkness,virtualLight.shadowBias=light.shadowCascadeBias[cascade];var nearZ=light.shadowCascadeNearZ[cascade],farZ=light.shadowCascadeFarZ[cascade],pointsFrustum=virtualLight.pointsFrustum;pointsFrustum[0].z=nearZ,pointsFrustum[1].z=nearZ,pointsFrustum[2].z=nearZ,pointsFrustum[3].z=nearZ,pointsFrustum[4].z=farZ,pointsFrustum[5].z=farZ,pointsFrustum[6].z=farZ,pointsFrustum[7].z=farZ}function updateShadowCamera(camera,light){var shadowCamera=light.shadowCamera,pointsFrustum=light.pointsFrustum,pointsWorld=light.pointsWorld;_min.set(1/0,1/0,1/0),_max.set(-1/0,-1/0,-1/0);for(var i=0;8>i;i++){var p=pointsWorld[i];p.copy(pointsFrustum[i]),THREE.ShadowMapPlugin.__projector.unprojectVector(p,camera),p.applyMatrix4(shadowCamera.matrixWorldInverse),p.x<_min.x&&(_min.x=p.x),p.x>_max.x&&(_max.x=p.x),p.y<_min.y&&(_min.y=p.y),p.y>_max.y&&(_max.y=p.y),p.z<_min.z&&(_min.z=p.z),p.z>_max.z&&(_max.z=p.z)}shadowCamera.left=_min.x,shadowCamera.right=_max.x,shadowCamera.top=_max.y,shadowCamera.bottom=_min.y,shadowCamera.updateProjectionMatrix()}function getObjectMaterial(object){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[0]:object.material}var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_depthMaterialSkin,_depthMaterialMorphSkin,_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4,_min=new THREE.Vector3,_max=new THREE.Vector3,_matrixPosition=new THREE.Vector3;this.init=function(renderer){_gl=renderer.context,_renderer=renderer;var depthShader=THREE.ShaderLib.depthRGBA,depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms}),_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:!0}),_depthMaterialSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,skinning:!0}),_depthMaterialMorphSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:!0,skinning:!0}),_depthMaterial._shadowPass=!0,_depthMaterialMorph._shadowPass=!0,_depthMaterialSkin._shadowPass=!0,_depthMaterialMorphSkin._shadowPass=!0},this.render=function(scene,camera){_renderer.shadowMapEnabled&&_renderer.shadowMapAutoUpdate&&this.update(scene,camera)},this.update=function(scene,camera){var i,il,j,jl,n,shadowMap,shadowMatrix,shadowCamera,buffer,material,webglObject,object,light,renderList,lights=[],k=0,fog=null;for(_gl.clearColor(1,1,1,1),_gl.disable(_gl.BLEND),_gl.enable(_gl.CULL_FACE),_gl.frontFace(_gl.CCW),_gl.cullFace(_renderer.shadowMapCullFace===THREE.CullFaceFront?_gl.FRONT:_gl.BACK),_renderer.setDepthTest(!0),i=0,il=scene.__lights.length;il>i;i++)if(light=scene.__lights[i],light.castShadow)if(light instanceof THREE.DirectionalLight&&light.shadowCascade)for(n=0;n<light.shadowCascadeCount;n++){var virtualLight;if(light.shadowCascadeArray[n])virtualLight=light.shadowCascadeArray[n];else{virtualLight=createVirtualLight(light,n),virtualLight.originalCamera=camera;var gyro=new THREE.Gyroscope;gyro.position=light.shadowCascadeOffset,gyro.add(virtualLight),gyro.add(virtualLight.target),camera.add(gyro),light.shadowCascadeArray[n]=virtualLight,console.log("Created virtualLight",virtualLight)}updateVirtualLight(light,n),lights[k]=virtualLight,k++}else lights[k]=light,k++;for(i=0,il=lights.length;il>i;i++){if(light=lights[i],!light.shadowMap){var shadowFilter=THREE.LinearFilter;_renderer.shadowMapType===THREE.PCFSoftShadowMap&&(shadowFilter=THREE.NearestFilter);var pars={minFilter:shadowFilter,magFilter:shadowFilter,format:THREE.RGBAFormat};light.shadowMap=new THREE.WebGLRenderTarget(light.shadowMapWidth,light.shadowMapHeight,pars),light.shadowMapSize=new THREE.Vector2(light.shadowMapWidth,light.shadowMapHeight),light.shadowMatrix=new THREE.Matrix4}if(!light.shadowCamera){if(light instanceof THREE.SpotLight)light.shadowCamera=new THREE.PerspectiveCamera(light.shadowCameraFov,light.shadowMapWidth/light.shadowMapHeight,light.shadowCameraNear,light.shadowCameraFar);else{if(!(light instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}light.shadowCamera=new THREE.OrthographicCamera(light.shadowCameraLeft,light.shadowCameraRight,light.shadowCameraTop,light.shadowCameraBottom,light.shadowCameraNear,light.shadowCameraFar)}scene.add(light.shadowCamera),scene.autoUpdate===!0&&scene.updateMatrixWorld()}for(light.shadowCameraVisible&&!light.cameraHelper&&(light.cameraHelper=new THREE.CameraHelper(light.shadowCamera),light.shadowCamera.add(light.cameraHelper)),light.isVirtual&&virtualLight.originalCamera==camera&&updateShadowCamera(camera,light),shadowMap=light.shadowMap,shadowMatrix=light.shadowMatrix,shadowCamera=light.shadowCamera,shadowCamera.position.getPositionFromMatrix(light.matrixWorld),_matrixPosition.getPositionFromMatrix(light.target.matrixWorld),shadowCamera.lookAt(_matrixPosition),shadowCamera.updateMatrixWorld(),shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld),light.cameraHelper&&(light.cameraHelper.visible=light.shadowCameraVisible),light.shadowCameraVisible&&light.cameraHelper.update(),shadowMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),shadowMatrix.multiply(shadowCamera.projectionMatrix),shadowMatrix.multiply(shadowCamera.matrixWorldInverse),_projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),_renderer.setRenderTarget(shadowMap),_renderer.clear(),renderList=scene.__webglObjects,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,webglObject.render=!1,object.visible&&object.castShadow&&((object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)&&object.frustumCulled&&!_frustum.intersectsObject(object)||(object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld),webglObject.render=!0));var objectMaterial,useMorphing,useSkinning;for(j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],webglObject.render&&(object=webglObject.object,buffer=webglObject.buffer,objectMaterial=getObjectMaterial(object),useMorphing=object.geometry.morphTargets.length>0&&objectMaterial.morphTargets,useSkinning=object instanceof THREE.SkinnedMesh&&objectMaterial.skinning,material=object.customDepthMaterial?object.customDepthMaterial:useSkinning?useMorphing?_depthMaterialMorphSkin:_depthMaterialSkin:useMorphing?_depthMaterialMorph:_depthMaterial,buffer instanceof THREE.BufferGeometry?_renderer.renderBufferDirect(shadowCamera,scene.__lights,fog,material,buffer,object):_renderer.renderBuffer(shadowCamera,scene.__lights,fog,material,buffer,object));for(renderList=scene.__webglObjectsImmediate,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,object.visible&&object.castShadow&&(object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld),_renderer.renderImmediateObject(shadowCamera,scene.__lights,fog,_depthMaterial,object))}var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha),_gl.enable(_gl.BLEND),_renderer.shadowMapCullFace===THREE.CullFaceFront&&_gl.cullFace(_gl.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function createProgram(shader,precision){var program=_gl.createProgram(),fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER),vertexShader=_gl.createShader(_gl.VERTEX_SHADER),prefix="precision "+precision+" float;\n";return _gl.shaderSource(fragmentShader,prefix+shader.fragmentShader),_gl.shaderSource(vertexShader,prefix+shader.vertexShader),_gl.compileShader(fragmentShader),_gl.compileShader(vertexShader),_gl.attachShader(program,fragmentShader),_gl.attachShader(program,vertexShader),_gl.linkProgram(program),program}function painterSortStable(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var _gl,_renderer,_precision,_sprite={};this.init=function(renderer){_gl=renderer.context,_renderer=renderer,_precision=renderer.getPrecision(),_sprite.vertices=new Float32Array(16),_sprite.faces=new Uint16Array(6);var i=0;_sprite.vertices[i++]=-.5,_sprite.vertices[i++]=-.5,_sprite.vertices[i++]=0,_sprite.vertices[i++]=0,_sprite.vertices[i++]=.5,_sprite.vertices[i++]=-.5,_sprite.vertices[i++]=1,_sprite.vertices[i++]=0,_sprite.vertices[i++]=.5,_sprite.vertices[i++]=.5,_sprite.vertices[i++]=1,_sprite.vertices[i++]=1,_sprite.vertices[i++]=-.5,_sprite.vertices[i++]=.5,_sprite.vertices[i++]=0,_sprite.vertices[i++]=1,i=0,_sprite.faces[i++]=0,_sprite.faces[i++]=1,_sprite.faces[i++]=2,_sprite.faces[i++]=0,_sprite.faces[i++]=2,_sprite.faces[i++]=3,_sprite.vertexBuffer=_gl.createBuffer(),_sprite.elementBuffer=_gl.createBuffer(),_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,_sprite.vertices,_gl.STATIC_DRAW),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_sprite.faces,_gl.STATIC_DRAW),_sprite.program=createProgram(THREE.ShaderSprite.sprite,_precision),_sprite.attributes={},_sprite.uniforms={},_sprite.attributes.position=_gl.getAttribLocation(_sprite.program,"position"),_sprite.attributes.uv=_gl.getAttribLocation(_sprite.program,"uv"),_sprite.uniforms.uvOffset=_gl.getUniformLocation(_sprite.program,"uvOffset"),_sprite.uniforms.uvScale=_gl.getUniformLocation(_sprite.program,"uvScale"),_sprite.uniforms.rotation=_gl.getUniformLocation(_sprite.program,"rotation"),_sprite.uniforms.scale=_gl.getUniformLocation(_sprite.program,"scale"),_sprite.uniforms.alignment=_gl.getUniformLocation(_sprite.program,"alignment"),_sprite.uniforms.halfViewport=_gl.getUniformLocation(_sprite.program,"halfViewport"),_sprite.uniforms.color=_gl.getUniformLocation(_sprite.program,"color"),_sprite.uniforms.map=_gl.getUniformLocation(_sprite.program,"map"),_sprite.uniforms.opacity=_gl.getUniformLocation(_sprite.program,"opacity"),_sprite.uniforms.useScreenCoordinates=_gl.getUniformLocation(_sprite.program,"useScreenCoordinates"),_sprite.uniforms.sizeAttenuation=_gl.getUniformLocation(_sprite.program,"sizeAttenuation"),_sprite.uniforms.screenPosition=_gl.getUniformLocation(_sprite.program,"screenPosition"),_sprite.uniforms.modelViewMatrix=_gl.getUniformLocation(_sprite.program,"modelViewMatrix"),_sprite.uniforms.projectionMatrix=_gl.getUniformLocation(_sprite.program,"projectionMatrix"),_sprite.uniforms.fogType=_gl.getUniformLocation(_sprite.program,"fogType"),_sprite.uniforms.fogDensity=_gl.getUniformLocation(_sprite.program,"fogDensity"),_sprite.uniforms.fogNear=_gl.getUniformLocation(_sprite.program,"fogNear"),_sprite.uniforms.fogFar=_gl.getUniformLocation(_sprite.program,"fogFar"),_sprite.uniforms.fogColor=_gl.getUniformLocation(_sprite.program,"fogColor"),_sprite.uniforms.alphaTest=_gl.getUniformLocation(_sprite.program,"alphaTest")},this.render=function(scene,camera,viewportWidth,viewportHeight){var sprites=scene.__webglSprites,nSprites=sprites.length;if(nSprites){var attributes=_sprite.attributes,uniforms=_sprite.uniforms,halfViewportWidth=.5*viewportWidth,halfViewportHeight=.5*viewportHeight;_gl.useProgram(_sprite.program),_gl.enableVertexAttribArray(attributes.position),_gl.enableVertexAttribArray(attributes.uv),_gl.disable(_gl.CULL_FACE),_gl.enable(_gl.BLEND),_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer),_gl.vertexAttribPointer(attributes.position,2,_gl.FLOAT,!1,16,0),_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,!1,16,8),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer),_gl.uniformMatrix4fv(uniforms.projectionMatrix,!1,camera.projectionMatrix.elements),_gl.activeTexture(_gl.TEXTURE0),_gl.uniform1i(uniforms.map,0);var oldFogType=0,sceneFogType=0,fog=scene.fog;fog?(_gl.uniform3f(uniforms.fogColor,fog.color.r,fog.color.g,fog.color.b),fog instanceof THREE.Fog?(_gl.uniform1f(uniforms.fogNear,fog.near),_gl.uniform1f(uniforms.fogFar,fog.far),_gl.uniform1i(uniforms.fogType,1),oldFogType=1,sceneFogType=1):fog instanceof THREE.FogExp2&&(_gl.uniform1f(uniforms.fogDensity,fog.density),_gl.uniform1i(uniforms.fogType,2),oldFogType=2,sceneFogType=2)):(_gl.uniform1i(uniforms.fogType,0),oldFogType=0,sceneFogType=0);var i,sprite,material,fogType,scale=[];for(i=0;nSprites>i;i++)sprite=sprites[i],material=sprite.material,sprite.visible&&0!==material.opacity&&(material.useScreenCoordinates?sprite.z=-sprite.position.z:(sprite._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,sprite.matrixWorld),sprite.z=-sprite._modelViewMatrix.elements[14]));for(sprites.sort(painterSortStable),i=0;nSprites>i;i++)sprite=sprites[i],material=sprite.material,sprite.visible&&0!==material.opacity&&material.map&&material.map.image&&material.map.image.width&&(_gl.uniform1f(uniforms.alphaTest,material.alphaTest),material.useScreenCoordinates===!0?(_gl.uniform1i(uniforms.useScreenCoordinates,1),_gl.uniform3f(uniforms.screenPosition,(sprite.position.x*_renderer.devicePixelRatio-halfViewportWidth)/halfViewportWidth,(halfViewportHeight-sprite.position.y*_renderer.devicePixelRatio)/halfViewportHeight,Math.max(0,Math.min(1,sprite.position.z))),scale[0]=_renderer.devicePixelRatio*sprite.scale.x,scale[1]=_renderer.devicePixelRatio*sprite.scale.y):(_gl.uniform1i(uniforms.useScreenCoordinates,0),_gl.uniform1i(uniforms.sizeAttenuation,material.sizeAttenuation?1:0),_gl.uniformMatrix4fv(uniforms.modelViewMatrix,!1,sprite._modelViewMatrix.elements),scale[0]=sprite.scale.x,scale[1]=sprite.scale.y),fogType=scene.fog&&material.fog?sceneFogType:0,oldFogType!==fogType&&(_gl.uniform1i(uniforms.fogType,fogType),oldFogType=fogType),_gl.uniform2f(uniforms.uvScale,material.uvScale.x,material.uvScale.y),_gl.uniform2f(uniforms.uvOffset,material.uvOffset.x,material.uvOffset.y),_gl.uniform2f(uniforms.alignment,material.alignment.x,material.alignment.y),_gl.uniform1f(uniforms.opacity,material.opacity),_gl.uniform3f(uniforms.color,material.color.r,material.color.g,material.color.b),_gl.uniform1f(uniforms.rotation,sprite.rotation),_gl.uniform2fv(uniforms.scale,scale),_gl.uniform2f(uniforms.halfViewport,halfViewportWidth,halfViewportHeight),_renderer.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst),_renderer.setDepthTest(material.depthTest),_renderer.setDepthWrite(material.depthWrite),_renderer.setTexture(material.map,0),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0));
_gl.enable(_gl.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function getObjectMaterial(object){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[0]:object.material}this.enabled=!1,this.renderTarget=null;var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_depthMaterialSkin,_depthMaterialMorphSkin,_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4;this.init=function(renderer){_gl=renderer.context,_renderer=renderer;var depthShader=THREE.ShaderLib.depthRGBA,depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms}),_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:!0}),_depthMaterialSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,skinning:!0}),_depthMaterialMorphSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:!0,skinning:!0}),_depthMaterial._shadowPass=!0,_depthMaterialMorph._shadowPass=!0,_depthMaterialSkin._shadowPass=!0,_depthMaterialMorphSkin._shadowPass=!0},this.render=function(scene,camera){this.enabled&&this.update(scene,camera)},this.update=function(scene,camera){var j,jl,buffer,material,webglObject,object,renderList,fog=null;for(_gl.clearColor(1,1,1,1),_gl.disable(_gl.BLEND),_renderer.setDepthTest(!0),scene.autoUpdate===!0&&scene.updateMatrixWorld(),camera.matrixWorldInverse.getInverse(camera.matrixWorld),_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),_renderer.setRenderTarget(this.renderTarget),_renderer.clear(),renderList=scene.__webglObjects,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,webglObject.render=!1,object.visible&&((object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)&&object.frustumCulled&&!_frustum.intersectsObject(object)||(object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld),webglObject.render=!0));var objectMaterial,useMorphing,useSkinning;for(j=0,jl=renderList.length;jl>j;j++)if(webglObject=renderList[j],webglObject.render){if(object=webglObject.object,buffer=webglObject.buffer,object instanceof THREE.ParticleSystem&&!object.customDepthMaterial)continue;objectMaterial=getObjectMaterial(object),objectMaterial&&_renderer.setMaterialFaces(object.material),useMorphing=object.geometry.morphTargets.length>0&&objectMaterial.morphTargets,useSkinning=object instanceof THREE.SkinnedMesh&&objectMaterial.skinning,material=object.customDepthMaterial?object.customDepthMaterial:useSkinning?useMorphing?_depthMaterialMorphSkin:_depthMaterialSkin:useMorphing?_depthMaterialMorph:_depthMaterial,buffer instanceof THREE.BufferGeometry?_renderer.renderBufferDirect(camera,scene.__lights,fog,material,buffer,object):_renderer.renderBuffer(camera,scene.__lights,fog,material,buffer,object)}for(renderList=scene.__webglObjectsImmediate,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,object.visible&&(object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld),_renderer.renderImmediateObject(camera,scene.__lights,fog,_depthMaterial,object));var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha),_gl.enable(_gl.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","uniform vec2 halfViewport;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = ( position + alignment ) * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + ( rotatedPosition / halfViewport ), screenPosition.z, 1.0 );","} else {","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","finalPosition = projectionMatrix * finalPosition;","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};